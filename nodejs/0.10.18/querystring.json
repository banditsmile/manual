{
  "source": "querystring.markdown",
  "modules": [
    {
      "textRaw": "Query String",
      "name": "querystring",
      "desc": "<pre><code>稳定度: 3 - 稳定</code></pre>\n<p>This module provides utilities for dealing with query strings.\nIt provides the following methods:\n\n</p>\n<p>这个模块提供一些处理 query string 的工具。它提供下列方法：\n\n</p>\n",
      "methods": [
        {
          "textRaw": "querystring.stringify(obj, [sep], [eq])",
          "type": "method",
          "name": "stringify",
          "desc": "<p>Serialize an object to a query string.\nOptionally override the default separator (<code>&apos;&amp;&apos;</code>) and assignment (<code>&apos;=&apos;</code>)\ncharacters.\n\n</p>\n<p>序列化一个对象到一个 query string。可以选择是否覆盖默认的分割符（<code>&apos;&amp;&apos;</code>）和分配符（<code>&apos;=&apos;</code>）。\n\n</p>\n<p>Example:\n\n</p>\n<p>示例：\n\n</p>\n<pre><code>querystring.stringify({foo: &apos;bar&apos;, baz: &apos;qux&apos;}, &apos;;&apos;, &apos;:&apos;)\n// 返回如下字串\n&apos;foo:bar;baz:qux&apos;</code></pre>\n",
          "signatures": [
            {
              "params": [
                {
                  "name": "obj"
                },
                {
                  "name": "sep",
                  "optional": true
                },
                {
                  "name": "eq",
                  "optional": true
                }
              ]
            }
          ]
        },
        {
          "textRaw": "querystring.parse(str, [sep], [eq], [options])",
          "type": "method",
          "name": "parse",
          "desc": "<p>Deserialize a query string to an object.\nOptionally override the default separator (<code>&apos;&amp;&apos;</code>) and assignment (<code>&apos;=&apos;</code>)\ncharacters.\n\n</p>\n<p>将一个 query string 反序列化为一个对象。可以选择是否覆盖默认的分割符（<code>&apos;&amp;&apos;</code>）和分配符（<code>&apos;=&apos;</code>）。\n\n</p>\n<p>Options object may contain <code>maxKeys</code> property (equal to 1000 by default), it&apos;ll\nbe used to limit processed keys. Set it to 0 to remove key count limitation.\n\n</p>\n<p>options对象可能包含<code>maxKeys</code>属性(默认为1000),它可以用来限制处理过的键(key)的数量.设为0可以去除键(key)的数量限制.\n\n</p>\n<p>Example:\n\n</p>\n<p>示例：\n\n</p>\n<pre><code>querystring.parse(&apos;foo=bar&amp;baz=qux&amp;baz=quux&amp;corge&apos;)\n// returns\n{ foo: &apos;bar&apos;, baz: [&apos;qux&apos;, &apos;quux&apos;], corge: &apos;&apos; }</code></pre>\n",
          "signatures": [
            {
              "params": [
                {
                  "name": "str"
                },
                {
                  "name": "sep",
                  "optional": true
                },
                {
                  "name": "eq",
                  "optional": true
                },
                {
                  "name": "options",
                  "optional": true
                }
              ]
            }
          ]
        }
      ],
      "properties": [
        {
          "textRaw": "querystring.escape",
          "name": "escape",
          "desc": "<p>The escape function used by <code>querystring.stringify</code>,\nprovided so that it could be overridden if necessary.\n\n</p>\n<p>供 <code>querystring.stringify</code> 使用的转意函数，在必要的时候可被重写。\n\n</p>\n"
        },
        {
          "textRaw": "querystring.unescape",
          "name": "unescape",
          "desc": "<p>The unescape function used by <code>querystring.parse</code>,\nprovided so that it could be overridden if necessary.\n\n\n</p>\n<p>供 <code>querystring.parse</code> 使用的反转意函数，在必要的时候可被重写。\n</p>\n"
        }
      ],
      "type": "module",
      "displayName": "querystring"
    }
  ]
}