{
  "source": "string_decoder.markdown",
  "modules": [
    {
      "textRaw": "字符串解码器",
      "name": "字符串解码器",
      "desc": "<pre><code>稳定度: 3 - 稳定</code></pre>\n<p>To use this module, do <code>require(&apos;string_decoder&apos;)</code>. StringDecoder decodes a\nbuffer to a string. It is a simple interface to <code>buffer.toString()</code> but provides\nadditional support for utf8.\n\n</p>\n<p>通过 <code>require(&apos;string_decoder&apos;)</code> 使用这个模块。这个模块将一个 Buffer 解码成一个字符串。他是 <code>buffer.toString()</code> 的一个简单接口，但提供对 utf8 的支持。\n\n</p>\n<pre><code>var euro = new Buffer([0xE2, 0x82, 0xAC]);\nconsole.log(decoder.write(euro));</code></pre>\n",
      "modules": [
        {
          "textRaw": "类: StringDecoder",
          "name": "类:_stringdecoder",
          "desc": "<p>Accepts a single argument, <code>encoding</code> which defaults to <code>utf8</code>.\n\n</p>\n<p>接受 <code>encoding</code> 一个参数，默认是 <code>utf8</code>。\n\n</p>\n",
          "methods": [
            {
              "textRaw": "decoder.write(buffer)",
              "type": "method",
              "name": "write",
              "desc": "<p>Returns a decoded string.\n\n</p>\n<p>返回解码后的字符串。\n\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "buffer"
                    }
                  ]
                }
              ]
            },
            {
              "textRaw": "decoder.end()",
              "type": "method",
              "name": "end",
              "desc": "<p>Returns any trailing bytes that were left in the buffer.\n\n\n</p>\n<p>返回 Buffer 中剩下的末尾字节。</p>\n",
              "signatures": [
                {
                  "params": []
                }
              ]
            }
          ],
          "type": "module",
          "displayName": "类: StringDecoder"
        }
      ],
      "type": "module",
      "displayName": "字符串解码器"
    }
  ]
}