<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=utf-8'>

	<title>Object.toQueryString - Prototype JavaScript 框架</title>
	<link href="../../CSS/main.css"  type='text/css' rel='Stylesheet' />
</head>
<body>
	<!-- main -->
	<div id="main" class="clearfix">
		<h2>toQueryString<div class="box">1.6</div></h2>
		<div id="excerpt">
			<pre><code class="ebnf">toQueryString(obj) -> String</code></pre>
			<p>将一个对象转换为 URL 编码字符串形式。</p>
		</div>
		<div id="abody">
			<p>
				这是一种串行化的形式，常用于提供复合的参数集，例如为 Ajax 命名空间中的那些对象提供参数（如
				<a href="../ajax/request.htm" >Ajax.Request</a> 的 <code>parameters</code> 选项）。
			</p>
			<p>
				值为 <code>undefined</code> 的“键/值”对串行化后只保留了键名称。值为数组的“键/值”对会将数组的每个元素串行化为一个键值对。
				所有的值都会使用 JavaScript 原生的 <code>encodeURIComponent</code> 方法获取 URI 编码。
			</p>
			<p>
				除数组外（数组是按照元素在数组中的顺序进行串行化的），串行化后键值对的顺序并不保证总是一致的
				（并且通常情况下查询字符串中键值对的顺序也是无关紧要的）。
			</p>
			<h3>样例</h3>
			<pre><code class="javascript">Object.toQueryString({
	action: 'ship', 
	order_id: 123, 
	fees: ['f1', 'f2'], 
	'label': 'a demo'
}) 
// -> 'action=ship&order_id=123&fees=f1&fees=f2&label=a%20demo'</code></pre>
		</div>
	</div>
	<!-- /main -->
</body>
</html>
