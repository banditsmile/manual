<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=utf-8'>

	<title>Ajax - Prototype JavaScript 框架</title>
	<link href="../CSS/main.css"  type='text/css' rel='Stylesheet' />
</head>
<body>
	<!-- main -->
	<div id="main" class="clearfix">
		<h2>Ajax</h2>
		<div id="method-list">
			<ul>
				<li><a href="ajax.htm#method-ajax options">Ajax Options</a></li>
				<li><a href="ajax.htm#method-ajax.periodicalupdater">Ajax.PeriodicalUpdater</a></li>
				<li><a href="ajax.htm#method-ajax.request">Ajax.Request</a></li>
				<li><a href="ajax.htm#method-ajax.responders">Ajax.Responders</a></li>
				<li><a href="ajax.htm#method-ajax.response">Ajax.Response</a></li>
				<li><a href="ajax.htm#method-ajax.updater">Ajax.Updater</a></li>
			</ul>
		</div>
		<div id="abody">
			<p>
				Prototype 提供三种对象处理 AJAX 通信。使用 Prototype，对 Web 应用进行 AJAX 化非常简单！
				全部三种 Ajax 通信对象共享一个公共的选项集合，我们对这些选项会分别进行说明。
			</p>
			<p>
				本文仅为你提供很少的几个样例，若要循序渐进的学习本节讲述的内容，请参考
				<a href="http://www.prototypejs.org/learn/introduction-to-ajax" >指南风格的文章</a>。
			</p>
		</div>
		<div id="method-excerpts">
			<h3>Methods</h3>
			<div id="method-ajax options" class="mexcerpt">
				<h4>
					<a href="ajax/options.htm" >Ajax Options</a>
				</h4>
				<div class="mexcerpt-cnt">
					<p>描述了所有核心选项（被所有 AJAX 请求共享）和回调函数的详细信息。</p>
				</div>
			</div>
			<div id="method-ajax.periodicalupdater" class="mexcerpt">
				<h4><a href="ajax/periodicalUpdater.htm" >Ajax.PeriodicalUpdater</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">new Ajax.PeriodicalUpdater(container, url[, options])</code></pre>
					<p>
						周期性地执行一个 AJAX 请求并根据返回的响应文本更新指定容器的内容。它提供了一种“退化（decay）”机制
						—— 当相邻两次请求的响应内容无变化时，会自动增加后续请求的时间间隔。
					</p>
				</div>
			</div>
			<div id="method-ajax.request" class="mexcerpt">
				<h4>
					<a href="ajax/request.htm" >Ajax.Request</a>
				</h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">new Ajax.Request(url[, options])</code></pre>
					<p>创建并处理一个 AJAX 请求。</p>
				</div>
			</div>
			<div id="method-ajax.responders" class="mexcerpt">
				<h4>
					<a href="ajax/responders.htm" >Ajax.Responders</a>
				</h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">Ajax.Responders.register(responder)
Ajax.Responders.unregister(responder)</code></pre>
					<p>
						维护一个全局的侦听器队列，它能捕获到所有基于 Prototype 的 AJAX 请求的每一个步骤。
					</p>
				</div>
			</div>
			<div id="method-ajax.response" class="mexcerpt">
				<h4>
					<a href="ajax/response.htm" >Ajax.Response</a>
					<div class="box">1.6</div>
				</h4>
				<div class="mexcerpt-cnt">
					<p>该对象被传递到所有 Ajax 请求的回调函数中作为第一个参数。</p>
				</div>
			</div>
			<div id="method-ajax.updater" class="mexcerpt">
				<h4>
					<a href="ajax/updater.htm" >Ajax.Updater</a>
				</h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">new Ajax.Updater(container, url[, options])</code></pre>
					<p>执行一个 AJAX 请求，并根据返回的响应文本更新指定容器的内容。</p>
				</div>
			</div>
		</div>
	</div>
	<!-- /main -->
</body>
</html>
