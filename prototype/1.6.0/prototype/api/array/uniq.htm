<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=utf-8'>

	<title>Array.uniq - Prototype JavaScript 框架</title>
	<link href="../../CSS/main.css"  type='text/css' rel='Stylesheet' />
</head>
<body>
	<!-- main -->
	<div id="main" class="clearfix">
		<h2>uniq</h2>
		<div id="excerpt">
			<pre><code class="ebnf">uniq() -> newArray</code></pre>
			<p>返回去除数组重复元素后的版本。如果没有重复的元素，返回原始数组本身。</p>
		</div>
		<div id="abody">
			<h3>样例</h3>
			<pre><code class="javascript">['Sam', 'Justin', 'Andrew', 'Dan', 'Sam'].uniq(); 
// -> ['Sam', 'Justin', 'Andrew', 'Dan'] 
['Prototype', 'prototype'].uniq(); 
// -> ['Prototype', 'prototype'] 因为字符串比较是区分大小写的 </code></pre>
			<h3>性能考虑</h3>
			<p>对于具有重复元素的大数组，该方法有巨大的潜在性能开销。</p>
			<ul>
				<li>因为它不要求数组已排序，所以它的复杂度为 O(n^2)</li>
				<li>
					因为该方法代码中使用了 JavaScript 的 <code>Array.concat</code> 方法，所以在遇到一个新值（不在已有的结果数组中的值）时，
					会产生一个新的临时数组用于暂存中间结果。
				</li>
			</ul>
			<p>可以设计更为有效的实现，如果一个好的优化方案被认可，将会同步更新该页的内容。</p>
		</div>
	</div>
	<!-- /main -->
</body>
</html>
