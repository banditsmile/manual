<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=utf-8'>

	<title>String - Prototype JavaScript 框架</title>
	<link href="../CSS/main.css"  type='text/css' rel='Stylesheet' />
</head>
<body>
	<!-- main -->
	<div id="main" class="clearfix">
		<h2>String</h2>
		<div id="method-list">
			<ul>
				<li><a href="string.htm#method-blank">blank</a></li>
				<li><a href="string.htm#method-camelize">camelize</a></li>
				<li><a href="string.htm#method-capitalize">capitalize</a></li>
				<li><a href="string.htm#method-dasherize">dasherize</a></li>
				<li><a href="string.htm#method-empty">empty</a></li>
				<li><a href="string.htm#method-endswith">endsWith</a></li>
				<li><a href="string.htm#method-escapehtml">escapeHTML</a></li>
				<li><a href="string.htm#method-evaljson">evalJSON</a></li>
				<li><a href="string.htm#method-evalscripts">evalScripts</a></li>
				<li><a href="string.htm#method-extractscripts">extractScripts</a></li>
				<li><a href="string.htm#method-gsub">gsub</a></li>
				<li><a href="string.htm#method-include">include</a></li>
				<li><a href="string.htm#method-inspect">inspect</a></li>
				<li><a href="string.htm#method-interpolate">interpolate</a></li>
				<li><a href="string.htm#method-isjson">isJSON</a></li>
				<li><a href="string.htm#method-parsequery">parseQuery</a></li>
				<li><a href="string.htm#method-scan">scan</a></li>
				<li><a href="string.htm#method-startswith">startsWith</a></li>
				<li><a href="string.htm#method-strip">strip</a></li>
				<li><a href="string.htm#method-stripscripts">stripScripts</a></li>
				<li><a href="string.htm#method-striptags">stripTags</a></li>
				<li><a href="string.htm#method-sub">sub</a></li>
				<li><a href="string.htm#method-succ">succ</a></li>
				<li><a href="string.htm#method-times">times</a></li>
				<li><a href="string.htm#method-toarray">toArray</a></li>
				<li><a href="string.htm#method-tojson">toJSON</a></li>
				<li><a href="string.htm#method-toqueryparams">toQueryParams</a></li>
				<li><a href="string.htm#method-truncate">truncate</a></li>
				<li><a href="string.htm#method-underscore">underscore</a></li>
				<li><a href="string.htm#method-unescapehtml">unescapeHTML</a></li>
				<li><a href="string.htm#method-unfilterjson">unfilterJSON</a></li>
			</ul>
		</div>
		<div id="abody">
			<p>
				Prototype 通过 <code>String.prototype</code> 添加了一系列的方法，增强了 <code>String</code> 对象的功能。
				厌倦了手动移除字符串首尾的空格吗？试一下我们的 <a href="string/strip.htm" >String#strip</a> 方法。
				想要把 <code>replace</code> 方法替换掉吗？注意一下 <a href="string/sub.htm" >String#sub</a> 和
				<a href="string/gsub.htm" >String#gsub</a> 方法。需要将字符串解析为一个查询字符串吗？我们刚好有
				<a href="string/toQueryParams.htm" >String#toQueryParams</a> 方法。
			</p>
		</div>
		<div id="method-excerpts">
			<h3>方法</h3>
			<div id="method-blank" class="mexcerpt">
				<h4><a href="string/blank.htm" >blank</a><div class="box">1.5.1</div></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">blank() -> Boolean</code></pre>
					<p>检查字符串是否为空或只包含空白符。</p>
				</div>
			</div>
			<div id="method-camelize" class="mexcerpt">
				<h4><a href="string/camelize.htm" >camelize</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">camelize() -> string</code></pre>
					<p>将一个用横线分隔的字符串转换为 Camel 形式。如 <code>'foo-bar'</code> 将被转换为 <code>'fooBar'</code>。</p>
				</div>
			</div>
			<div id="method-capitalize" class="mexcerpt">
				<h4><a href="string/capitalize.htm" >capitalize</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">capitalize() -> string</code></pre>
					<p>将一个字符串的首字母转换为大写，其它的字母全部转为小写。</p>
				</div>
			</div>
			<div id="method-dasherize" class="mexcerpt">
				<h4><a href="string/dasherize.htm" >dasherize</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">dasherize() -> string</code></pre>
					<p>将字符串中的下划线全部替换为横线（<code>"_"</code> 替换为 <code>"-"</code>）。</p>
				</div>
			</div>
			<div id="method-empty" class="mexcerpt">
				<h4><a href="string/empty.htm" >empty</a><div class="box">1.5.1</div></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">empty() -> Boolean</code></pre>
					<p>检查字符串是否为空。</p>
				</div>
			</div>
			<div id="method-endswith" class="mexcerpt">
				<h4><a href="string/endsWith.htm" >endsWith</a><div class="box">1.5.1</div></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">endsWith(substring) -> Boolean</code></pre>
					<p>检查字符串是否以 <code>substring</code> 作为结尾。</p>
				</div>
			</div>
			<div id="method-escapehtml" class="mexcerpt">
				<h4><a href="string/escapeHTML.htm" >escapeHTML</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">escapeHTML() -> string</code></pre>
					<p>将 HTML 特殊字符转换为它们的等价实体。</p>
				</div>
			</div>
			<div id="method-evaljson" class="mexcerpt">
				<h4><a href="string/evalJSON.htm" >evalJSON</a><div class="box">1.5.1</div></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">evalJSON([sanitize = false]) -> object</code></pre>
					<p>
						执行一个 JSON 格式的字符串，并返回结果对象。如果可选的参数 <code>sanitize</code> 被设置为
						<code>true</code>，则会检测字符串中是否包含恶意或错误代码，若检测到，则会停止字符串的执行，
						不再调用 <code>eval</code>。
					</p>
				</div>
			</div>
			<div id="method-evalscripts" class="mexcerpt">
				<h4><a href="string/evalScripts.htm" >evalScripts</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">evalScripts() -> [returnedValue...]</code></pre>
					<p>
						执行字符串中包含的所有 <code>script</code> 块的内容。返回一个数组，该数组包含每个
						<code>script</code> 执行后返回的值。						
					</p>
				</div>
			</div>
			<div id="method-extractscripts" class="mexcerpt">
				<h4><a href="string/extractScripts.htm" >extractScripts</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">extractScripts() -> [script...]</code></pre>
					<p>
						提取出字符串中包含的所有 <code>script</code> 的内容，并将之返回作为一个字符串数组。
					</p>
				</div>
			</div>
			<div id="method-gsub" class="mexcerpt">
				<h4><a href="string/gsub.htm" >gsub</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">gsub(pattern, replacement) -> string</code></pre>
					<p>
						将字符串中所有与 <code>pattern</code> 指定的模式匹配的子串全部用 <code>replacement</code>
						替换掉。<code>replacement</code> 可以是一个普通的字符串、一个回调函数或是一个<a href="template.htm" >
						Template</a> 字符串。<code>pattern</code> 可以是一个字符串或是一个正则表达式。
					</p>
				</div>
			</div>
			<div id="method-include" class="mexcerpt">
				<h4><a href="string/include.htm" >include</a><div class="box">1.5.1</div></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">include(substring) -> Boolean</code></pre>
					<p>检查字符串是否包含子串 <code>substring</code>。</p>
				</div>
			</div>
			<div id="method-inspect" class="mexcerpt">
				<h4><a href="string/inspect.htm" >inspect</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">inspect([useDoubleQuotes = false]) -> String</code></pre>
					<p>
						返回该字符串针对调试的字符串表现形式（即用单引号或双引号包括起来，并使用 '\' 对特殊字符进行转义）。
					</p>
				</div>
			</div>
			<div id="method-interpolate" class="mexcerpt">
				<h4><a href="string/interpolate.htm" >interpolate</a><div class="box">1.6</div></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">interpolate(object[, pattern]) -> string</code></pre>
					<p>将字符串看作一个模板，并使用 <code>object</code> 的属性填充它。</p>
				</div>
			</div>
			<div id="method-isjson" class="mexcerpt">
				<h4><a href="string/isJSON.htm" >isJSON</a><div class="box">1.5.1.1</div></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">isJSON() -> boolean</code></pre>
					<p>
						使用正则表达式检测字符串是否是合法的 JSON 格式。这是一个在内部使用的安全检测方法。
					</p>
				</div>
			</div>
			<div id="method-parsequery" class="mexcerpt">
				<h4><a href="string/parseQuery.htm" >parseQuery</a></h4>
				<div class="mexcerpt-cnt">
					<p><a href="string/toQueryParams.htm" >toQueryParams</a> 方法的别名。</p>
				</div>
			</div>
			<div id="method-scan" class="mexcerpt">
				<h4><a href="string/scan.htm" >scan</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">scan(pattern, iterator) -> string</code></pre>
					<p>
						该方法允许遍历字符串中与参数 <code>pattern</code> 指定的模式（可以是一个字符串或是一个正则表达式）
						匹配的所有子串。返回原始字符串本身。
					</p>
				</div>
			</div>
			<div id="method-startswith" class="mexcerpt">
				<h4><a href="string/startsWith.htm" >startsWith</a><div class="box">1.5.1</div></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">startsWith(substring) -> Boolean</code></pre>
					<p>检查字符串是否以 <code>substring</code> 作为开头。</p>
				</div>
			</div>
			<div id="method-strip" class="mexcerpt">
				<h4><a href="string/strip.htm" >strip</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">strip() -> string</code></pre>
					<p>移除字符串首尾的所有空白符。</p>
				</div>
			</div>
			<div id="method-stripscripts" class="mexcerpt">
				<h4><a href="string/stripScripts.htm" >stripScripts</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">stripScripts() -> string</code></pre>
					<p>移除字符串中所有的 HTML <code>script</code> 块。</p>
				</div>
			</div>
			<div id="method-striptags" class="mexcerpt">
				<h4><a href="string/stripTags.htm" >stripTags</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">stripTags() -> string</code></pre>
					<p>移除字符串中所有的 HTML 标签。</p>
				</div>
			</div>
			<div id="method-sub" class="mexcerpt">
				<h4><a href="string/sub.htm" >sub</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">sub(pattern, replacement[, count = 1]) -> string</code></pre>
					<p>
						将字符串中前 <code>count</code> 个与 <code>pattern</code> 指定的模式匹配的子串用 <code>replacement</code>
						替换掉。<code>replacement</code> 可以是一个普通的字符串、一个回调函数或是一个<a href="template.htm" >
						Template</a> 字符串。<code>pattern</code> 可以是一个字符串或是一个正则表达式。
					</p>
				</div>
			</div>
			<div id="method-succ" class="mexcerpt">
				<h4><a href="string/succ.htm" >succ</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">succ() -> string</code></pre>
					<p>用于 <a href="objectRange.htm" >ObjectRange</a> 内部。根据 Unicode 字母表转换字符串最后的字符为后续的字符。</p>
				</div>
			</div>
			<div id="method-times" class="mexcerpt">
				<h4><a href="string/times.htm" >times</a><div class="box">1.5.1</div></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">times(count) -> string</code></pre>
					<p>将字符串重复 <code>count</code> 次。</p>
				</div>
			</div>
			<div id="method-toarray" class="mexcerpt">
				<h4><a href="string/toArray.htm" >toArray</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">toArray() -> [character...]</code></pre>
					<p>将字符串拆分为字符数组。</p>
				</div>
			</div>
			<div id="method-tojson" class="mexcerpt">
				<h4><a href="string/toJSON.htm" >toJSON</a><div class="box">1.5.1</div></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">toJSON() -> String</code></pre>
					<p>返回一个 JSON 格式的字符串。</p>
				</div>
			</div>
			<div id="method-toqueryparams" class="mexcerpt">
				<h4><a href="string/toQueryParams.htm" >toQueryParams</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">toQueryParams([separator = '&']) -> Object</code></pre>
					<p>解析一个 URI 查询字符串，并返回由“参数/值”对组成的对象。</p>
				</div>
			</div>
			<div id="method-truncate" class="mexcerpt">
				<h4><a href="string/truncate.htm" >truncate</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">truncate([length = 30[, suffix = '...']]) -> string</code></pre>
					<p>
						将字符串截短为指定的长度（<strong>注意：</strong>这里的长度包含了后缀部分），
						并添加一个后缀（表示它仅只是一个摘要）。
					</p>
				</div>
			</div>
			<div id="method-underscore" class="mexcerpt">
				<h4><a href="string/underscore.htm" >underscore</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">underscore() -> string</code></pre>
					<p>将一个 Camel 形式的字符串转换为以下划线（<code>"_"</code>）分隔的一系列单词。</p>
				</div>
			</div>
			<div id="method-unescapehtml" class="mexcerpt">
				<h4><a href="string/unescapeHTML.htm" >unescapeHTML</a></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">unescapeHTML() -> string</code></pre>
					<p>移除字符串中的标签，并将用实体表示的 HTML 特殊字符转换为它们的正常形式。</p>
				</div>
			</div>
			<div id="method-unfilterjson" class="mexcerpt">
				<h4><a href="string/unfilterjson.htm" >unfilterJSON</a><div class="box">1..5.1</div></h4>
				<div class="mexcerpt-cnt">
					<pre><code class="ebnf">unfilterJSON([filter = Prototype.JSONFilter]) -> String</code></pre>
					<p>
						移除 Ajax JSON 或 JavaScript 响应内容周围的安全注释界定符。这是供内部使用的一种安全机制。
					</p>
				</div>
			</div>
		</div>
	</div>
	<!-- /main -->
</body>
</html>
