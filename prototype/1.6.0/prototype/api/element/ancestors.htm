<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=utf-8'>

	<title>Element.ancestors - Prototype JavaScript 框架</title>
	<link href="../../CSS/main.css"  type='text/css' rel='Stylesheet' />
</head>
<body>
	<!-- main -->
	<div id="main" class="clearfix">
		<h2>ancestors</h2>
		<div id="excerpt">
			<pre><code class="ebnf">ancestors(element) -> [HTMLElement...]</code></pre>
			<p>
				返回 <code>element</code> 的所有先代节点（父节点、父节点的父节点...一直到最顶层节点），结果为一个数组，数组元素已经过
				<a href="extend.htm" >扩展</a>。
			</p>
		</div>
		<div id="abody">
			<p>
				返回数组的第一个元素是 <code>element</code> 的直接先代节点（即 <code>parentNode</code>），第二个元素是它的祖父节点，
				依此类推，直到 <code>html</code> 元素。<code>html</code> 总是数组的最后一个成员，除非你显式查找它的先代节点。
				但是你不愿意这么做，不是吗？
			</p>
			<p>注意：所有 Prototype 的 DOM 扩展方法均忽略文本节点，仅返回元素节点。</p>
			<h3>样例</h3>
			<pre><code class="html">&lt;html&gt;
	[&#8230;]
	&lt;body&gt;
		&lt;div id="father"&gt;
			&lt;div id="kid"&gt; &lt;/div&gt;
		&lt;/div&gt;
	&lt;/body&gt;
&lt;/html&gt; </code></pre>
			<pre><code class="javascript">$('kid').ancestors();
// -> [div#father, body, html]
// 记住 "body" 和 "html" 元素也包括在返回数组中
document.getElementsByTagName('html')[0].ancestors();
// -> [] </code></pre>
		</div>
	</div>
	<!-- /main -->
</body>
</html>
