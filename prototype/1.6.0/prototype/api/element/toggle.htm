<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=utf-8'>

	<title>Element.toggle - Prototype JavaScript 框架</title>
	<link href="../../CSS/main.css"  type='text/css' rel='Stylesheet' />
</head>
<body>
	<!-- main -->
	<div id="main" class="clearfix">
		<h2>toggle</h2>
		<div id="excerpt">
			<pre><code class="ebnf">toggle(element) -> HTMLElement</code></pre>
			<p>切换 <code>element</code> 的可视性（在隐藏和显示间进行切换）。</p>
		</div>
		<div id="abody">
			<h3>样例</h3>
			<pre><code class="html">&lt;div id="welcome-message"&gt;&lt;/div&gt; 
&lt;div id="error-message" style="display:none;"&gt;&lt;/div&gt; </code></pre>
			<pre><code class="javascript">$('welcome-message').toggle(); 
// -> HTMLElement（并隐藏 div#welcome-message）
$('error-message').toggle(); 
// -> HTMLElement（并显示 div#error-message）</code></pre>
			<h3>注意</h3>
			<p>
				<code>Element.toggle</code> <em>不能</em> 显示通过 CSS 样式表隐藏的元素。这不是 Prototype 的限制，而是与 CSS
				<code>display</code> 属性的解析过程有关。<br />
				<strong>译注：</strong>通过在 &lt;style&gt; 标签或外部样式表中定义 CSS 属性来隐藏元素，<code>toggle</code> 方法将不可用
				（即该方法只针对内联的 CSS <code>display</code> 属性或通过 Javascript 程序实现的隐藏有效）。
			</p>
			<pre><code class="html">&lt;style&gt; 
	#hidden-by-css { display: none; } 
&lt;/style&gt;

[&#8230;] 

&lt;div id="hidden-by-css"&gt;&lt;/div&gt; </code></pre>
			<pre><code class="javascript">$('hidden-by-css').toggle(); // 不工作 
// -> HTMLElement（div#hidden-by-css 仍然是隐藏的）</code></pre>
			<h3>后向兼容性变更</h3>
			<p class="deprecated">
				在 Prototype 的先前版本中，可以传递任意数目的元素到 <code>Element.toggle</code>、<code>Element.show</code>
				和 <code>Element.hide</code> 中，但在 1.5 版之后，这不再被支持。
			</p>
			<p>但是你可以通过 <a href="../enumerable.htm" >Enumerables</a> 实现类似的效果：</p>
			<pre><code class="javascript">['error-message', 'welcome-message'].each(Element.toggle);
// -> ['error-message', 'welcome-message'] 
// 并切换 div#error-message 和 div#confirmation-message 的可视性。</code></pre>
			<p>还有更好的方法：</p>
			<pre><code class="javascript">$('error-message', 'welcome-message').invoke('toggle');
// -> [HTMLElement, HTMLElement]（div#error-message 和 div#welcome-message） 
// 并切换 div#error-message 和 div#confirmation-message 的可视性。</code></pre>
		</div>
	</div>
	<!-- /main -->
</body>
</html>
