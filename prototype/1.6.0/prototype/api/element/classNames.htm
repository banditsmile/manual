<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=utf-8'>

	<title>Element.classNames - Prototype JavaScript 框架</title>
	<link href="../../CSS/main.css"  type='text/css' rel='Stylesheet' />
</head>
<body>
	<!-- main -->
	<div id="main" class="clearfix">
		<h2>classNames<div class="box">不推荐</div></h2>
		<div id="excerpt">
			<pre><code class="ebnf">classNames(element) -> Enumerable</code></pre>
			<p>返回一个新的 <code>ClassNames</code> 的实例，该实例是一个 <code>Enumerable</code> 对象，用于读写元素的 CSS 类名称。</p>
		</div>
		<div id="abody">
			<p class="deprecated">
				<code>Element#classNames</code> 已被抛弃。请使用 <a href="AddClassName-1.htm" >Element#addClassName</a>、
				<a href="removeClassName.htm" >Element#removeClassName</a> 和
				<a href="hasClassName.htm" >Element#hasClassName</a> 代替。<br /><br />
				如果你需要访问 CSS 类名称，并返回一个数组，试试用 <code>$w(element.className)</code>。
			</p>
			<p>
				事实上，这意味着你可以通过一个 <code>Enumerable</code> 访问元素的 CSS 类名称列表，而不像原生的 <code>className</code>
				属性仅只是一个字符串。
			</p>
			<p>
				在这个方法结束前，返回的 <code>Enumerable</code> 对象已经被扩展了一系列用于处理 CSS 类名的方法：<code>set(className)</code>、
				<code>add(className)</code> 和 <code>remove(className)</code>。这些方法被 <a href="addClassName.htm" >Element.addClassName</a>、
				<a href="toggleClassName.htm" >Element.toggleClassName</a> 和 <a href="removeClassName.htm" >Element.removeClassName</a>
				在内部调用。除非你想完成一些非常古怪的需求，否则一般不会用到它们。
			</p>
			<h3>样例</h3>
			<pre><code class="html">&lt;div id="mutsu" class="apple fruit food"&gt;&lt;/div&gt;</code></pre>
			<pre><code class="javascript">$('mutsu').classNames().inspect()
// -> "#&lt;Enumerable:['apple', 'fruit', 'food']&gt;"
// 修改 CSS 类名称
$('mutsu').className = 'fruit round'
$('mutsu').classNames().inspect()
// -> "#&lt;Enumerable:['fruit', 'food']&gt;"</code></pre>
		</div>
	</div>
	<!-- /main -->
</body>
</html>
