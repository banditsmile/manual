<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=utf-8'>

	<title>Form.serializeElements - Prototype JavaScript 框架</title>
	<link href="../../CSS/main.css"  type='text/css' rel='Stylesheet' />
</head>
<body>
	<!-- main -->
	<div id="main" class="clearfix">
		<h2>serializeElements</h2>
		<div id="excerpt">
			<pre><code class="ebnf">serializeElements(elements[, getHash = false]) -> string | object</code></pre>
			<p>
				串行化表单控件数组为字符串，以适用于 Ajax 请求（默认行为）。若指定可选的参数 <code>getHash</code> 值为
				<code>true</code>，则返回一个 Hash 对象，以控件的名称（name 属性）为“键”，控件所代表的数据为“值”。
			</p>
		</div>
		<div id="abody">
			<p>
				串行化表单应优先使用 <a href="serialize.htm" >Form.serialize</a> 方法。关于参数 <code>getHash</code> 的更进一步的信息和样例请参阅
				<a href="serialize.htm" >Form.serialize</a> 的文档。然而，通过 <code>serializeElement</code> 可以串行化指定的元素，
				允许指定表单中所有元素的一个子集来进行串行化。
			</p>
			<h3>样例</h3>
			<p>串行化所有类型为 "text" 的 INPUT 元素：</p>
			<pre><code class="javascript">Form.serializeElements($('myform').getInputs('text')) 
// -> 串行化后的数据 </code></pre>
		</div>
	</div>
	<!-- /main -->
</body>
</html>
