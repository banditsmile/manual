<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=utf-8'>

	<title>Enumerable.pluck - Prototype JavaScript 框架</title>
	<link href="../../CSS/main.css"  type='text/css' rel='Stylesheet' />
</head>
<body>
	<!-- main -->
	<div id="main" class="clearfix">
		<h2>pluck</h2>
		<div id="excerpt">
			<pre><code class="ebnf">pluck(propertyName) -> Array</code></pre>
			<p>
				<a href="collect.htm" >collect</a> 方法的一种常见使用情形的优化：获取所有元素的同一个属性的值，并返回相应的数组。
			</p>
		</div>
		<div id="abody">
			<p>
				因为它避免了因使用匿名函数（如 <a href="collect.htm" >collect</a> 方法的做法）而产生的语法闭包的开销，因此具有较好的执行效率。
			</p>
			<p>或许更重要的是它使你的源代码变得更为简捷明了。</p>
			<h3>样例</h3>
			<pre><code class="javascript">['hello', 'world', 'this', 'is', 'nice'].pluck('length')
// -> [5, 5, 4, 3, 4] 
document.getElementsByClassName('superfluous').pluck('tagName').sort().uniq()
// -> sorted list of unique canonical tag names for elements with this 
// specific CSS class...</code></pre>
			<h3>参见</h3>
			<p>
				<a href="invoke.htm" >invoke</a> 方法用于在 <code>Enumerable</code> 的元素调用相同的方法。
			</p>
		</div>
	</div>
	<!-- /main -->
</body>
</html>
