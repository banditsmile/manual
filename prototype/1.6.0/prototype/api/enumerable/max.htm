<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=utf-8'>

	<title>Enumerable.max - Prototype JavaScript 框架</title>
	<link href="../../CSS/main.css"  type='text/css' rel='Stylesheet' />
</head>
<body>
	<!-- main -->
	<div id="main" class="clearfix">
		<h2>max</h2>
		<div id="excerpt">
			<pre><code class="ebnf">max([iterator = Prototype.K[, context]]) -> maxValue</code></pre>
			<p>
				返回 <code>Enumerable</code> 中元素的最大值，若指定 <code>iterator</code>，则使用 <code>iterator</code>
				对元素进行处理，并返回处理后的最大值。如果 <code>Enumerable</code> 为空，返回 <code>undefined</code>。
			</p>
		</div>
		<div id="abody">
			<p><strong>注意</strong>：对于相等的值，返回最后一个。</p>
			<p>
				可选的 <code>context</code> 参数是 <code>iterator</code> 要绑定的对象，若设定该参数，<code>iterator</code>
				中的 <code>this</code> 关键字将指向 <code>context</code> 对象。
			</p>
			<h3>样例</h3>
			<pre><code class="javascript">$R(1,10).max() 
// -> 10 
['hello', 'world', 'gizmo'].max()
// -> 'world' 

function Person(name, age) { 
	this.name = name; 
	this.age = age; 
} 
var john = new Person('John', 20); 
var mark = new Person('Mark', 35); 
var daisy = new Person('Daisy', 22); 
[john, mark, daisy].max(function(person) { 
	return person.age;
}) 
// -> 35 </code></pre>
		</div>
	</div>
	<!-- /main -->
</body>
</html>
