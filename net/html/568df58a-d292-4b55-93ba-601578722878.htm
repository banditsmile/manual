<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>强制转换和类型转换（C# 编程指南）</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CommonUtilities.js"> </script>
    <xml>
      <MSHelp:TOCTitle Title="强制转换和类型转换" />
      <MSHelp:Keyword Index="A" Term="568df58a-d292-4b55-93ba-601578722878" />
      <MSHelp:Keyword Index="K" Term="强制转换" />
      <MSHelp:Keyword Index="K" Term="强制转换 [C#]" />
      <MSHelp:Keyword Index="K" Term="转换, 类型" />
      <MSHelp:Keyword Index="K" Term="转换类型 [C#]" />
      <MSHelp:Keyword Index="K" Term="数据类型转换" />
      <MSHelp:Keyword Index="K" Term="类型转换" />
      <MSHelp:Attr Name="RevisionNumber" Value="41" />
      <MSHelp:Attr Name="AssetID" Value="568df58a-d292-4b55-93ba-601578722878" />
      <MSHelp:Attr Name="Abstract" Value="&#xD;&#xA;                    由于 C# 是在编译时静态类型化的，因此变量在声明后就无法再次声明，或者无法用于存储其他类型的值，除非该类型可以转换为变量的类型。例如，不存在从整数到任意字符串的转换。因此，将 i 声明为整数后，就无法将字符串“Hello”赋予它，如下面的代码中所示。&#xD;&#xA;                " />
      <MSHelp:Attr Name="codelang" Value="CSharp" />
      <MSHelp:Attr Name="CommunityContent" Value="1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLangVers" Value="CSharp" />
      <MSHelp:Attr Name="DocSet" Value="C#" />
      <MSHelp:Attr Name="DocSet" Value="C# Lang" />
      <MSHelp:Attr Name="DocSet" Value="ExpressLibVS" />
      <MSHelp:Attr Name="ProgModel" Value="managed" />
      <MSHelp:Attr Name="ShippedIn" Value="vs.90" />
      <MSHelp:Attr Name="Technology" Value="ManagedCode" />
      <MSHelp:Attr Name="TopicVersion" Value="09.00.08178.10000" />
      <MSHelp:Attr Name="Catalog Container" Value="System_Default_Catalog" />
      <MSHelp:Attr Name="Content Set Container" Value="System_Default_Content_Set" />
      <MSHelp:Attr Name="TopicType" Value="kbRef" />
      <MSHelp:Attr Name="Locale" Value="zh-chs" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="“折叠”图像" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="“展开”图像" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="“复制”图像" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/copycodeHighlight.gif" title="“复制悬停”图像" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">全部折叠</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">全部展开</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：全部 </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：多个 </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual C++ </nobr></label><label id="devlangsMenuJSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：J# </nobr></label><label id="devlangsMenuJScriptLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：JScript </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
        <input id="JSharpCheckbox" type="checkbox" data="JSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JSharpCheckbox">J#</label>
        <br />
        <input id="JScriptCheckbox" type="checkbox" data="JScript,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JScriptCheckbox">JScript</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">C# 编程指南</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">强制转换和类型转换（C# 编程指南）</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="568df58a-d292-4b55-93ba-601578722878.htm#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">另请参见</a>  
<script type="text/javascript">
var fbBody = '%b8%d0%d0%bb%c4%fa%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%bf%aa%b7%a2%b0%e6%b1%e0%d0%b4%cd%c5%b6%d3%bd%ab%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%d3%c3%d3%da%b8%c4%bd%f8%ce%c4%b5%b5%a1%a3%ce%d2%c3%c7%d4%da%c9%f3%d4%c4%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%ca%b1%a3%ac%bf%c9%c4%dc%bb%e1%b8%f8%c4%fa%b7%a2%cb%cd%b5%e7%d7%d3%d3%ca%bc%fe%a3%ac%d2%d4%c7%eb%c4%fa%cc%e1%b9%a9%bd%f8%d2%bb%b2%bd%b5%c4%bd%e2%ca%cd%cb%b5%c3%f7%bb%f2%d5%df%be%cd%bd%e2%be%f6%b7%bd%b0%b8%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%ce%d2%c3%c7%b2%bb%bb%e1%bd%ab%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%d3%c3%d3%da%c8%ce%ba%ce%c6%e4%cb%fb%d3%c3%cd%be%a3%ac%b2%a2%c7%d2%d4%da%c9%f3%d4%c4%cd%ea%d6%ae%ba%f3%a3%ac%ce%d2%c3%c7%b2%bb%bb%e1%d4%d9%b1%a3%c1%f4%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%a1%a3%0d%0a%d3%d0%b9%d8%20Microsoft%20%d2%fe%cb%bd%d5%fe%b2%df%b5%c4%bd%f8%d2%bb%b2%bd%d0%c5%cf%a2%a3%ac%c7%eb%b2%ce%bc%fb%20http%3a%2f%2fprivacy.microsoft.com%2fzh-cn%2fdefault.aspx%a1%a3';
var fbSubject = 'Customer%20Feedback';
</script>
  <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);"> 发送反馈意见</a></span>
</td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <p><font color="DarkGray">更新：
                    
    2008 年 7 月
  
                </font></p><div class="introduction"><p>
                    由于 C# 是在编译时静态类型化的，因此变量在声明后就无法再次声明，或者无法用于存储其他类型的值，除非该类型可以转换为变量的类型。例如，不存在从整数到任意字符串的转换。因此，将 <span class="code">i</span> 声明为整数后，就无法将字符串“Hello”赋予它，如下面的代码中所示。
                </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>int i;
i = "Hello"; // Error: "Cannot implicitly convert type 'string' to 'int'"</pre></td></tr></table></span></div><p>
                    但有时可能需要将值复制到其他类型的变量或方法参数中。例如，您可能有一个整数变量，您需要将该变量传递给参数类型化为 <span sdata="langKeyword" value="double"><span class="keyword">double</span></span> 的方法。或者可能需要将类变量赋给接口类型的变量。这些类型的操作称为“类型转换”。在 C# 中，可以执行以下几种类型的转换：
                </p><ul><li><p>
                    <span class="label">隐式转换</span>：由于该转换是一种安全类型的转换，不会导致数据丢失，因此不需要任何特殊的语法。例如，从较小整数类型到较大整数类型的转换以及从派生类到基类的转换都是这样的转换。
                </p></li><li><p>
                    <span class="label">显式转换（强制转换）</span>：显式转换需要强制转换运算符。源变量和目标变量兼容，但由于目标变量的类型大小比源变量小（或者目标变量是源变量的一个基类），因此存在数据丢失的风险。
                </p></li><li><p>
                    <span class="label">用户定义的转换</span>：可以定义一些特殊的方法来执行用户定义的转换，从而使不具有基类–派生类关系的自定义类型之间可以显式和隐式转换。有关更多信息，请参见<span sdata="link"><a href="c5ad73a3-d57b-4d2b-b4c9-24e3c2856efc.htm">转换运算符（C# 编程指南）</a></span>。
                </p></li><li><p>
                    <span class="label">使用帮助程序类的转换</span>：若要在不兼容的类型之间进行转换，例如在整数与 <span sdata="cer" target="T:System.DateTime"><mshelp:link keywords="T:System.DateTime" tabindex="0">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>DateTime</mshelp:link></span> 对象之间转换，或者在十六进制字符串与字节数组之间转换，则可以使用 <span sdata="cer" target="T:System.BitConverter"><mshelp:link keywords="T:System.BitConverter" tabindex="0">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>BitConverter</mshelp:link></span> 类、<span sdata="cer" target="T:System.Convert"><mshelp:link keywords="T:System.Convert" tabindex="0">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Convert</mshelp:link></span> 类和内置数值类型的 <span sdata="langKeyword" value="Parse"><span class="keyword">Parse</span></span> 方法，例如 <span sdata="cer" target="Overload:System.Int32.Parse"><mshelp:link keywords="Overload:System.Int32.Parse" tabindex="0">Int32<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Parse</mshelp:link></span>。有关更多信息，请参见<span sdata="link"><a href="d6ac20e2-448e-4aea-99b9-faf04c6f1e79.htm">如何：将字节数组转换为 int（C# 编程指南）</a></span>、<span sdata="link"><a href="467b9979-86ee-4afd-b734-30299cda91e3.htm">如何：将字符串转换为整型（C# 编程指南）</a></span>和<span sdata="link"><a href="7115c49f-7d1d-40c3-8bd9-aae0cc1d46b6.htm">如何：在十六进制字符串与数值类型之间转换（C# 编程指南）</a></span>。
                </p></li></ul></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0, event)" tabindex="0"><img id="sectionToggle0" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />隐式转换</span></h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>
                    对于内置数值类型，如果要存储的值无需截断或四舍五入即可适应变量，则可以进行隐式转换。例如，<span sdata="langKeyword" value="long"><span class="keyword">long</span></span><span sdata="link"><a href="f9b24319-1f39-48be-a42b-d528ee28a7fd.htm">long（C# 参考）</a></span>类型的变量（8 字节整数）能够存储 <span sdata="langKeyword" value="int"><span class="keyword">int</span></span><span sdata="link"><a href="212447b4-5d2a-41aa-88ab-84fe710bdb52.htm">int（C# 参考）</a></span>（在 32 位计算机上为 4 字节）可存储的任何值。在下面的示例中，编译器先将右侧的值隐式转换为 <span sdata="langKeyword" value="long"><span class="keyword">long</span></span> 类型，再将它赋给 <span class="code">bigNum</span>。
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Implicit conversion. num long can</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// hold any value an int can hold, and more!</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> num = 2147483647;
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">long</span> bigNum = num;

</pre></td></tr></table></span></div></div><p>
                    有关所有隐式数值转换的完整列表，请参见<span sdata="link"><a href="72eb5a94-0491-48bf-8032-d7ebfdfeb8d8.htm">隐式数值转换表（C# 参考）</a></span>。
                </p><p>
                    对于引用类型，隐式转换始终存在于从一个类转换为该类的任何一个直接或间接的基类或接口的情况。由于派生类始终包含基类的所有成员，因此不必使用任何特殊语法。
                </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>Derived d = new Derived();
Base b = d; // Always OK.</pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle1)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle1, event)" tabindex="0"><img id="sectionToggle1" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />显式转换</span></h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>
                    但是，如果进行转换可能会导致信息丢失，则编译器会要求执行显式转换，显式转换也称为“强制转换”。强制转换是显式通知编译器您打算进行转换且您知道可能会发生数据丢失的一种方式。若要执行强制转换，请在要转换的值或变量前面的圆括号中指定要强制转换到的类型。下面的程序将 <span sdata="langKeyword" value="double"><span class="keyword">double</span></span><span sdata="link"><a href="0980e11b-6004-4102-abcf-cfc280fc6991.htm">double（C# 参考）</a></span> 强制转换为 <span sdata="langKeyword" value="int"><span class="keyword">int</span></span><span sdata="link"><a href="212447b4-5d2a-41aa-88ab-84fe710bdb52.htm">int（C# 参考）</a></span>。如不强制转换则该程序不会进行编译。
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Test
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main()
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> x = 1234.7;
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> a;
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Cast double to int.</span>
        a = (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>)x;
        System.Console.WriteLine(a);
    }
}
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Output: 1234</span>

</pre></td></tr></table></span></div></div><p>
                    有关支持的显式数值转换的列表，请参见<span sdata="link"><a href="f3bb9e76-6b92-4df7-bc36-f866c24e1dfd.htm">显式数值转换表（C# 参考）</a></span>。
                </p><p>
                    对于引用类型，如果需要从基类型转换为派生类型，则必须进行显式强制转换：
                </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>        // Create a new derived type.
        Giraffe g = new Giraffe();

        // Implicit conversion to base type is safe.
        Animal a = g;

        // Explicit conversion is required to cast
        // back to derived type. Note: This will compile but
        // throw an exception at run time if the right-side
        // object is not in fact a Giraffe.
        Giraffe g2 = (Giraffe) a;</pre></td></tr></table></span></div><p>
                    引用类型之间的强制转换操作不会更改基础对象的运行时类型；它只更改用作对该对象的引用的值的类型。有关更多信息，请参见<span sdata="link"><a href="086af969-29a5-4ce8-a993-0b7d53839dab.htm">多态性（C# 编程指南）</a></span>。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle2)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle2, event)" tabindex="0"><img id="sectionToggle2" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />运行时的类型转换异常</span></h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>
                    在某些引用类型转换中，编译器无法确定强制转换是否会有效。正确进行编译的强制转换操作有可能在运行时失败。如下面的示例所示，类型强制转换在运行时失败将导致引发 <span sdata="cer" target="T:System.InvalidCastException"><mshelp:link keywords="T:System.InvalidCastException" tabindex="0">InvalidCastException</mshelp:link></span>。
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Animal
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Eat() { Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Eating."</span>); }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">override</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> ToString()
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"I am an animal."</span>;
    }
}
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Reptile : Animal { }
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Mammal : Animal { }

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> UnSafeCast
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main()
    {            
        Test(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Mammal());

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Keep the console window open in debug mode.</span>
        System.Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Press any key to exit."</span>);
        System.Console.ReadKey();
    }

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Test(Animal a)
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Cause InvalidCastException at run time </span>
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// because Mammal is not convertible to Reptile.</span>
        Reptile r = (Reptile)a;
    }

}

</pre></td></tr></table></span></div></div><p>
                    C# 提供 <mshelp:link keywords="bc62316a-d41f-4f90-8300-c6f4f0556e43" tabindex="0">is</mshelp:link> 和 <mshelp:link keywords="a9be126b-cbf4-4990-a70d-d0e1983cad0e" tabindex="0">as</mshelp:link> 运算符，使您可以在实际执行强制转换之前测试兼容性。有关更多信息，请参见<span sdata="link"><a href="c1176cea-1426-4a44-8570-3eadafa58863.htm">如何：使用 as 和 is 运算符安全地进行强制转换（C# 编程指南）</a></span>。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle3)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle3, event)" tabindex="0"><img id="sectionToggle3" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />C# 语言规范</span></h1><div id="sectionSection3" class="section" name="collapseableSection" style=""><p>
                    有关强制转换和类型转换的更多信息，请参见 <span sdata="link"><a href="e5d5a5cc-636b-4bff-b9c8-a8edc6207c22.htm">C# 语言规范</a></span>中的以下部分。
                </p><ul><li><p>
                    7.6.6 强制转换表达式
                </p></li><li><p>
                    6.1 隐式转换
                </p></li><li><p>
                    6.2 显式转换
                </p></li></ul></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />请参见</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><h4 class="subHeading">任务</h4><div class="seeAlsoStyle"><span sdata="link"><a href="467b9979-86ee-4afd-b734-30299cda91e3.htm">如何：将字符串转换为整型（C# 编程指南）</a></span></div><h4 class="subHeading">概念</h4><div class="seeAlsoStyle"><span sdata="link"><a href="ac0f23a2-6bf3-4077-be99-538ae5fd3bc5.htm">C# 编程指南</a></span></div><div class="seeAlsoStyle"><span sdata="link"><mshelp:link keywords="49253ae6-7657-4810-82ab-1176a6feeada" tabindex="0">通用类型转换</mshelp:link></span></div><div class="seeAlsoStyle"><span sdata="link"><mshelp:link keywords="7e530bbc-0221-4d4d-9809-52f52eb353e0" tabindex="0">显式转换</mshelp:link></span></div><div class="seeAlsoStyle"><span sdata="link"><mshelp:link keywords="1dfe55f4-07a2-4b61-aabf-a8cf65783a6b" tabindex="0">导出类型转换</mshelp:link></span></div><h4 class="subHeading">参考</h4><div class="seeAlsoStyle"><span sdata="link"><a href="f782d7cc-035e-4500-b1b1-36a9881130ad.htm">类型（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="846e1f94-8a8c-42fc-a42c-fbd38e70d8cc.htm">() 运算符（C# 参考）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="cfb8f42a-e411-4db2-af9b-796b05644846.htm">explicit（C# 参考）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="34db590e-eb3a-4f11-88d0-ffb3cd753dab.htm">implicit（C# 参考）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="c5ad73a3-d57b-4d2b-b4c9-24e3c2856efc.htm">转换运算符（C# 编程指南）</a></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(changeHistoryToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(changeHistoryToggle, event)" tabindex="0"><img id="changeHistoryToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />修订记录</span></h1><div id="changeHistorySection" class="section" name="collapseableSection" style=""><div class="caption"></div><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>
                    日期
                </p></th><th><p>
                    历史记录
                </p></th><th><p>
                    原因
                </p></th></tr><tr><td><p>
                    
    <p>2008 年 7 月</p>
  
                </p></td><td><p>
                    在简介和别的部分增加了新内容。
                </p></td><td><p>
                    
    <p>内容 Bug 修复</p>
  
                </p></td></tr></table></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" title="“页脚”图像" />
        </div>
<span id="feedbackarea">将有关本主题的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);">反馈意见</a>发送给 Microsoft。</span>
</div>
    </div>
  </body>
</html>