<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>方法（C# 编程指南）</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CommonUtilities.js"> </script>
    <xml>
      <MSHelp:TOCTitle Title="方法" />
      <MSHelp:Keyword Index="A" Term="cc738f07-e8cd-4683-9585-9f40c0667c37" />
      <MSHelp:Keyword Index="K" Term="C# 语言, 方法" />
      <MSHelp:Keyword Index="K" Term="方法 [C#]" />
      <MSHelp:Attr Name="RevisionNumber" Value="21" />
      <MSHelp:Attr Name="AssetID" Value="cc738f07-e8cd-4683-9585-9f40c0667c37" />
      <MSHelp:Attr Name="Abstract" Value="&#xD;&#xA;                    “方法”是包含一系列语句的代码块。程序通过“调用”方法并指定所需的任何方法参数来执行语句。在 C# 中，每个执行指令都是在方法的上下文中执行的。Main 方法是每个 C# 应用程序的入口点，在启动程序时由公共语言运行时 (CLR) 调用。&#xD;&#xA;                " />
      <MSHelp:Attr Name="codelang" Value="CSharp" />
      <MSHelp:Attr Name="CommunityContent" Value="1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLangVers" Value="CSharp" />
      <MSHelp:Attr Name="DocSet" Value="C#" />
      <MSHelp:Attr Name="DocSet" Value="C# Lang" />
      <MSHelp:Attr Name="DocSet" Value="ExpressLibVS" />
      <MSHelp:Attr Name="ProgModel" Value="managed" />
      <MSHelp:Attr Name="ShippedIn" Value="vs.90" />
      <MSHelp:Attr Name="Technology" Value="ManagedCode" />
      <MSHelp:Attr Name="TopicVersion" Value="09.00.08178.10000" />
      <MSHelp:Attr Name="Catalog Container" Value="System_Default_Catalog" />
      <MSHelp:Attr Name="Content Set Container" Value="System_Default_Content_Set" />
      <MSHelp:Attr Name="TopicType" Value="kbRef" />
      <MSHelp:Attr Name="Locale" Value="zh-chs" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="“折叠”图像" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="“展开”图像" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="“复制”图像" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/copycodeHighlight.gif" title="“复制悬停”图像" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">全部折叠</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">全部展开</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：全部 </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：多个 </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual C++ </nobr></label><label id="devlangsMenuJSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：J# </nobr></label><label id="devlangsMenuJScriptLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：JScript </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
        <input id="JSharpCheckbox" type="checkbox" data="JSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JSharpCheckbox">J#</label>
        <br />
        <input id="JScriptCheckbox" type="checkbox" data="JScript,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JScriptCheckbox">JScript</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">C# 编程指南</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">方法（C# 编程指南）</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="cc738f07-e8cd-4683-9585-9f40c0667c37.htm#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">另请参见</a>  
<script type="text/javascript">
var fbBody = '%b8%d0%d0%bb%c4%fa%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%bf%aa%b7%a2%b0%e6%b1%e0%d0%b4%cd%c5%b6%d3%bd%ab%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%d3%c3%d3%da%b8%c4%bd%f8%ce%c4%b5%b5%a1%a3%ce%d2%c3%c7%d4%da%c9%f3%d4%c4%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%ca%b1%a3%ac%bf%c9%c4%dc%bb%e1%b8%f8%c4%fa%b7%a2%cb%cd%b5%e7%d7%d3%d3%ca%bc%fe%a3%ac%d2%d4%c7%eb%c4%fa%cc%e1%b9%a9%bd%f8%d2%bb%b2%bd%b5%c4%bd%e2%ca%cd%cb%b5%c3%f7%bb%f2%d5%df%be%cd%bd%e2%be%f6%b7%bd%b0%b8%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%ce%d2%c3%c7%b2%bb%bb%e1%bd%ab%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%d3%c3%d3%da%c8%ce%ba%ce%c6%e4%cb%fb%d3%c3%cd%be%a3%ac%b2%a2%c7%d2%d4%da%c9%f3%d4%c4%cd%ea%d6%ae%ba%f3%a3%ac%ce%d2%c3%c7%b2%bb%bb%e1%d4%d9%b1%a3%c1%f4%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%a1%a3%0d%0a%d3%d0%b9%d8%20Microsoft%20%d2%fe%cb%bd%d5%fe%b2%df%b5%c4%bd%f8%d2%bb%b2%bd%d0%c5%cf%a2%a3%ac%c7%eb%b2%ce%bc%fb%20http%3a%2f%2fprivacy.microsoft.com%2fzh-cn%2fdefault.aspx%a1%a3';
var fbSubject = 'Customer%20Feedback';
</script>
  <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);"> 发送反馈意见</a></span>
</td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <p><font color="DarkGray">更新：2007 年 11 月</font></p><div class="introduction"><p>
                    “方法”是包含一系列语句的代码块。程序通过“调用”方法并指定所需的任何方法参数来执行语句。在 C# 中，每个执行指令都是在方法的上下文中执行的。Main 方法是每个 C# 应用程序的入口点，在启动程序时由公共语言运行时 (CLR) 调用。
                </p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" title="说明" src="../icons/alert_note.gif" /><b>说明：</b></th></tr><tr><td><p>本主题讨论命名方法。有关匿名函数的更多信息，请参见<span sdata="link"><a href="6ce3f04d-0c71-4728-9127-634c7e9a8365.htm">匿名函数（C# 编程指南）</a></span>。</p></td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0, event)" tabindex="0"><img id="sectionToggle0" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />方法签名</span></h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>
                    通过指定方法的访问级别（例如 <span sdata="langKeyword" value="public"><span class="keyword">public</span></span> 或 <span sdata="langKeyword" value="private"><span class="keyword">private</span></span>）、可选修饰符（例如 <span sdata="langKeyword" value="abstract"><span class="keyword">abstract</span></span> 或 <span sdata="langKeyword" value="sealed"><span class="keyword">sealed</span></span>）、返回值、名称和任何方法参数，可以在<mshelp:link keywords="b95d8815-de18-4c3f-a8cc-a0a53bdf8690" tabindex="0">类</mshelp:link>或<mshelp:link keywords="ff3dd9b7-dc93-4720-8855-ef5558f65c7c" tabindex="0">结构</mshelp:link>中声明方法。这些部分统称为方法的“签名”。
                </p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" title="说明" src="../icons/alert_note.gif" /><b>说明：</b></th></tr><tr><td><p>为进行方法重载，方法的返回类型不是方法签名的一部分。但是，在确定委托和委托所指向方法之间的兼容性时，返回类型是方法签名的一部分。</p></td></tr></table></div><p>
                    方法参数括在括号中，并用逗号隔开。空括号表示方法不需要参数。下面的类包含三个方法：
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">abstract</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Motorcycle
{
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Anyone can call this.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> StartEngine() {<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/* Method statements here */</span> }

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Only derived classes can call this.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">protected</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> AddGas(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> gallons) { <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/* Method statements here */</span> }

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Derived classes can override the base class implementation.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">virtual</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> Drive(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> miles, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> speed) { <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/* Method statements here */</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> 1; }

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Derived classes must implement this.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">abstract</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> GetTopSpeed(); 
}

</pre></td></tr></table></span></div></div></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle1)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle1, event)" tabindex="0"><img id="sectionToggle1" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />方法访问</span></h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>
                    在对象上调用方法类似于访问字段。在对象名称之后，依次添加句点、方法名称和括号。参数在括号内列出，并用逗号隔开。因此，可以按以下示例中的方式调用 <span class="code">Motorcycle</span> 类的方法：
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> TestMotorcycle : Motorcycle
{

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">override</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> GetTopSpeed()
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> 108.4;
    }

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main()
    {

        TestMotorcycle moto = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> TestMotorcycle();

        moto.StartEngine();
        moto.AddGas(15);
        moto.Drive(5, 20);
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> speed = moto.GetTopSpeed();
        Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"My top speed is {0}"</span>, speed);            
    }
}

</pre></td></tr></table></span></div></div></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle2)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle2, event)" tabindex="0"><img id="sectionToggle2" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />方法形参和实参</span></h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>
                    方法定义指定所需任何“形参”的名称和类型。调用代码在调用方法时，将为每个形参提供称为“实参”的具体值。实参必须与形参类型兼容，但调用代码中使用的实参名称（如果有）不必与方法中定义的形参名称相同。例如：
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Caller()
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> numA = 4;
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Call with an int variable.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> productA = Square(numA);

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> numB = 32;
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Call with another int variable.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> productB = Square(numB);

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Call with an integer literal.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> productC = Square(12);

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Call with an expression that evaulates to int.</span>
    productC = Square(productA * 3);
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> Square(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> i)
{
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Store input argument in a local variable.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> input = i;
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> input * input;
}

</pre></td></tr></table></span></div></div></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle3)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle3, event)" tabindex="0"><img id="sectionToggle3" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />通过引用传递与通过值传递</span></h1><div id="sectionSection3" class="section" name="collapseableSection" style=""><p>
                    默认情况下，将值类型传递给方法时，传递的是副本而不是对象本身。因此，对参数所做的更改对于调用方法中的原始副本没有影响。可以使用 ref 关键字通过引用传递值类型。有关更多信息，请参见<span sdata="link"><a href="193ab86f-5f9b-4359-ac29-7cdf8afad3a6.htm">传递值类型参数（C# 编程指南）</a></span>。有关内置值类型的列表，请参见<span sdata="link"><a href="67d8f631-b6e3-4d83-9910-5ec497f8c5f3.htm">值类型表（C# 参考）</a></span>。
                </p><p>
                    “引用类型”通过引用进行传递。将引用类型的对象传递给方法时，引用指向原始对象而不是副本。因此，通过此引用所进行的更改将反映在调用方法中。引用类型是通过使用 <span sdata="langKeyword" value="class"><span class="keyword">class</span></span> 关键字创建的，如下面的示例中所示：
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> SampleRefType
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">value</span>;
}

</pre></td></tr></table></span></div></div><p>
                    现在，如果将基于此类型的对象传递给方法，则会通过引用传递该对象。例如：
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> TestRefType()
{
    SampleRefType rt = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> SampleRefType();
    rt.<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">value</span> = 44;
    ModifyObject(rt);
    Console.WriteLine(rt.<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">value</span>);
}
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> ModifyObject(SampleRefType obj)
{
    obj.<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">value</span> = 33;
}

</pre></td></tr></table></span></div></div><p>
                    此示例的效果本质上与前一示例相同。但是，由于使用的是引用类型，因此 <span class="code">ModifyObject</span> 所做的更改反映在 <span class="code">TestRefType</span> 方法中创建的对象中。因此，<span class="code">TestRefType</span> 方法将显示值 33。
                </p><p>
                    有关更多信息，请参见<span sdata="link"><a href="9e6eb65c-942e-48ab-920a-b7ba9df4ea20.htm">传递引用类型参数（C# 编程指南）</a></span>和<span sdata="link"><a href="801cf030-6e2d-4a0d-9daf-1431b0c31f47.htm">引用类型（C# 参考）</a></span>。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle4)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle4, event)" tabindex="0"><img id="sectionToggle4" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />返回值</span></h1><div id="sectionSection4" class="section" name="collapseableSection" style=""><p>
                    方法可以向调用方返回值。如果返回类型（方法名称前列出的类型）不是 <span sdata="langKeyword" value="void"><span class="keyword">void</span></span>，则方法可以使用 <span sdata="langKeyword" value="return"><span class="keyword">return</span></span> 关键字来返回值。如果语句中 <span sdata="langKeyword" value="return"><span class="keyword">return</span></span> 关键字的后面是与返回类型匹配的值，则该语句将该值返回给方法调用方。<span sdata="langKeyword" value="return"><span class="keyword">return</span></span> 关键字还会停止方法的执行。如果返回类型为 <span sdata="langKeyword" value="void"><span class="keyword">void</span></span>，则可使用没有值的 <span sdata="langKeyword" value="return"><span class="keyword">return</span></span> 语句来停止方法的执行。如果没有 <span sdata="langKeyword" value="return"><span class="keyword">return</span></span> 关键字，方法执行到代码块末尾时即会停止。具有非 void 返回类型的方法才能使用 <span sdata="langKeyword" value="return"><span class="keyword">return</span></span> 关键字返回值。例如，下面的两个方法使用 <span sdata="langKeyword" value="return"><span class="keyword">return</span></span> 关键字来返回整数：
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> SimpleMath
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> AddTwoNumbers(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> number1, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> number2)
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> number1 + number2;
    }

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> SquareANumber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> number)
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> number * number;
    }
}

</pre></td></tr></table></span></div></div><p>
                    若要使用从方法返回的值，调用方法可以在本来使用同一类型的值就已足够的任何位置使用方法调用本身。还可以将返回值赋给变量：例如，下面的两个代码示例可实现相同的目的：
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> result = obj.AddTwoNumbers(1, 2);
obj.SquareANumber(result);

</pre></td></tr></table></span></div></div><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>obj.SquareANumber(obj.AddTwoNumbers(1, 2));

</pre></td></tr></table></span></div></div><p>
                    可以选择使用局部变量（本例中为 <span class="code">result</span>）来存储值。这有助于提高代码的可读性，并且如果要为方法的整个范围存储参数的原始值，可能必须这样做。
                </p><p>
                    有关更多信息，请参见 <span sdata="link"><a href="6da6e152-5b58-4448-8f3f-470dd0617ecd.htm">return（C# 参考）</a></span>。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle5)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle5, event)" tabindex="0"><img id="sectionToggle5" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />C# 语言规范</span></h1><div id="sectionSection5" class="section" name="collapseableSection" style=""><p>
                    有关更多信息，请参见 <span sdata="link"><a href="e5d5a5cc-636b-4bff-b9c8-a8edc6207c22.htm">C# 语言规范</a></span>中的以下各章节：
                </p><ul><li><p>
                    1.6.6 方法
                </p></li><li><p>
                    10.6 方法
                </p></li></ul></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />请参见</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><h4 class="subHeading">概念</h4><div class="seeAlsoStyle"><span sdata="link"><a href="ac0f23a2-6bf3-4077-be99-538ae5fd3bc5.htm">C# 编程指南</a></span></div><h4 class="subHeading">参考</h4><div class="seeAlsoStyle"><span sdata="link"><a href="cc39dbda-8754-423e-b5b1-16a1db0734c0.htm">类和结构（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="6e81ee82-224f-4a12-9baf-a0dca2656c5b.htm">访问修饰符（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="235614b5-1371-4dbd-9abd-b406a8b0298b.htm">静态类和静态类成员（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="81d64ee4-50f9-4d6c-a8dc-257c348d2eea.htm">继承（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="99aa52f7-b435-43f9-936e-2470af734c4e.htm">抽象类、密封类及类成员（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="1690815e-b52b-4967-8380-5780aff08012.htm">params（C# 参考）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="6da6e152-5b58-4448-8f3f-470dd0617ecd.htm">return（C# 参考）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="7e911a0c-3f98-4536-87be-d539b7536ca8.htm">out（C# 参考）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="b8a5e59c-907d-4065-b41d-95bf4273c0bd.htm">ref（C# 参考）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="a5c3003f-7441-4710-b8b1-c79de77e0b77.htm">传递参数（C# 编程指南）</a></span></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" title="“页脚”图像" />
        </div>
<span id="feedbackarea">将有关本主题的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);">反馈意见</a>发送给 Microsoft。</span>
</div>
    </div>
  </body>
</html>