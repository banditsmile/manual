<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>静态类和静态类成员（C# 编程指南）</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CommonUtilities.js"> </script>
    <xml>
      <MSHelp:TOCTitle Title="静态类和静态类成员" />
      <MSHelp:Keyword Index="A" Term="235614b5-1371-4dbd-9abd-b406a8b0298b" />
      <MSHelp:Keyword Index="K" Term="C# 语言, 静态类" />
      <MSHelp:Keyword Index="K" Term="C# 语言, 静态成员" />
      <MSHelp:Keyword Index="K" Term="静态类成员 [C#]" />
      <MSHelp:Keyword Index="K" Term="静态类 [C#]" />
      <MSHelp:Keyword Index="K" Term="静态成员 [C#]" />
      <MSHelp:Attr Name="RevisionNumber" Value="40" />
      <MSHelp:Attr Name="AssetID" Value="235614b5-1371-4dbd-9abd-b406a8b0298b" />
      <MSHelp:Attr Name="Abstract" Value="&#xD;&#xA;                    静态类与非静态类基本相同，但存在一个区别：静态类不能实例化。也就是说，不能使用 new 关键字创建静态类类型的变量。因为没有实例变量，所以要使用类名本身访问静态类的成员。例如，如果名为 UtilityClass 的静态类有一个名为 MethodA 的公共方法，则按下面的示例所示调用该方法：&#xD;&#xA;                " />
      <MSHelp:Attr Name="codelang" Value="CSharp" />
      <MSHelp:Attr Name="CommunityContent" Value="1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLangVers" Value="CSharp" />
      <MSHelp:Attr Name="DocSet" Value="C#" />
      <MSHelp:Attr Name="DocSet" Value="C# Lang" />
      <MSHelp:Attr Name="DocSet" Value="ExpressLibVS" />
      <MSHelp:Attr Name="ProgModel" Value="managed" />
      <MSHelp:Attr Name="ShippedIn" Value="vs.90" />
      <MSHelp:Attr Name="Technology" Value="ManagedCode" />
      <MSHelp:Attr Name="TopicVersion" Value="09.00.08178.10000" />
      <MSHelp:Attr Name="Catalog Container" Value="System_Default_Catalog" />
      <MSHelp:Attr Name="Content Set Container" Value="System_Default_Content_Set" />
      <MSHelp:Attr Name="TopicType" Value="kbRef" />
      <MSHelp:Attr Name="Locale" Value="zh-chs" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="“折叠”图像" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="“展开”图像" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="“复制”图像" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/copycodeHighlight.gif" title="“复制悬停”图像" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">全部折叠</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">全部展开</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：全部 </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：多个 </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual C++ </nobr></label><label id="devlangsMenuJSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：J# </nobr></label><label id="devlangsMenuJScriptLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：JScript </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
        <input id="JSharpCheckbox" type="checkbox" data="JSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JSharpCheckbox">J#</label>
        <br />
        <input id="JScriptCheckbox" type="checkbox" data="JScript,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JScriptCheckbox">JScript</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">C# 编程指南</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">静态类和静态类成员（C# 编程指南）</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="235614b5-1371-4dbd-9abd-b406a8b0298b.htm#exampleToggle" onclick="OpenSection(exampleToggle)">示例</a>  <a href="235614b5-1371-4dbd-9abd-b406a8b0298b.htm#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">另请参见</a>  
<script type="text/javascript">
var fbBody = '%b8%d0%d0%bb%c4%fa%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%bf%aa%b7%a2%b0%e6%b1%e0%d0%b4%cd%c5%b6%d3%bd%ab%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%d3%c3%d3%da%b8%c4%bd%f8%ce%c4%b5%b5%a1%a3%ce%d2%c3%c7%d4%da%c9%f3%d4%c4%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%ca%b1%a3%ac%bf%c9%c4%dc%bb%e1%b8%f8%c4%fa%b7%a2%cb%cd%b5%e7%d7%d3%d3%ca%bc%fe%a3%ac%d2%d4%c7%eb%c4%fa%cc%e1%b9%a9%bd%f8%d2%bb%b2%bd%b5%c4%bd%e2%ca%cd%cb%b5%c3%f7%bb%f2%d5%df%be%cd%bd%e2%be%f6%b7%bd%b0%b8%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%ce%d2%c3%c7%b2%bb%bb%e1%bd%ab%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%d3%c3%d3%da%c8%ce%ba%ce%c6%e4%cb%fb%d3%c3%cd%be%a3%ac%b2%a2%c7%d2%d4%da%c9%f3%d4%c4%cd%ea%d6%ae%ba%f3%a3%ac%ce%d2%c3%c7%b2%bb%bb%e1%d4%d9%b1%a3%c1%f4%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%a1%a3%0d%0a%d3%d0%b9%d8%20Microsoft%20%d2%fe%cb%bd%d5%fe%b2%df%b5%c4%bd%f8%d2%bb%b2%bd%d0%c5%cf%a2%a3%ac%c7%eb%b2%ce%bc%fb%20http%3a%2f%2fprivacy.microsoft.com%2fzh-cn%2fdefault.aspx%a1%a3';
var fbSubject = 'Customer%20Feedback';
</script>
  <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);"> 发送反馈意见</a></span>
</td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <p><font color="DarkGray">更新：
                    
    2008 年 7 月
  
                </font></p><div class="introduction"><p>
                    <mshelp:link keywords="5509e215-2183-4da3-bab4-6b7e607a4fdf" tabindex="0">静态</mshelp:link>类与非静态类基本相同，但存在一个区别：静态类不能实例化。也就是说，不能使用 <mshelp:link keywords="e4136516-f058-45a8-84e5-da00a5cf9b6a" tabindex="0">new</mshelp:link> 关键字创建静态类类型的变量。因为没有实例变量，所以要使用类名本身访问静态类的成员。例如，如果名为 <span class="code">UtilityClass</span> 的静态类有一个名为 <span class="code">MethodA</span> 的公共方法，则按下面的示例所示调用该方法：
                </p><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>UtilityClass.MethodA();</pre></td></tr></table></span></div><p>
                    和所有类类型一样，当加载引用静态类的程序时，.NET Framework 公共语言运行时 (CLR) 将加载该静态类的类型信息。程序不能指定加载静态类的确切时间。但是，可以保证在程序中首次引用该类前加载该类，并初始化该类的字段并调用其静态构造函数。静态构造函数仅调用一次，在程序驻留的应用程序域的生存期内，静态类一直保留在内存中。
                </p><p>
                    对于只对输入参数进行运算而不获取或设置任何内部实例字段的方法集，静态类可以方便地用作这些方法集的容器。例如，在 .NET Framework 类库中，静态类 <span sdata="cer" target="T:System.Math"><mshelp:link keywords="T:System.Math" tabindex="0">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Math</mshelp:link></span> 包含的一些方法只执行数学运算，而无需存储或检索特定 <span sdata="cer" target="T:System.Math"><mshelp:link keywords="T:System.Math" tabindex="0">Math</mshelp:link></span> 类实例特有的数据。
                </p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" title="说明" src="../icons/alert_note.gif" /><b>说明：</b></th></tr><tr><td><p>若要创建仅允许创建一个自身实例的非静态类，请参见 <a href="http://go.microsoft.com/fwlink/?LinkID=100567">Implementing Singleton in C#</a>（在 C# 中实现单一实例）。</p></td></tr></table></div><p>
                    下表介绍静态类的主要特性：
                </p><ul><li><p>
                    仅包含静态成员。
                </p></li><li><p>
                    无法实例化。
                </p></li><li><p>
                    是密封的。
                </p></li><li><p>
                    不能包含<mshelp:link keywords="24663779-c1e5-4af4-a942-ca554e4c542d" tabindex="0">实例构造函数</mshelp:link>。
                </p></li></ul><p>
                    因此，创建静态类与创建仅包含静态成员和私有构造函数的类基本相同。私有构造函数阻止类被实例化。使用静态类的优点在于，编译器能够执行检查以确保不致偶然地添加实例成员。编译器将保证不会创建此类的实利。
                </p><p>
                    静态类是密封的，因此不可被继承。它们不能从除 <span sdata="cer" target="T:System.Object"><mshelp:link keywords="T:System.Object" tabindex="0">Object</mshelp:link></span> 外的任何类中继承。静态类不能包含实例构造函数，但可以包含静态构造函数。如果非静态类包含需要进行重要的初始化的静态成员，也应定义静态构造函数。有关更多信息，请参见<span sdata="link"><a href="151ec95e-3c4d-4ed7-885d-95b7a3be2e7d.htm">静态构造函数（C# 编程指南）</a></span>。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />示例</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><p>
                    下面是一个静态类的示例，它包含两个在摄氏温度和华氏温度之间执行来回转换的方法：
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> TemperatureConverter
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> CelsiusToFahrenheit(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> temperatureCelsius)
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Convert argument to double for calculations.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> celsius = Double.Parse(temperatureCelsius);

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Convert Celsius to Fahrenheit.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> fahrenheit = (celsius * 9 / 5) + 32;

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> fahrenheit;
    }

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> FahrenheitToCelsius(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> temperatureFahrenheit)
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Convert argument to double for calculations.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> fahrenheit = Double.Parse(temperatureFahrenheit);

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Convert Fahrenheit to Celsius.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> celsius = (fahrenheit - 32) * 5 / 9;

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> celsius;
    }
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> TestTemperatureConverter
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main()
    {
        Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Please select the convertor direction"</span>);
        Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"1. From Celsius to Fahrenheit."</span>);
        Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"2. From Fahrenheit to Celsius."</span>);
        Console.Write(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">":"</span>);

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> selection = Console.ReadLine();
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> F, C = 0;

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">switch</span> (selection)
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">case</span> <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"1"</span>:
                Console.Write(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Please enter the Celsius temperature: "</span>);
                F = TemperatureConverter.CelsiusToFahrenheit(Console.ReadLine());
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Temperature in Fahrenheit: {0:F2}"</span>, F);
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">break</span>;

            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">case</span> <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"2"</span>:
                Console.Write(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Please enter the Fahrenheit temperature: "</span>);
                C = TemperatureConverter.FahrenheitToCelsius(Console.ReadLine());
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Temperature in Celsius: {0:F2}"</span>, C);
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">break</span>;

            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">default</span>:
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Please select a convertor."</span>);
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">break</span>;
        }

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Keep the console window open in debug mode.</span>
        Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Press any key to exit."</span>);
        Console.ReadKey();
    }
}
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/* Example Output:
    Please select the convertor direction
    1. From Celsius to Fahrenheit.
    2. From Fahrenheit to Celsius.
    :2
    Please enter the Fahrenheit temperature: 20
    Temperature in Celsius: -6.67
    Press any key to exit.
 */</span>


</pre></td></tr></table></span></div></div></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0, event)" tabindex="0"><img id="sectionToggle0" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />静态成员</span></h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>
                    非静态类可以包含静态的方法、字段、属性或事件。即使没有创建类的实例，也可以调用该类中的静态成员。始终通过类名而不是实例名称访问静态成员。无论对一个类创建多少个实例，它的静态成员都只有一个副本。静态方法和属性不能访问其包含类型中的非静态字段和事件，并且不能访问任何对象的实例变量（除非在方法参数中显式传递）。
                </p><p>
                    更常见的做法是声明具有一些静态成员的非静态类，而不是将整个类声明为静态类。静态字段有两个常见的用法：一是记录已实例化对象的个数，二是存储必须在所有实例之间共享的值。
                </p><p>
                    静态方法可以被重载但不能被重写，因为它们属于类，不属于类的任何实例。
                </p><p>
                    虽然字段不能声明为 <span class="code">static const</span>，但 <mshelp:link keywords="79eb447c-117b-4418-933f-97c50aa472db" tabindex="0">const</mshelp:link> 字段的行为在本质上是静态的。这样的字段属于类型，不属于类型的实例。因此，可以同对待静态字段一样使用 <span class="code">ClassName.MemberName</span> 表示法来访问 const 字段。不需要对象实例。
                </p><p>
                    C# 不支持静态局部变量（在方法范围内声明的变量）。
                </p><p>
                    通过在成员的返回类型之前使用 <span sdata="langKeyword" value="static"><span class="keyword">static</span></span> 关键字可以声明静态类成员，如下面的示例所示：
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Automobile
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> NumberOfWheels = 4;
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> SizeOfGasTank
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> 15;
        }
    }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Drive() { }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">event</span> EventType RunOutOfGas;

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Other non-static fields and properties...</span>
}

</pre></td></tr></table></span></div></div><p>
                    静态成员在第一次被访问之前并且在调用静态构造函数（如有存在）之前进行初始化。若要访问静态类成员，应使用类名而不是变量名来指定该成员的位置，如下面的示例所示：
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>Automobile.Drive();
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> i = Automobile.NumberOfWheels;

</pre></td></tr></table></span></div></div><p>
                    如果类包含静态字段，请提供在加载类时初始化这些字段的静态构造函数。
                </p><p>
                    对静态方法的调用以 Microsoft 中间语言 (MSIL) 生成调用指令，而对实例方法的调用生成 <span sdata="langKeyword" value="callvirt"><span class="keyword">callvirt</span></span> 指令，该指令还检查 null 对象引用。但是，两者之间的性能差异在大多数时候并不明显。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle1)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle1, event)" tabindex="0"><img id="sectionToggle1" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />C# 语言规范</span></h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>
                    有关更多信息，请参见 <span sdata="link"><a href="e5d5a5cc-636b-4bff-b9c8-a8edc6207c22.htm">C# 语言规范</a></span>中的以下各章节：
                </p><ul><li><p>
                    10.1.1.3 静态类
                </p></li></ul></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />请参见</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><h4 class="subHeading">概念</h4><div class="seeAlsoStyle"><span sdata="link"><a href="ac0f23a2-6bf3-4077-be99-538ae5fd3bc5.htm">C# 编程指南</a></span></div><div class="seeAlsoStyle"><span sdata="link"><mshelp:link keywords="d67c14d8-c4dd-443f-affb-4ccae677c9b6" tabindex="0">静态类设计</mshelp:link></span></div><h4 class="subHeading">参考</h4><div class="seeAlsoStyle"><span sdata="link"><a href="e8848524-7273-429f-8aba-c658d5eff5ad.htm">类（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="b95d8815-de18-4c3f-a8cc-a0a53bdf8690.htm">class（C# 参考）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="151ec95e-3c4d-4ed7-885d-95b7a3be2e7d.htm">静态构造函数（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="24663779-c1e5-4af4-a942-ca554e4c542d.htm">实例构造函数（C# 编程指南）</a></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(changeHistoryToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(changeHistoryToggle, event)" tabindex="0"><img id="changeHistoryToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />修订记录</span></h1><div id="changeHistorySection" class="section" name="collapseableSection" style=""><div class="caption"></div><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>
                    日期
                </p></th><th><p>
                    修订记录
                </p></th><th><p>
                    原因
                </p></th></tr><tr><td><p>
                    
    <p>2008 年 7 月</p>
  
                </p></td><td><p>
                    增加了内容和代码示例
                </p></td><td><p>
                    
    <p>信息补充。</p>
  
                </p></td></tr></table></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" title="“页脚”图像" />
        </div>
<span id="feedbackarea">将有关本主题的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);">反馈意见</a>发送给 Microsoft。</span>
</div>
    </div>
  </body>
</html>