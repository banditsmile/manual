<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>泛型类（C# 编程指南）</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CommonUtilities.js"> </script>
    <xml>
      <MSHelp:TOCTitle Title="泛型类" />
      <MSHelp:Keyword Index="A" Term="27d6f256-cd61-41e3-bc6e-b990a53b0224" />
      <MSHelp:Keyword Index="K" Term="C# 语言, 泛型类" />
      <MSHelp:Keyword Index="K" Term="泛型 [C#], 类" />
      <MSHelp:Attr Name="RevisionNumber" Value="27" />
      <MSHelp:Attr Name="AssetID" Value="27d6f256-cd61-41e3-bc6e-b990a53b0224" />
      <MSHelp:Attr Name="Abstract" Value="泛型类封装不是特定于具体数据类型的操作。泛型类最常用于集合，如链接列表、哈希表、堆栈、队列、树等。像从集合中添加和移除项这样的操作都以大体上相同的方式执行，与所存储数据的类型无关。" />
      <MSHelp:Attr Name="codelang" Value="CSharp" />
      <MSHelp:Attr Name="CommunityContent" Value="1" />
      <MSHelp:Attr Name="CurrentDebugFrameLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLangVers" Value="CSharp" />
      <MSHelp:Attr Name="DocSet" Value="C#" />
      <MSHelp:Attr Name="DocSet" Value="C# Lang" />
      <MSHelp:Attr Name="DocSet" Value="ExpressLibVS" />
      <MSHelp:Attr Name="HelpPriority" Value="1" />
      <MSHelp:Attr Name="ProgModel" Value="managed" />
      <MSHelp:Attr Name="ShippedIn" Value="vs.90" />
      <MSHelp:Attr Name="Technology" Value="ManagedCode" />
      <MSHelp:Attr Name="TopicVersion" Value="09.00.08178.10000" />
      <MSHelp:Attr Name="Catalog Container" Value="System_Default_Catalog" />
      <MSHelp:Attr Name="Content Set Container" Value="System_Default_Content_Set" />
      <MSHelp:Attr Name="TopicType" Value="kbRef" />
      <MSHelp:Attr Name="Locale" Value="zh-chs" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="“折叠”图像" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="“展开”图像" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="“复制”图像" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/copycodeHighlight.gif" title="“复制悬停”图像" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">全部折叠</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">全部展开</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：全部 </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：多个 </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual C++ </nobr></label><label id="devlangsMenuJSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：J# </nobr></label><label id="devlangsMenuJScriptLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：JScript </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
        <input id="JSharpCheckbox" type="checkbox" data="JSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JSharpCheckbox">J#</label>
        <br />
        <input id="JScriptCheckbox" type="checkbox" data="JScript,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JScriptCheckbox">JScript</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">C# 编程指南</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">泛型类（C# 编程指南）</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="27d6f256-cd61-41e3-bc6e-b990a53b0224.htm#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">另请参见</a>  
<script type="text/javascript">
var fbBody = '%b8%d0%d0%bb%c4%fa%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%bf%aa%b7%a2%b0%e6%b1%e0%d0%b4%cd%c5%b6%d3%bd%ab%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%d3%c3%d3%da%b8%c4%bd%f8%ce%c4%b5%b5%a1%a3%ce%d2%c3%c7%d4%da%c9%f3%d4%c4%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%ca%b1%a3%ac%bf%c9%c4%dc%bb%e1%b8%f8%c4%fa%b7%a2%cb%cd%b5%e7%d7%d3%d3%ca%bc%fe%a3%ac%d2%d4%c7%eb%c4%fa%cc%e1%b9%a9%bd%f8%d2%bb%b2%bd%b5%c4%bd%e2%ca%cd%cb%b5%c3%f7%bb%f2%d5%df%be%cd%bd%e2%be%f6%b7%bd%b0%b8%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%ce%d2%c3%c7%b2%bb%bb%e1%bd%ab%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%d3%c3%d3%da%c8%ce%ba%ce%c6%e4%cb%fb%d3%c3%cd%be%a3%ac%b2%a2%c7%d2%d4%da%c9%f3%d4%c4%cd%ea%d6%ae%ba%f3%a3%ac%ce%d2%c3%c7%b2%bb%bb%e1%d4%d9%b1%a3%c1%f4%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%a1%a3%0d%0a%d3%d0%b9%d8%20Microsoft%20%d2%fe%cb%bd%d5%fe%b2%df%b5%c4%bd%f8%d2%bb%b2%bd%d0%c5%cf%a2%a3%ac%c7%eb%b2%ce%bc%fb%20http%3a%2f%2fprivacy.microsoft.com%2fzh-cn%2fdefault.aspx%a1%a3';
var fbSubject = 'Customer%20Feedback';
</script>
  <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);"> 发送反馈意见</a></span>
</td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <p><font color="DarkGray">更新：2007 年 11 月</font></p><div class="introduction"><p>泛型类封装不是特定于具体数据类型的操作。泛型类最常用于集合，如链接列表、哈希表、堆栈、队列、树等。像从集合中添加和移除项这样的操作都以大体上相同的方式执行，与所存储数据的类型无关。</p><p>对于大多数需要集合类的方案，推荐的方法是使用 .NET Framework 类库中所提供的类。有关使用这些类的更多信息，请参见<span sdata="link"><a href="afdd5477-6770-4686-8297-f58a4d749daf.htm">.NET Framework 类库中的泛型（C# 编程指南）</a></span>。</p><p>一般情况下，创建泛型类的过程为：从一个现有的具体类开始，逐一将每个类型更改为类型参数，直至达到通用化和可用性的最佳平衡。创建您自己的泛型类时，需要特别注意以下事项：</p><ul><li><p>将哪些类型通用化为类型参数。</p><p>通常，能够参数化的类型越多，代码就会变得越灵活，重用性就越好。但是，太多的通用化会使其他开发人员难以阅读或理解代码。</p></li><li><p>如果存在约束，应对类型参数应用什么约束（请参见 <span sdata="link"><a href="141b003e-1ddb-4e1c-bcb2-e1c3870e6a51.htm">类型参数的约束（C# 编程指南）</a></span>）。</p><p>一条有用的规则是，应用尽可能最多的约束，但仍使您能够处理必须处理的类型。例如，如果您知道您的泛型类仅用于引用类型，则应用类约束。这可以防止您的类被意外地用于值类型，并允许您对 <span class="code">T</span> 使用 <span sdata="langKeyword" value="as"><span class="keyword">as</span></span> 运算符以及检查空值。</p></li><li><p>是否将泛型行为分解为基类和子类。</p><p>由于泛型类可以作为基类使用，此处适用的设计注意事项与非泛型类相同。请参见本主题后面有关从泛型基类继承的规则。</p></li><li><p>是否实现一个或多个泛型接口。</p><p>例如，如果您设计一个类，该类将用于创建基于泛型的集合中的项，则可能必须实现一个接口，如 <span sdata="cer" target="T:System.IComparable`1"><mshelp:link keywords="T:System.IComparable`1" tabindex="0">IComparable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></mshelp:link></span>，其中 <span class="code">T</span> 是您的类的类型。</p></li></ul><p>有关简单泛型类的示例，请参见<span sdata="link"><a href="a1ad761e-42f7-41dd-a62f-452a2de26b9d.htm">泛型介绍（C# 编程指南）</a></span>。</p><p>类型参数和约束的规则对于泛型类行为有几方面的含义，特别是关于继承和成员可访问性。您应当先理解一些术语，然后再继续进行。对于泛型类 <span class="code">Node&lt;T&gt;,</span>，客户端代码可通过指定类型参数来引用该类，以便创建封闭式构造类型 (<span class="code">Node&lt;T&gt;,</span>)。或者可以让类型参数处于未指定状态（例如在指定泛型基类时）以创建开放式构造类型 (<span class="code">Node&lt;T&gt;</span>)。泛型类可以从具体的、封闭式构造或开放式构造基类继承：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> BaseNode { }
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> BaseNodeGeneric&lt;T&gt; { }

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// concrete type</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> NodeConcrete&lt;T&gt; : BaseNode { }

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//closed constructed type</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> NodeClosed&lt;T&gt; : BaseNodeGeneric&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; { }

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//open constructed type </span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> NodeOpen&lt;T&gt; : BaseNodeGeneric&lt;T&gt; { }

</pre></td></tr></table></span></div></div><p>非泛型类（换句话说，即具体类）可以从封闭式构造基类继承，但无法从开放式构造类或裸类型形参继承，因为在运行时客户端代码无法提供实例化基类所需的类型实参。</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//No error</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Node1 : BaseNodeGeneric&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; { }

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//Generates an error</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//class Node2 : BaseNodeGeneric&lt;T&gt; {}</span>

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//Generates an error</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//class Node3 : T {}</span>

</pre></td></tr></table></span></div></div><p>从开放式构造类型继承的泛型类必须为任何未被继承类共享的基类类型参数提供类型变量，如以下代码所示：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> BaseNodeMultiple&lt;T, U&gt; { }

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//No error</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Node4&lt;T&gt; : BaseNodeMultiple&lt;T, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; { }

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//No error</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Node5&lt;T, U&gt; : BaseNodeMultiple&lt;T, U&gt; { }

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//Generates an error</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//class Node6&lt;T&gt; : BaseNodeMultiple&lt;T, U&gt; {} </span>

</pre></td></tr></table></span></div></div><p>从开放式构造类型继承的泛型类必须指定约束，这些约束是基类型约束的超集或暗示基类型约束：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> NodeItem&lt;T&gt; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> T : System.IComparable&lt;T&gt;, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span>() { }
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> SpecialNodeItem&lt;T&gt; : NodeItem&lt;T&gt; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> T : System.IComparable&lt;T&gt;, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span>() { }

</pre></td></tr></table></span></div></div><p>泛型类型可以使用多个类型参数和约束，如下所示：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> SuperKeyType&lt;K, V, U&gt;
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> U : System.IComparable&lt;U&gt;
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> V : <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span>()
{ }

</pre></td></tr></table></span></div></div><p>开放式构造类型和封闭式构造类型可以用作方法参数：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Swap&lt;T&gt;(List&lt;T&gt; list1, List&lt;T&gt; list2)
{
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//code to swap items</span>
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Swap(List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; list1, List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; list2)
{
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//code to swap items</span>
}

</pre></td></tr></table></span></div></div><p>如果某个泛型类实现了接口，则可以将该类的所有实例强制转换为该接口。</p><p>泛型类是不变的。也就是说，如果输入参数指定 <span class="code">List&lt;BaseClass&gt;</span>，则当您尝试提供 <span class="code">List&lt;BaseClass&gt;</span> 时，将会发生编译时错误。</p></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />请参见</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><h4 class="subHeading">概念</h4><div class="seeAlsoStyle"><span sdata="link"><a href="ac0f23a2-6bf3-4077-be99-538ae5fd3bc5.htm">C# 编程指南</a></span></div><h4 class="subHeading">参考</h4><div class="seeAlsoStyle"><span sdata="link"><a href="75ea8509-a4ea-4e7a-a2b3-cf72482e9282.htm">泛型（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="cer" target="N:System.Collections.Generic"><mshelp:link keywords="N:System.Collections.Generic" tabindex="0">System.Collections.Generic</mshelp:link></span></div><h4 class="subHeading">其他资源</h4><div class="seeAlsoStyle"><a href="http://go.microsoft.com/fwlink/?LinkId=112390">Saving the State of Enumerators（保存枚举数的状态）</a></div><div class="seeAlsoStyle"><a href="http://go.microsoft.com/fwlink/?LinkId=112380">An Inheritance Puzzle, Part One（一个继承难题，第一部分）</a></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" title="“页脚”图像" />
        </div>
<span id="feedbackarea">将有关本主题的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);">反馈意见</a>发送给 Microsoft。</span>
</div>
    </div>
  </body>
</html>