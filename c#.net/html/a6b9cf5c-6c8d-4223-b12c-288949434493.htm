<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>如何：使用 foreach 访问集合类（C# 编程指南）</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CommonUtilities.js"> </script>
    <xml>
      <MSHelp:TOCTitle Title="如何：使用 foreach 访问集合类" />
      <MSHelp:Keyword Index="A" Term="a6b9cf5c-6c8d-4223-b12c-288949434493" />
      <MSHelp:Keyword Index="K" Term="集合类 [C#], foreach 语句" />
      <MSHelp:Attr Name="RevisionNumber" Value="16" />
      <MSHelp:Attr Name="AssetID" Value="a6b9cf5c-6c8d-4223-b12c-288949434493" />
      <MSHelp:Attr Name="Abstract" Value="下面的代码示例阐释如何编写可与 foreach 一起使用的非泛型集合类。该类是字符串标记化拆分器，类似于 C 运行时函数 strtok_s。" />
      <MSHelp:Attr Name="codelang" Value="CSharp" />
      <MSHelp:Attr Name="CommunityContent" Value="1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLangVers" Value="CSharp" />
      <MSHelp:Attr Name="DocSet" Value="C#" />
      <MSHelp:Attr Name="DocSet" Value="C# Lang" />
      <MSHelp:Attr Name="DocSet" Value="ExpressLibVS" />
      <MSHelp:Attr Name="ProgModel" Value="managed" />
      <MSHelp:Attr Name="ShippedIn" Value="vs.90" />
      <MSHelp:Attr Name="Technology" Value="ManagedCode" />
      <MSHelp:Attr Name="TopicVersion" Value="09.00.08178.10000" />
      <MSHelp:Attr Name="Catalog Container" Value="System_Default_Catalog" />
      <MSHelp:Attr Name="Content Set Container" Value="System_Default_Content_Set" />
      <MSHelp:Attr Name="TopicType" Value="kbHowTo" />
      <MSHelp:Attr Name="Locale" Value="zh-chs" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="“折叠”图像" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="“展开”图像" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="“复制”图像" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/copycodeHighlight.gif" title="“复制悬停”图像" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">全部折叠</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">全部展开</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：全部 </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：多个 </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual C++ </nobr></label><label id="devlangsMenuJSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：J# </nobr></label><label id="devlangsMenuJScriptLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：JScript </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
        <input id="JSharpCheckbox" type="checkbox" data="JSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JSharpCheckbox">J#</label>
        <br />
        <input id="JScriptCheckbox" type="checkbox" data="JScript,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JScriptCheckbox">JScript</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">C# 编程指南</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">如何：使用 foreach 访问集合类（C# 编程指南）</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="a6b9cf5c-6c8d-4223-b12c-288949434493.htm#exampleToggle" onclick="OpenSection(exampleToggle)">示例</a>  <a href="a6b9cf5c-6c8d-4223-b12c-288949434493.htm#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">另请参见</a>  
<script type="text/javascript">
var fbBody = '%b8%d0%d0%bb%c4%fa%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%bf%aa%b7%a2%b0%e6%b1%e0%d0%b4%cd%c5%b6%d3%bd%ab%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%d3%c3%d3%da%b8%c4%bd%f8%ce%c4%b5%b5%a1%a3%ce%d2%c3%c7%d4%da%c9%f3%d4%c4%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%ca%b1%a3%ac%bf%c9%c4%dc%bb%e1%b8%f8%c4%fa%b7%a2%cb%cd%b5%e7%d7%d3%d3%ca%bc%fe%a3%ac%d2%d4%c7%eb%c4%fa%cc%e1%b9%a9%bd%f8%d2%bb%b2%bd%b5%c4%bd%e2%ca%cd%cb%b5%c3%f7%bb%f2%d5%df%be%cd%bd%e2%be%f6%b7%bd%b0%b8%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%ce%d2%c3%c7%b2%bb%bb%e1%bd%ab%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%d3%c3%d3%da%c8%ce%ba%ce%c6%e4%cb%fb%d3%c3%cd%be%a3%ac%b2%a2%c7%d2%d4%da%c9%f3%d4%c4%cd%ea%d6%ae%ba%f3%a3%ac%ce%d2%c3%c7%b2%bb%bb%e1%d4%d9%b1%a3%c1%f4%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%a1%a3%0d%0a%d3%d0%b9%d8%20Microsoft%20%d2%fe%cb%bd%d5%fe%b2%df%b5%c4%bd%f8%d2%bb%b2%bd%d0%c5%cf%a2%a3%ac%c7%eb%b2%ce%bc%fb%20http%3a%2f%2fprivacy.microsoft.com%2fzh-cn%2fdefault.aspx%a1%a3';
var fbSubject = 'Customer%20Feedback';
</script>
  <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);"> 发送反馈意见</a></span>
</td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <p><font color="DarkGray">更新：2007 年 11 月</font></p><div class="introduction"><p>下面的代码示例阐释如何编写可与 <mshelp:link keywords="5a9c5ddc-5fd3-457a-9bb6-9abffcd874ec" tabindex="0">foreach</mshelp:link> 一起使用的非泛型集合类。该类是字符串标记化拆分器，类似于 C 运行时函数 <span sdata="langKeyword" value="strtok_s"><span class="keyword">strtok_s</span></span>。</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" title="说明" src="../icons/alert_note.gif" /><b>说明：</b></th></tr><tr><td><p>此示例描述的是仅当您无法使用泛型集合类时才采用的推荐做法。C# 语言和 .NET Framework 的 2.0 版和更高版本支持泛型。有关如何实现支持 <span sdata="cer" target="T:System.Collections.Generic.IEnumerable`1"><mshelp:link keywords="T:System.Collections.Generic.IEnumerable`1" tabindex="0">IEnumerable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></mshelp:link></span><span sdata="langKeyword" value=""><span class="keyword"></span></span> 的类型安全泛型集合类并因而避免本主题中稍后讨论的问题的示例，请参见<span sdata="link"><a href="f927d8a1-cf57-4fcc-911b-9958478edf4f.htm">如何：为泛型列表创建迭代器块（C# 编程指南）</a></span>。</p></td></tr></table></div><p>在下面的示例中，<span class="code">Tokens</span> 使用“ ”和“-”作为分隔符将句子“This is a sample sentence.”拆分为标记，并使用 <span sdata="langKeyword" value="foreach"><span class="keyword">foreach</span></span> 语句枚举这些标记：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>Tokens f = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Tokens(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"This is a sample sentence."</span>, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">char</span>[] {' ','-'});

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> item <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> f)
{
    System.Console.WriteLine(item);
}

</pre></td></tr></table></span></div></div><p><span class="code">Tokens</span> 在内部使用一个数组，该数组自行实现 <span sdata="cer" target="T:System.Collections.IEnumerator"><mshelp:link keywords="T:System.Collections.IEnumerator" tabindex="0">IEnumerator</mshelp:link></span> 和 <span sdata="cer" target="T:System.Collections.IEnumerable"><mshelp:link keywords="T:System.Collections.IEnumerable" tabindex="0">IEnumerable</mshelp:link></span>。该代码示例本可以利用数组本身的枚举方法，但那样会使本示例的用意无法体现出来。</p><p>在 C# 中，集合类不一定要从 <span sdata="cer" target="T:System.Collections.IEnumerable"><mshelp:link keywords="T:System.Collections.IEnumerable" tabindex="0">IEnumerable</mshelp:link></span> 和 <span sdata="cer" target="T:System.Collections.IEnumerator"><mshelp:link keywords="T:System.Collections.IEnumerator" tabindex="0">IEnumerator</mshelp:link></span> 继承以便与 <span sdata="langKeyword" value="foreach"><span class="keyword">foreach</span></span> 兼容。只要此类具有必需的 <span sdata="cer" target="M:System.Collections.IEnumerable.GetEnumerator"><mshelp:link keywords="M:System.Collections.IEnumerable.GetEnumerator" tabindex="0">GetEnumerator</mshelp:link></span>、<span sdata="cer" target="M:System.Collections.IEnumerator.MoveNext"><mshelp:link keywords="M:System.Collections.IEnumerator.MoveNext" tabindex="0">MoveNext</mshelp:link></span>、<span sdata="cer" target="M:System.Collections.IEnumerator.Reset"><mshelp:link keywords="M:System.Collections.IEnumerator.Reset" tabindex="0">Reset</mshelp:link></span> 和 <span sdata="cer" target="P:System.Collections.IEnumerator.Current"><mshelp:link keywords="P:System.Collections.IEnumerator.Current" tabindex="0">Current</mshelp:link></span> 成员，就可 <span sdata="langKeyword" value="foreach"><span class="keyword">foreach</span></span> 与一起使用。省略接口有一个好处：您可以将 <span class="code">Current</span> 的返回类型定义得比 <span sdata="cer" target="T:System.Object"><mshelp:link keywords="T:System.Object" tabindex="0">Object</mshelp:link></span> 更为明确，从而提供类型安全。</p><p>例如，从本主题中先前的示例代码开始，更改以下几行：</p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>// No longer inherits from IEnumerable:
public class Tokens  
// Doesn't return an IEnumerator:
public TokenEnumerator GetEnumerator()  
// No longer inherits from IEnumerator:
public class TokenEnumerator  
// Type-safe: returns string, not object:
public string Current  </pre></td></tr></table></span></div><p>现在，由于 <span class="code">Current</span> 返回字符串，因此当 <span sdata="langKeyword" value="foreach"><span class="keyword">foreach</span></span> 语句中使用了不兼容的类型时，编译器便能够检测到：</p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>// Error: cannot convert string to int:
foreach (int item in f)  </pre></td></tr></table></span></div><p>省略 <span sdata="cer" target="T:System.Collections.IEnumerable"><mshelp:link keywords="T:System.Collections.IEnumerable" tabindex="0">IEnumerable</mshelp:link></span> 和 <span sdata="cer" target="T:System.Collections.IEnumerator"><mshelp:link keywords="T:System.Collections.IEnumerator" tabindex="0">IEnumerator</mshelp:link></span> 的缺点是，集合类不再能够与其他公共语言运行时兼容语言的 <span sdata="langKeyword" value="foreach"><span class="keyword">foreach</span></span> 语句或等效项交互操作。</p><p>您可以同时拥有两者的优点，即 C# 中的类型安全以及与其他公共语言运行时兼容语言的互操作性，方法是从 <span sdata="cer" target="T:System.Collections.IEnumerable"><mshelp:link keywords="T:System.Collections.IEnumerable" tabindex="0">IEnumerable</mshelp:link></span> 和 <span sdata="cer" target="T:System.Collections.IEnumerator"><mshelp:link keywords="T:System.Collections.IEnumerator" tabindex="0">IEnumerator</mshelp:link></span> 继承并使用显式接口实现，如下面的示例所示。</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />示例</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">using</span> System.Collections;

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Declare the Tokens class:</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Tokens : IEnumerable
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">private</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>[] elements;

    Tokens(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> source, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">char</span>[] delimiters)
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Parse the string into tokens:</span>
        elements = source.Split(delimiters);
    }

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// IEnumerable Interface Implementation:</span>
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   Declaration of the GetEnumerator() method </span>
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   required by IEnumerable</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> IEnumerator GetEnumerator()
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> TokenEnumerator(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>);
    }


    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Inner class implements IEnumerator interface:</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">private</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> TokenEnumerator : IEnumerator
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">private</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> position = -1;
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">private</span> Tokens t;

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> TokenEnumerator(Tokens t)
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.t = t;
        }

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Declare the MoveNext method required by IEnumerator:</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">bool</span> MoveNext()
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">if</span> (position &lt; t.elements.Length - 1)
            {
                position++;
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">true</span>;
            }
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">else</span>
            {
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">false</span>;
            }
        }

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Declare the Reset method required by IEnumerator:</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Reset()
        {
            position = -1;
        }

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Declare the Current property required by IEnumerator:</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">object</span> Current
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>
            {
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> t.elements[position];
            }
        }
    }


    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Test Tokens, TokenEnumerator</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main()
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Testing Tokens by breaking the string into tokens:</span>
        Tokens f = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Tokens(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"This is a sample sentence."</span>, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">char</span>[] {' ','-'});

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> item <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> f)
        {
            System.Console.WriteLine(item);
        }
    }
}
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/* Output:
    This
    is
    a
    sample
    sentence.  
*/</span>

</pre></td></tr></table></span></div></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />请参见</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><h4 class="subHeading">概念</h4><div class="seeAlsoStyle"><span sdata="link"><a href="ac0f23a2-6bf3-4077-be99-538ae5fd3bc5.htm">C# 编程指南</a></span></div><h4 class="subHeading">参考</h4><div class="seeAlsoStyle"><span sdata="link"><a href="bb79bdde-e570-4c30-adb0-1dd5759ae041.htm">数组（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="e76533a9-5033-4a0b-b003-9c2be60d185b.htm">集合类（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="cer" target="N:System.Collections.Generic"><mshelp:link keywords="N:System.Collections.Generic" tabindex="0">System.Collections.Generic</mshelp:link></span></div><h4 class="subHeading">其他资源</h4><div class="seeAlsoStyle"><span sdata="link"><a href="06de3167-c16c-4e1a-b3c5-c27841d4569a.htm">C# 参考</a></span></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" title="“页脚”图像" />
        </div>
<span id="feedbackarea">将有关本主题的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);">反馈意见</a>发送给 Microsoft。</span>
</div>
    </div>
  </body>
</html>