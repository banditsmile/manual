<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>如何：执行分组联接（C# 编程指南）</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CommonUtilities.js"> </script>
    <xml>
      <MSHelp:TOCTitle Title="如何：执行分组联接" />
      <MSHelp:Keyword Index="A" Term="31b654c0-77ac-43fa-be11-aa38e14cae2d" />
      <MSHelp:Keyword Index="K" Term="组联接 [C# 中的 LINQ]" />
      <MSHelp:Keyword Index="K" Term="联接 [C#], 组" />
      <MSHelp:Keyword Index="K" Term="查询 [C# 中的 LINQ], 联接" />
      <MSHelp:Keyword Index="K" Term="查询表达式 [C# 中的 LINQ], 联接" />
      <MSHelp:Keyword Index="B" Term="LINQJoinOps" />
      <MSHelp:Keyword Index="B" Term="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0}, System.Collections.Generic.IEnumerable{``1}, System.Func{``0, ``2}, System.Func{``1, ``2}, System.Func{``0, System.Collections.Generic.IEnumerable{``1}, ``3})" />
      <MSHelp:Keyword Index="B" Term="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0}, System.Collections.Generic.IEnumerable{``1}, System.Func{``0, ``2}, System.Func{``1, ``2}, System.Func{``0, System.Collections.Generic.IEnumerable{``1}, ``3}, System.Collections.Gen" />
      <MSHelp:Keyword Index="B" Term="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0}, System.Collections.Generic.IEnumerable{``1}, System.Func{``0, ``2}, System.Func{``1, ``2}, System.Func{``0, ``1, ``3})" />
      <MSHelp:Keyword Index="B" Term="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0}, System.Collections.Generic.IEnumerable{``1}, System.Func{``0, ``2}, System.Func{``1, ``2}, System.Func{``0, ``1, ``3}, System.Collections.Generic.IEqualityComparer{``2})" />
      <MSHelp:Attr Name="RevisionNumber" Value="20" />
      <MSHelp:Attr Name="AssetID" Value="31b654c0-77ac-43fa-be11-aa38e14cae2d" />
      <MSHelp:Attr Name="Abstract" Value="分组联接可用于产生分层数据结构。它将第一个集合中的每个元素与第二个集合中的一组相关元素进行配对。" />
      <MSHelp:Attr Name="codelang" Value="CSharp" />
      <MSHelp:Attr Name="CommunityContent" Value="1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLangVers" Value="CSharp" />
      <MSHelp:Attr Name="DocSet" Value="C#" />
      <MSHelp:Attr Name="DocSet" Value="C# Lang" />
      <MSHelp:Attr Name="DocSet" Value="ExpressLibVS" />
      <MSHelp:Attr Name="ProgModel" Value="managed" />
      <MSHelp:Attr Name="ShippedIn" Value="vs.90" />
      <MSHelp:Attr Name="Technology" Value="ManagedCode" />
      <MSHelp:Attr Name="TopicVersion" Value="09.00.08178.10000" />
      <MSHelp:Attr Name="Catalog Container" Value="System_Default_Catalog" />
      <MSHelp:Attr Name="Content Set Container" Value="System_Default_Content_Set" />
      <MSHelp:Attr Name="TopicType" Value="kbHowTo" />
      <MSHelp:Attr Name="Locale" Value="zh-chs" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="“折叠”图像" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="“展开”图像" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="“复制”图像" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/copycodeHighlight.gif" title="“复制悬停”图像" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">全部折叠</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">全部展开</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：全部 </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：多个 </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual C++ </nobr></label><label id="devlangsMenuJSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：J# </nobr></label><label id="devlangsMenuJScriptLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：JScript </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
        <input id="JSharpCheckbox" type="checkbox" data="JSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JSharpCheckbox">J#</label>
        <br />
        <input id="JScriptCheckbox" type="checkbox" data="JScript,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JScriptCheckbox">JScript</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">C# 编程指南</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">如何：执行分组联接（C# 编程指南）</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="31b654c0-77ac-43fa-be11-aa38e14cae2d.htm#exampleToggle" onclick="OpenSection(exampleToggle)">示例</a>  <a href="31b654c0-77ac-43fa-be11-aa38e14cae2d.htm#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">另请参见</a>  
<script type="text/javascript">
var fbBody = '%b8%d0%d0%bb%c4%fa%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%bf%aa%b7%a2%b0%e6%b1%e0%d0%b4%cd%c5%b6%d3%bd%ab%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%d3%c3%d3%da%b8%c4%bd%f8%ce%c4%b5%b5%a1%a3%ce%d2%c3%c7%d4%da%c9%f3%d4%c4%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%ca%b1%a3%ac%bf%c9%c4%dc%bb%e1%b8%f8%c4%fa%b7%a2%cb%cd%b5%e7%d7%d3%d3%ca%bc%fe%a3%ac%d2%d4%c7%eb%c4%fa%cc%e1%b9%a9%bd%f8%d2%bb%b2%bd%b5%c4%bd%e2%ca%cd%cb%b5%c3%f7%bb%f2%d5%df%be%cd%bd%e2%be%f6%b7%bd%b0%b8%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%ce%d2%c3%c7%b2%bb%bb%e1%bd%ab%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%d3%c3%d3%da%c8%ce%ba%ce%c6%e4%cb%fb%d3%c3%cd%be%a3%ac%b2%a2%c7%d2%d4%da%c9%f3%d4%c4%cd%ea%d6%ae%ba%f3%a3%ac%ce%d2%c3%c7%b2%bb%bb%e1%d4%d9%b1%a3%c1%f4%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%a1%a3%0d%0a%d3%d0%b9%d8%20Microsoft%20%d2%fe%cb%bd%d5%fe%b2%df%b5%c4%bd%f8%d2%bb%b2%bd%d0%c5%cf%a2%a3%ac%c7%eb%b2%ce%bc%fb%20http%3a%2f%2fprivacy.microsoft.com%2fzh-cn%2fdefault.aspx%a1%a3';
var fbSubject = 'Customer%20Feedback';
</script>
  <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);"> 发送反馈意见</a></span>
</td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <p><font color="DarkGray">更新：2007 年 11 月</font></p><div class="introduction"><p>分组联接可用于产生分层数据结构。它将第一个集合中的每个元素与第二个集合中的一组相关元素进行配对。</p><p>例如，一个名为 Student 的类或关系数据库表可能包含两个字段：Id 和 Name。另一个名为 Course 的类或关系数据库表可能包含两个字段：StudentId 和 CourseTitle。这两个数据源的分组联接（基于匹配的 Student.Id 和 Course.StudentId）会将每个 Student 与一个 Course 对象集合（可能为空）组合在一起。</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" title="说明" src="../icons/alert_note.gif" /><b>说明：</b></th></tr><tr><td><p>第一个集合中的每个元素都会出现在分组联接的结果集内，而无论是否在第二个集合中找到相关元素。如果未找到相关元素，则该元素的相关元素序列为空。因此，结果选择器可以访问第一个集合的每个元素。非分组联接中的结果选择器与此不同，它无法访问第一个集合中的那些在第二个集合中没有匹配元素的元素。</p></td></tr></table></div><p>本主题中的第一个示例演示如何执行分组联接；第二个示例演示如何使用分组联接创建 XML 元素。</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />示例</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><h3 class="subHeading"></h3><div class="subsection"><h4 class="subHeading">分组联接示例</h4><div class="subsection"><p>下面的示例根据与 <span class="code">Pet.Owner</span> 属性匹配的 <span class="code">Person</span> 来对 <span class="code">Person</span> 和 <span class="code">Pet</span> 类型的对象执行分组联接。与为每个匹配产生一对元素的非分组联接不同，分组联接只为第一个集合的每个元素产生一个结果对象（在此示例中为一个 <span class="code">Person</span> 对象）。第二个集合中的相应元素（在此示例中为 <span class="code">Pet</span> 对象）被分组到一个集合中。最后，结果选择器函数为每个包含 <span class="code">Person.FirstName</span> 和一个 <span class="code">Pet</span> 对象集合的匹配创建一个匿名类型。</p></div></div><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Person
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> FirstName { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> LastName { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Pet
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> Name { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> Person Owner { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
}

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/// &lt;summary&gt;</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/// This example performs a grouped join.</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/// &lt;/summary&gt;</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> GroupJoinExample()
{
    Person magnus = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Person { FirstName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Magnus"</span>, LastName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Hedlund"</span> };
    Person terry = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Person { FirstName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Terry"</span>, LastName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Adams"</span> };
    Person charlotte = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Person { FirstName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Charlotte"</span>, LastName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Weiss"</span> };
    Person arlene = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Person { FirstName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Arlene"</span>, LastName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Huff"</span> };

    Pet barley = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Pet { Name = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Barley"</span>, Owner = terry };
    Pet boots = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Pet { Name = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Boots"</span>, Owner = terry };
    Pet whiskers = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Pet { Name = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Whiskers"</span>, Owner = charlotte };
    Pet bluemoon = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Pet { Name = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Blue Moon"</span>, Owner = terry };
    Pet daisy = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Pet { Name = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Daisy"</span>, Owner = magnus };

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create two lists.</span>
    List&lt;Person&gt; people = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;Person&gt; { magnus, terry, charlotte, arlene };
    List&lt;Pet&gt; pets = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;Pet&gt; { barley, boots, whiskers, bluemoon, daisy };

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create a list where each element is an anonymous type</span>
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// that contains the person's first name and a collection of </span>
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// pets that are owned by them.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> query = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> person <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> people
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> pet <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> pets <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> person <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> pet.Owner <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> gj
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> { OwnerName = person.FirstName, Pets = gj };

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> v <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> query)
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Output the owner's name.</span>
        Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"{0}:"</span>, v.OwnerName);
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Output each of the owner's pet's names.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (Pet pet <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> v.Pets)
            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"  {0}"</span>, pet.Name);
    }
}

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// This code produces the following output:</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Magnus:</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   Daisy</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Terry:</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   Barley</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   Boots</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   Blue Moon</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Charlotte:</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   Whiskers</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Arlene:</span>


</pre></td></tr></table></span></div></div><h3 class="subHeading"></h3><div class="subsection"><h4 class="subHeading">执行分组联接以创建 XML 的示例</h4><div class="subsection"><p>分组联接非常适合于使用 LINQ to XML 来创建 XML。下面的示例与上一个示例类似，不同之处在于：结果选择器函数创建表示已联接对象的 XML 元素，而不是创建匿名类型。有关 LINQ to XML 的更多信息，请参见 <span sdata="link"><mshelp:link keywords="f0fe21e9-ee43-4a55-b91a-0800e5782c13" tabindex="0">LINQ to XML</mshelp:link></span>。</p></div></div><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Person
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> FirstName { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> LastName { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Pet
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> Name { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> Person Owner { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
}

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/// &lt;summary&gt;</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/// This example creates XML output from a grouped join.</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/// &lt;/summary&gt;</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> GroupJoinXMLExample()
{
    Person magnus = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Person { FirstName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Magnus"</span>, LastName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Hedlund"</span> };
    Person terry = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Person { FirstName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Terry"</span>, LastName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Adams"</span> };
    Person charlotte = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Person { FirstName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Charlotte"</span>, LastName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Weiss"</span> };
    Person arlene = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Person { FirstName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Arlene"</span>, LastName = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Huff"</span> };

    Pet barley = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Pet { Name = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Barley"</span>, Owner = terry };
    Pet boots = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Pet { Name = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Boots"</span>, Owner = terry };
    Pet whiskers = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Pet { Name = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Whiskers"</span>, Owner = charlotte };
    Pet bluemoon = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Pet { Name = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Blue Moon"</span>, Owner = terry };
    Pet daisy = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Pet { Name = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Daisy"</span>, Owner = magnus };

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create two lists.</span>
    List&lt;Person&gt; people = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;Person&gt; { magnus, terry, charlotte, arlene };
    List&lt;Pet&gt; pets = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;Pet&gt; { barley, boots, whiskers, bluemoon, daisy };

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create XML to display the hierarchical organization of people and their pets.</span>
    XElement ownersAndPets = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> XElement(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"PetOwners"</span>,
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> person <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> people
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> pet <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> pets <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> person <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> pet.Owner <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> gj
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> XElement(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Person"</span>,
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> XAttribute(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"FirstName"</span>, person.FirstName),
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> XAttribute(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"LastName"</span>, person.LastName),
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> subpet <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> gj
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> XElement(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Pet"</span>, subpet.Name)));

    Console.WriteLine(ownersAndPets);
}

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// This code produces the following output:</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// &lt;PetOwners&gt;</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   &lt;Person FirstName=</span><span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Magnus"</span> LastName=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Hedlund"</span>&gt;
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//     &lt;Pet&gt;Daisy&lt;/Pet&gt;</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   &lt;/Person&gt;</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   &lt;Person FirstName=</span><span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Terry"</span> LastName=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Adams"</span>&gt;
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//     &lt;Pet&gt;Barley&lt;/Pet&gt;</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//     &lt;Pet&gt;Boots&lt;/Pet&gt;</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//     &lt;Pet&gt;Blue Moon&lt;/Pet&gt;</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   &lt;/Person&gt;</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   &lt;Person FirstName=</span><span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Charlotte"</span> LastName=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Weiss"</span>&gt;
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//     &lt;Pet&gt;Whiskers&lt;/Pet&gt;</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   &lt;/Person&gt;</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//   &lt;Person FirstName=</span><span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Arlene"</span> LastName=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Huff"</span> /&gt;
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// &lt;/PetOwners&gt;</span>


</pre></td></tr></table></span></div></div></div><h1 class="heading"><span onclick="ExpandCollapse(buildInstructionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(buildInstructionsToggle, event)" tabindex="0"><img id="buildInstructionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />编译代码</span></h1><div id="buildInstructionsSection" class="section" name="collapseableSection" style=""><ul><li><p>在 Visual Studio 中创建一个新的<span class="ui">“控制台应用程序”项目</span>。</p></li><li><p>添加一个对 System.Core.dll 的引用和一个对 System.Xml.Linq.dll 的引用（如果它们尚未被引用的话）。</p></li><li><p>包括 <span sdata="cer" target="N:System.Linq"><mshelp:link keywords="N:System.Linq" tabindex="0">System.Linq</mshelp:link></span> 和 <span sdata="cer" target="N:System.Xml.Linq"><mshelp:link keywords="N:System.Xml.Linq" tabindex="0">System.Xml.Linq</mshelp:link></span> 命名空间。</p></li><li><p>从示例中复制代码，并将其粘贴到 program.cs 文件中的 <span class="code">Main</span> 方法之下。向 <span class="code">Main</span> 方法添加一行代码，以调用粘入的方法。</p></li><li><p>运行该程序。</p></li></ul></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />请参见</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><h4 class="subHeading">任务</h4><div class="seeAlsoStyle"><span sdata="link"><a href="d9edb404-8314-413e-ae51-83bb86c7a4b5.htm">如何：执行内部联接（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="18e32be8-93db-4d30-8dea-ec6596e18f43.htm">如何：执行左外部联接（C# 编程指南）</a></span></div><h4 class="subHeading">概念</h4><div class="seeAlsoStyle"><span sdata="link"><mshelp:link keywords="442d176d-028c-4beb-8d22-407d4ef89107" tabindex="0">联接运算</mshelp:link></span></div><div class="seeAlsoStyle"><span sdata="link"><mshelp:link keywords="7b87532c-4b3e-4398-8503-6ea9d67574a4" tabindex="0">匿名类型</mshelp:link></span></div><h4 class="subHeading">参考</h4><div class="seeAlsoStyle"><span sdata="cer" target="Overload:System.Linq.Enumerable.Join"><mshelp:link keywords="Overload:System.Linq.Enumerable.Join" tabindex="0">Join</mshelp:link></span></div><div class="seeAlsoStyle"><span sdata="cer" target="Overload:System.Linq.Enumerable.GroupJoin"><mshelp:link keywords="Overload:System.Linq.Enumerable.GroupJoin" tabindex="0">GroupJoin</mshelp:link></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="59c9d7a4-3b0e-475e-b620-0ab86c088e9b.htm">匿名类型（C# 编程指南）</a></span></div><h4 class="subHeading">其他资源</h4><div class="seeAlsoStyle"><span sdata="link"><mshelp:link keywords="f0fe21e9-ee43-4a55-b91a-0800e5782c13" tabindex="0">LINQ to XML</mshelp:link></span></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" title="“页脚”图像" />
        </div>
<span id="feedbackarea">将有关本主题的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);">反馈意见</a>发送给 Microsoft。</span>
</div>
    </div>
  </body>
</html>