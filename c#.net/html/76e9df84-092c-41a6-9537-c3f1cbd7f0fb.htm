<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>join 子句（C# 参考）</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CommonUtilities.js"> </script>
    <xml>
      <MSHelp:TOCTitle Title="join 子句" />
      <MSHelp:Keyword Index="A" Term="76e9df84-092c-41a6-9537-c3f1cbd7f0fb" />
      <MSHelp:Keyword Index="K" Term="join 子句 [C#]" />
      <MSHelp:Keyword Index="K" Term="join 关键字 [C#]" />
      <MSHelp:Keyword Index="F" Term="join" />
      <MSHelp:Keyword Index="F" Term="join_CSharpKeyword" />
      <MSHelp:Keyword Index="B" Term="LINQJoinOps" />
      <MSHelp:Attr Name="RevisionNumber" Value="24" />
      <MSHelp:Attr Name="AssetID" Value="76e9df84-092c-41a6-9537-c3f1cbd7f0fb" />
      <MSHelp:Attr Name="Abstract" Value="使用 join 子句可以将来自不同源序列并且在对象模型中没有直接关系的元素相关联。唯一的要求是每个源中的元素需要共享某个可以进行比较以判断是否相等的值。例如，食品经销商可能具有某种产品的供应商列表以及买主列表。例如，可以使用 join 子句创建该产品同一指定地区供应商和买主的列表。" />
      <MSHelp:Attr Name="codelang" Value="CSharp" />
      <MSHelp:Attr Name="CommunityContent" Value="1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLangVers" Value="CSharp" />
      <MSHelp:Attr Name="DocSet" Value="C#" />
      <MSHelp:Attr Name="DocSet" Value="C# Lang" />
      <MSHelp:Attr Name="DocSet" Value="ExpressLibVS" />
      <MSHelp:Attr Name="ProgModel" Value="managed" />
      <MSHelp:Attr Name="ShippedIn" Value="vs.90" />
      <MSHelp:Attr Name="Technology" Value="ManagedCode" />
      <MSHelp:Attr Name="TopicVersion" Value="09.00.08178.10000" />
      <MSHelp:Attr Name="Catalog Container" Value="System_Default_Catalog" />
      <MSHelp:Attr Name="Content Set Container" Value="System_Default_Content_Set" />
      <MSHelp:Attr Name="TopicType" Value="kbRef" />
      <MSHelp:Attr Name="Locale" Value="zh-chs" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="“折叠”图像" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="“展开”图像" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="“复制”图像" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/copycodeHighlight.gif" title="“复制悬停”图像" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">全部折叠</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">全部展开</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：全部 </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：多个 </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual C++ </nobr></label><label id="devlangsMenuJSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：J# </nobr></label><label id="devlangsMenuJScriptLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：JScript </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
        <input id="JSharpCheckbox" type="checkbox" data="JSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JSharpCheckbox">J#</label>
        <br />
        <input id="JScriptCheckbox" type="checkbox" data="JScript,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JScriptCheckbox">JScript</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">C# 语言参考</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">join 子句（C# 参考）</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="76e9df84-092c-41a6-9537-c3f1cbd7f0fb.htm#exampleToggle" onclick="OpenSection(exampleToggle)">示例</a>  <a href="76e9df84-092c-41a6-9537-c3f1cbd7f0fb.htm#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">另请参见</a>  
<script type="text/javascript">
var fbBody = '%b8%d0%d0%bb%c4%fa%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%bf%aa%b7%a2%b0%e6%b1%e0%d0%b4%cd%c5%b6%d3%bd%ab%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%d3%c3%d3%da%b8%c4%bd%f8%ce%c4%b5%b5%a1%a3%ce%d2%c3%c7%d4%da%c9%f3%d4%c4%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%ca%b1%a3%ac%bf%c9%c4%dc%bb%e1%b8%f8%c4%fa%b7%a2%cb%cd%b5%e7%d7%d3%d3%ca%bc%fe%a3%ac%d2%d4%c7%eb%c4%fa%cc%e1%b9%a9%bd%f8%d2%bb%b2%bd%b5%c4%bd%e2%ca%cd%cb%b5%c3%f7%bb%f2%d5%df%be%cd%bd%e2%be%f6%b7%bd%b0%b8%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%ce%d2%c3%c7%b2%bb%bb%e1%bd%ab%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%d3%c3%d3%da%c8%ce%ba%ce%c6%e4%cb%fb%d3%c3%cd%be%a3%ac%b2%a2%c7%d2%d4%da%c9%f3%d4%c4%cd%ea%d6%ae%ba%f3%a3%ac%ce%d2%c3%c7%b2%bb%bb%e1%d4%d9%b1%a3%c1%f4%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%a1%a3%0d%0a%d3%d0%b9%d8%20Microsoft%20%d2%fe%cb%bd%d5%fe%b2%df%b5%c4%bd%f8%d2%bb%b2%bd%d0%c5%cf%a2%a3%ac%c7%eb%b2%ce%bc%fb%20http%3a%2f%2fprivacy.microsoft.com%2fzh-cn%2fdefault.aspx%a1%a3';
var fbSubject = 'Customer%20Feedback';
</script>
  <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);"> 发送反馈意见</a></span>
</td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <p><font color="DarkGray">更新：2007 年 11 月</font></p><div class="introduction"><p>使用 <span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句可以将来自不同源序列并且在对象模型中没有直接关系的元素相关联。唯一的要求是每个源中的元素需要共享某个可以进行比较以判断是否相等的值。例如，食品经销商可能具有某种产品的供应商列表以及买主列表。例如，可以使用 <span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句创建该产品同一指定地区供应商和买主的列表。</p><p><span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句接受两个源序列作为输入。每个序列中的元素都必须是可以与另一个序列中的相应属性进行比较的属性，或者包含一个这样的属性。<span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句使用特殊的 <span sdata="langKeyword" value="equals"><span class="keyword">equals</span></span> 关键字比较指定的键是否相等。<span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句执行的所有联接都是同等联接。<span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句的输出形式取决于所执行的联接的具体类型。以下是三种最常见的联接类型：</p><ul><li><p>内部联接</p></li><li><p>分组联接</p></li><li><p>左外部联接</p></li></ul></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0, event)" tabindex="0"><img id="sectionToggle0" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />内部联接</span></h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>下面的示例演示一个简单的内部同等联接。此查询产生一个“产品名称/类别”对平面序列。同一类别字符串将出现在多个元素中。如果 <span class="code">categories</span> 中的某个元素不具有匹配的 <span class="code">products</span>，则该类别不会出现在结果中。</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> innerJoinQuery =
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> category <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> categories
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> prod <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> products <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> category.ID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> prod.CategoryID
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> { ProductName = prod.Name, Category = category.Name }; <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//produces flat sequence</span>

</pre></td></tr></table></span></div></div><p>有关更多信息，请参见<span sdata="link"><a href="d9edb404-8314-413e-ae51-83bb86c7a4b5.htm">如何：执行内部联接（C# 编程指南）</a></span>。</p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle1)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle1, event)" tabindex="0"><img id="sectionToggle1" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />分组联接</span></h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>含有 <span sdata="langKeyword" value="into"><span class="keyword">into</span></span> 表达式的 <span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句称为分组联接。</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> innerGroupJoinQuery =
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> category <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> categories
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> prod <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> products <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> category.ID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> prod.CategoryID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> prodGroup
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> { CategoryName = category.Name, Products = prodGroup };

</pre></td></tr></table></span></div></div><p>分组联接会产生一个分层的结果序列，该序列将左侧源序列中的元素与右侧源序列中的一个或多个匹配元素相关联。分组联接没有等效的关系术语；它本质上是一个对象数组序列。</p><p>如果在右侧源序列中找不到与左侧源中的元素相匹配的元素，则 <span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句会为该项产生一个空数组。因此，分组联接基本上仍然是一种内部同等联接，区别只在于分组联接将结果序列组织为多个组。</p><p>如果您只选择分组联接的结果，则可以访问各个项，但无法识别结果所匹配的键。因此，通常更为有用的做法是选择分组联接的结果并放入一个也具有该键名的新类型中，如上一个示例所示。</p><p>当然，还可以将分组联接的结果用作其他子查询的生成器：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> innerGroupJoinQuery2 =
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> category <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> categories
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> prod <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> products <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> category.ID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> prod.CategoryID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> prodGroup
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> prod2 <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> prodGroup
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> prod2.UnitPrice &gt; 2.50M
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> prod2;    

</pre></td></tr></table></span></div></div><p>有关更多信息，请参见<span sdata="link"><a href="31b654c0-77ac-43fa-be11-aa38e14cae2d.htm">如何：执行分组联接（C# 编程指南）</a></span>。</p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle2)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle2, event)" tabindex="0"><img id="sectionToggle2" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />左外部联接</span></h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>在左外部联接中，将返回左侧源序列中的所有元素，即使它们在右侧序列中没有匹配的元素也是如此。若要在 LINQ 中执行左外部联接，请将 <b>DefaultIfEmpty</b> 方法与分组联接结合起来，以指定要在某个左侧元素不具有匹配元素时产生的默认右侧元素。可以使用 <span sdata="langKeyword" value="null"><span class="keyword">null</span></span> 作为任何引用类型的默认值，也可以指定用户定义的默认类型。下面的示例演示了用户定义的默认类型：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> leftOuterJoinQuery =
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> category <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> categories
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> prod <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> products <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> category.ID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> prod.CategoryID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> prodGroup
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> item <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> prodGroup.DefaultIfEmpty(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Product{Name = String.Empty, CategoryID = 0})
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> { CatName = category.Name, ProdName = item.Name };

</pre></td></tr></table></span></div></div><p>有关更多信息，请参见<span sdata="link"><a href="18e32be8-93db-4d30-8dea-ec6596e18f43.htm">如何：执行左外部联接（C# 编程指南）</a></span>。</p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle3)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle3, event)" tabindex="0"><img id="sectionToggle3" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />equals 运算符</span></h1><div id="sectionSection3" class="section" name="collapseableSection" style=""><p><span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句执行同等联接。换句话说，只能基于两个键之间的相等关系进行匹配。其他类型的比较（例如，“greater than”或“not equals”）不受支持。为了表明所有联接都是同等联接，<span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句使用 <span sdata="langKeyword" value="equals"><span class="keyword">equals</span></span> 关键字而不是 <span sdata="langKeyword" value="=="><span class="keyword">==</span></span> 运算符。<span sdata="langKeyword" value="equals"><span class="keyword">equals</span></span> 关键字只能用在 <span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句中，并且它与 <span sdata="langKeyword" value="=="><span class="keyword">==</span></span> 运算符之间存在一个重要区别。对于 <span sdata="langKeyword" value="equals"><span class="keyword">equals</span></span>，左键使用外部源序列，而右键使用内部源序列。外部源仅在 <span sdata="langKeyword" value="equals"><span class="keyword">equals</span></span> 的左侧位于范围内，而内部源序列仅在其右侧位于范围内。</p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle4)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle4, event)" tabindex="0"><img id="sectionToggle4" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />非同等联接</span></h1><div id="sectionSection4" class="section" name="collapseableSection" style=""><p>通过使用多个 <span sdata="langKeyword" value="from"><span class="keyword">from</span></span> 子句将新序列单独引入到查询中，可以执行非同等联接、交叉联接和其他自定义联接操作。有关更多信息，请参见 <span sdata="link"><a href="a05e2ab1-410d-4a1d-8ada-af93539682c9.htm">如何：执行自定义联接操作（C# 编程指南）</a></span>。</p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle5)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle5, event)" tabindex="0"><img id="sectionToggle5" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />对象集合联接与关系表联接</span></h1><div id="sectionSection5" class="section" name="collapseableSection" style=""><p>在 LINQ 查询表达式中，联接操作是在对象集合上执行的。不能使用与两个关系表完全相同的方式“联接”对象集合。在 LINQ 中，仅当两个源序列没有通过任何关系相互联系时，才需要使用显式 <span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句。使用 LINQ to SQL 时，外键表在对象模型中表示为主表的属性。例如，在 Northwind 数据库中，Customer 表与 Orders 表之间具有外键关系。在将这两个表映射到对象模型时，Customer 类具有一个 Orders 属性，该属性包含与该 Customer 相关联的 Orders 的集合。实际上，已经为您执行了联接。</p><p>有关在 LINQ to SQL 的上下文中跨相关表执行查询的更多信息，请参见<span sdata="link"><mshelp:link keywords="538def39-8399-46fb-b02d-60ede4e050af" tabindex="0">如何：映射数据库关系 (LINQ to SQL)</mshelp:link></span>。</p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle6)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle6, event)" tabindex="0"><img id="sectionToggle6" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />复合键</span></h1><div id="sectionSection6" class="section" name="collapseableSection" style=""><p>使用复合键可以测试多个值是否相等。有关更多信息，请参见 <span sdata="link"><a href="3e015b3f-9cca-4b0c-aa97-dca0d36ea592.htm">如何：使用复合键进行联接（C# 编程指南）</a></span>。还可以在 <span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 子句中使用组合键。</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />示例</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><p>下面的示例比较了使用相同的匹配键对相同数据源执行内部联接、分组联接和左外部联接的结果。这些示例中添加了一些额外的代码，以便在控制台显示中阐明结果。</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> JoinDemonstration
    {
        #region Data

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Product
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> Name { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> CategoryID { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
        }

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Category
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> Name { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> ID { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
        }

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Specify the first data source.</span>
        List&lt;Category&gt; categories = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;Category&gt;()
        { 
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Category(){Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Beverages"</span>, ID=001},
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Category(){ Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Condiments"</span>, ID=002},
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Category(){ Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Vegetables"</span>, ID=003},
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Category() {  Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Grains"</span>, ID=004},
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Category() {  Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Fruit"</span>, ID=005}            
        };

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Specify the second data source.</span>
        List&lt;Product&gt; products = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;Product&gt;()
       {
          <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Product{Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Cola"</span>,  CategoryID=001},
          <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Product{Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Tea"</span>,  CategoryID=001},
          <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Product{Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Mustard"</span>, CategoryID=002},
          <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Product{Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Pickles"</span>, CategoryID=002},
          <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Product{Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Carrots"</span>, CategoryID=003},
          <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Product{Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Bok Choy"</span>, CategoryID=003},
          <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Product{Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Peaches"</span>, CategoryID=005},
          <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Product{Name=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Melons"</span>, CategoryID=005},
        };
        #endregion


        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>[] args)
        {
            JoinDemonstration app = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> JoinDemonstration();

            app.InnerJoin();
            app.GroupJoin();
            app.GroupInnerJoin();
            app.GroupJoin3();
            app.LeftOuterJoin();
            app.LeftOuterJoin2();

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Keep the console window open in debug mode.</span>
            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Press any key to exit."</span>);
            Console.ReadKey();
        }

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> InnerJoin()
        {
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create the query that selects </span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// a property from each element.</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> innerJoinQuery =
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> category <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> categories
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> prod <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> products <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> category.ID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> prod.CategoryID
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> { Category = category.ID, Product = prod.Name };

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"InnerJoin:"</span>);
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Execute the query. Access results </span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// with a simple foreach statement.</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> item <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> innerJoinQuery)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"{0,-10}{1}"</span>, item.Product, item.Category);
            }
            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"InnerJoin: {0} items in 1 group."</span>, innerJoinQuery.Count());
            Console.WriteLine(System.Environment.NewLine);

        }

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> GroupJoin()
        {
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// This is a demonstration query to show the output</span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// of a </span><span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"raw"</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">group</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span>. A more typical <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">group</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// is shown in the GroupInnerJoin method.</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> groupJoinQuery =
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> category <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> categories
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> prod <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> products <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> category.ID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> prod.CategoryID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> prodGroup
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> prodGroup;

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Store the count of total items (for demonstration only).</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> totalItems = 0;

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Simple GroupJoin:"</span>);

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// A nested foreach statement is required to access group items.</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> prodGrouping <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> groupJoinQuery)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Group:"</span>);
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> item <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> prodGrouping)
                {
                    totalItems++;
                    Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"   {0,-10}{1}"</span>, item.Name, item.CategoryID);
                }
            }
            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Unshaped GroupJoin: {0} items in {1} unnamed groups"</span>, totalItems, groupJoinQuery.Count());
            Console.WriteLine(System.Environment.NewLine);
        }

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> GroupInnerJoin()
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> groupJoinQuery2 =
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> category <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> categories
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">orderby</span> category.ID
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> prod <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> products <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> category.ID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> prod.CategoryID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> prodGroup
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span>
                {
                    Category = category.Name,
                    Products = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> prod2 <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> prodGroup
                               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">orderby</span> prod2.Name
                               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> prod2
                };

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//Console.WriteLine(</span><span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"GroupInnerJoin:"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> totalItems = 0;

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"GroupInnerJoin:"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> productGroup <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> groupJoinQuery2)
            {
                Console.WriteLine(productGroup.Category);
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> prodItem <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> productGroup.Products)
                {
                    totalItems++;
                    Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"  {0,-10} {1}"</span>, prodItem.Name, prodItem.CategoryID);
                }
            }
            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"GroupInnerJoin: {0} items in {1} named groups"</span>, totalItems, groupJoinQuery2.Count());
            Console.WriteLine(System.Environment.NewLine);
        }

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> GroupJoin3()
        {

            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> groupJoinQuery3 =
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> category <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> categories
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> product <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> products <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> category.ID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> product.CategoryID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> prodGroup
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> prod <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> prodGroup
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">orderby</span> prod.CategoryID
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> { Category = prod.CategoryID, ProductName = prod.Name };

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//Console.WriteLine(</span><span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"GroupInnerJoin:"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> totalItems = 0;

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"GroupJoin3:"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> item <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> groupJoinQuery3)
            {
                totalItems++;
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"   {0}:{1}"</span>, item.ProductName, item.Category);
            }

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"GroupJoin3: {0} items in 1 group"</span>, totalItems, groupJoinQuery3.Count());
            Console.WriteLine(System.Environment.NewLine);
        }

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> LeftOuterJoin()
        {
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create the query.</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> leftOuterQuery =
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> category <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> categories
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> prod <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> products <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> category.ID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> prod.CategoryID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> prodGroup
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> prodGroup.DefaultIfEmpty(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Product() { Name = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Nothing!"</span>, CategoryID = category.ID });

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Store the count of total items (for demonstration only).</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> totalItems = 0;

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Left Outer Join:"</span>);

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// A nested foreach statement  is required to access group items</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> prodGrouping <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> leftOuterQuery)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Group:"</span>, prodGrouping.Count());
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> item <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> prodGrouping)
                {
                    totalItems++;
                    Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"  {0,-10}{1}"</span>, item.Name, item.CategoryID);
                }
            }
            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"LeftOuterJoin: {0} items in {1} groups"</span>, totalItems, leftOuterQuery.Count());
            Console.WriteLine(System.Environment.NewLine);
        }

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> LeftOuterJoin2()
        {
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create the query.</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> leftOuterQuery2 =
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> category <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> categories
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> prod <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> products <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> category.ID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> prod.CategoryID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> prodGroup
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> item <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> prodGroup.DefaultIfEmpty()
               <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> { Name = item == <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">null</span> ? <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Nothing!"</span> : item.Name, CategoryID = category.ID };

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"LeftOuterJoin2: {0} items in 1 group"</span>, leftOuterQuery2.Count());
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Store the count of total items</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> totalItems = 0;

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Left Outer Join 2:"</span>);

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Groups have been flattened.</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> item <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> leftOuterQuery2)
            {
                totalItems++;
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"{0,-10}{1}"</span>, item.Name, item.CategoryID);
            }
            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"LeftOuterJoin2: {0} items in 1 group"</span>, totalItems);



<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/*Output:

InnerJoin:
Cola      1
Tea       1
Mustard   2
Pickles   2
Carrots   3
Bok Choy  3
Peaches   5
Melons    5
InnerJoin: 8 items in 1 group.


Unshaped GroupJoin:
Group:
   Cola      1
   Tea       1
Group:
   Mustard   2
   Pickles   2
Group:
   Carrots   3
   Bok Choy  3
Group:
Group:
   Peaches   5
   Melons    5
Unshaped GroupJoin: 8 items in 5 unnamed groups


GroupInnerJoin:
Beverages
  Cola       1
  Tea        1
Condiments
  Mustard    2
  Pickles    2
Vegetables
  Bok Choy   3
  Carrots    3
Grains
Fruit
  Melons     5
  Peaches    5
GroupInnerJoin: 8 items in 5 named groups


GroupJoin3:
   Cola:1
   Tea:1
   Mustard:2
   Pickles:2
   Carrots:3
   Bok Choy:3
   Peaches:5
   Melons:5
GroupJoin3: 8 items in 1 group


Left Outer Join:
Group:
  Cola      1
  Tea       1
Group:
  Mustard   2
  Pickles   2
Group:
  Carrots   3
  Bok Choy  3
Group:
  Nothing!  4
Group:
  Peaches   5
  Melons    5
LeftOuterJoin: 9 items in 5 groups


LeftOuterJoin2: 9 items in 1 group
Left Outer Join 2:
Cola      1
Tea       1
Mustard   2
Pickles   2
Carrots   3
Bok Choy  3
Nothing!  4
Peaches   5
Melons    5
LeftOuterJoin2: 9 items in 1 group
Press any key to exit.
*/</span>

</pre></td></tr></table></span></div></div></div><h1 class="heading"><span onclick="ExpandCollapse(languageReferenceRemarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(languageReferenceRemarksToggle, event)" tabindex="0"><img id="languageReferenceRemarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />备注</span></h1><div id="languageReferenceRemarksSection" class="section" name="collapseableSection" style=""><p>后面未跟 <span sdata="langKeyword" value="into"><span class="keyword">into</span></span> 的 <span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句被转换为 <span sdata="cer" target="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})"><mshelp:link keywords="Overload:System.Linq.Enumerable.Join" tabindex="0">Join</mshelp:link></span> 方法调用；后面跟有 <span sdata="langKeyword" value="into"><span class="keyword">into</span></span> 的 <span sdata="langKeyword" value="join"><span class="keyword">join</span></span> 子句被转换为 <span sdata="cer" target="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})"><mshelp:link keywords="Overload:System.Linq.Enumerable.GroupJoin" tabindex="0">GroupJoin</mshelp:link></span> 方法调用。</p></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />请参见</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><h4 class="subHeading">任务</h4><div class="seeAlsoStyle"><span sdata="link"><a href="18e32be8-93db-4d30-8dea-ec6596e18f43.htm">如何：执行左外部联接（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="d9edb404-8314-413e-ae51-83bb86c7a4b5.htm">如何：执行内部联接（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="31b654c0-77ac-43fa-be11-aa38e14cae2d.htm">如何：执行分组联接（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="83f36f16-2ba3-453f-8b9f-7d02b415610e.htm">如何：对 Join 子句的结果进行排序（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="3e015b3f-9cca-4b0c-aa97-dca0d36ea592.htm">如何：使用复合键进行联接（C# 编程指南）</a></span></div><h4 class="subHeading">概念</h4><div class="seeAlsoStyle"><span sdata="link"><a href="40638f19-fb46-4d26-a2d9-a383b48f5ed4.htm">LINQ 查询表达式（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><mshelp:link keywords="442d176d-028c-4beb-8d22-407d4ef89107" tabindex="0">联接运算</mshelp:link></span></div><h4 class="subHeading">参考</h4><div class="seeAlsoStyle"><span sdata="link"><a href="c817242e-b12c-4baa-a57e-73ee138f34d1.htm">group 子句（C# 参考）</a></span></div><h4 class="subHeading">其他资源</h4><div class="seeAlsoStyle"><span sdata="link"><a href="6c9bec16-dbd7-4a7c-a060-fe4600b2021f.htm">查询关键字（C# 参考）</a></span></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" title="“页脚”图像" />
        </div>
<span id="feedbackarea">将有关本主题的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);">反馈意见</a>发送给 Microsoft。</span>
</div>
    </div>
  </body>
</html>