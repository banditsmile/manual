<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>select 子句（C# 参考）</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CommonUtilities.js"> </script>
    <xml>
      <MSHelp:TOCTitle Title="select 子句" />
      <MSHelp:Keyword Index="A" Term="df01e266-5781-4aaa-80c4-67cf28ea093f" />
      <MSHelp:Keyword Index="K" Term="select 子句 [C#]" />
      <MSHelp:Keyword Index="K" Term="select 关键字 [C#]" />
      <MSHelp:Keyword Index="F" Term="select" />
      <MSHelp:Keyword Index="F" Term="select_CSharpKeyword" />
      <MSHelp:Keyword Index="B" Term="LINQProjectionOps" />
      <MSHelp:Attr Name="RevisionNumber" Value="17" />
      <MSHelp:Attr Name="AssetID" Value="df01e266-5781-4aaa-80c4-67cf28ea093f" />
      <MSHelp:Attr Name="Abstract" Value="在查询表达式中，select 子句可以指定将在执行查询时产生的值的类型。该子句的结果将基于前面所有子句的计算结果以及 select 子句本身中的所有表达式。查询表达式必须以 select 子句或 group 子句结束。" />
      <MSHelp:Attr Name="codelang" Value="CSharp" />
      <MSHelp:Attr Name="CommunityContent" Value="1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLangVers" Value="CSharp" />
      <MSHelp:Attr Name="DocSet" Value="C#" />
      <MSHelp:Attr Name="DocSet" Value="C# Lang" />
      <MSHelp:Attr Name="DocSet" Value="ExpressLibVS" />
      <MSHelp:Attr Name="ProgModel" Value="managed" />
      <MSHelp:Attr Name="ShippedIn" Value="vs.90" />
      <MSHelp:Attr Name="Technology" Value="ManagedCode" />
      <MSHelp:Attr Name="TopicVersion" Value="09.00.08178.10000" />
      <MSHelp:Attr Name="Catalog Container" Value="System_Default_Catalog" />
      <MSHelp:Attr Name="Content Set Container" Value="System_Default_Content_Set" />
      <MSHelp:Attr Name="TopicType" Value="kbRef" />
      <MSHelp:Attr Name="Locale" Value="zh-chs" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="“折叠”图像" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="“展开”图像" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="“复制”图像" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/copycodeHighlight.gif" title="“复制悬停”图像" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">全部折叠</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">全部展开</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：全部 </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：多个 </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual C++ </nobr></label><label id="devlangsMenuJSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：J# </nobr></label><label id="devlangsMenuJScriptLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：JScript </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
        <input id="JSharpCheckbox" type="checkbox" data="JSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JSharpCheckbox">J#</label>
        <br />
        <input id="JScriptCheckbox" type="checkbox" data="JScript,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JScriptCheckbox">JScript</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">C# 语言参考</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">select 子句（C# 参考）</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="df01e266-5781-4aaa-80c4-67cf28ea093f.htm#exampleToggle" onclick="OpenSection(exampleToggle)">示例</a>  <a href="df01e266-5781-4aaa-80c4-67cf28ea093f.htm#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">另请参见</a>  
<script type="text/javascript">
var fbBody = '%b8%d0%d0%bb%c4%fa%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%bf%aa%b7%a2%b0%e6%b1%e0%d0%b4%cd%c5%b6%d3%bd%ab%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%d3%c3%d3%da%b8%c4%bd%f8%ce%c4%b5%b5%a1%a3%ce%d2%c3%c7%d4%da%c9%f3%d4%c4%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%ca%b1%a3%ac%bf%c9%c4%dc%bb%e1%b8%f8%c4%fa%b7%a2%cb%cd%b5%e7%d7%d3%d3%ca%bc%fe%a3%ac%d2%d4%c7%eb%c4%fa%cc%e1%b9%a9%bd%f8%d2%bb%b2%bd%b5%c4%bd%e2%ca%cd%cb%b5%c3%f7%bb%f2%d5%df%be%cd%bd%e2%be%f6%b7%bd%b0%b8%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%ce%d2%c3%c7%b2%bb%bb%e1%bd%ab%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%d3%c3%d3%da%c8%ce%ba%ce%c6%e4%cb%fb%d3%c3%cd%be%a3%ac%b2%a2%c7%d2%d4%da%c9%f3%d4%c4%cd%ea%d6%ae%ba%f3%a3%ac%ce%d2%c3%c7%b2%bb%bb%e1%d4%d9%b1%a3%c1%f4%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%a1%a3%0d%0a%d3%d0%b9%d8%20Microsoft%20%d2%fe%cb%bd%d5%fe%b2%df%b5%c4%bd%f8%d2%bb%b2%bd%d0%c5%cf%a2%a3%ac%c7%eb%b2%ce%bc%fb%20http%3a%2f%2fprivacy.microsoft.com%2fzh-cn%2fdefault.aspx%a1%a3';
var fbSubject = 'Customer%20Feedback';
</script>
  <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);"> 发送反馈意见</a></span>
</td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <p><font color="DarkGray">更新：2007 年 11 月</font></p><div class="introduction"><p>在查询表达式中，<span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 子句可以指定将在执行查询时产生的值的类型。该子句的结果将基于前面所有子句的计算结果以及 <span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 子句本身中的所有表达式。查询表达式必须以 <span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 子句或 <mshelp:link keywords="c817242e-b12c-4baa-a57e-73ee138f34d1" tabindex="0">group</mshelp:link> 子句结束。</p><p>下面的示例演示了查询表达式中的简单 <span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 子句。</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> SelectSample1
{   
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main()
    {           
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//Create the data source</span>
        List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; Scores = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt;() { 97, 92, 81, 60 };

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create the query.</span>
        IEnumerable&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; queryHighScores =
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> score <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> Scores
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> score &gt; 80
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> score;

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Execute the query.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> i <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> queryHighScores)
        {
            Console.Write(i + <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">" "</span>);
        }            
    }
}
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//Output: 97 92 81</span>

</pre></td></tr></table></span></div></div><p><span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 子句产生的序列的类型决定了查询变量 <span class="code">queryHighScores</span> 的类型。在最简单的情况下，<span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 子句仅指定范围变量。这会使返回的序列包含与数据源具有相同类型的元素。有关更多信息，请参见<span sdata="link"><mshelp:link keywords="99118938-d47c-4d7e-bb22-2657a9f95268" tabindex="0">查询操作中的类型关系 (LINQ)</mshelp:link></span>。不过，<span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 子句还提供了一种功能强大的机制，可用于将源数据转换（或投影）为新类型。有关更多信息，请参见<span sdata="link"><mshelp:link keywords="674eae9e-bc72-4a88-aed3-802b45b25811" tabindex="0">使用 LINQ 进行数据转换</mshelp:link></span>。</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />示例</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><p>下面的示例演示了 <span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 子句可能采用的所有不同形式。在每个查询中，请注意 <span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 子句和查询变量（<span class="code">studentQuery1</span>、<span class="code">studentQuery2</span> 等）的类型之间的关系。</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> SelectSample2
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Define some classes</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Student
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> First { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> Last { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> ID { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; Scores;
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> ContactInfo GetContactInfo(SelectSample2 app, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> id)
            {
                ContactInfo cInfo =
                    (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> ci <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> app.contactList
                    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> ci.ID == id
                    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> ci)
                    .FirstOrDefault();

                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> cInfo;
            }

            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">override</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> ToString()
            {
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> First + <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">" "</span> + Last + <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">":"</span> + ID;
            }
        }

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> ContactInfo
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> ID { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> Email { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> Phone { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">override</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> ToString() { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> Email + <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">","</span> + Phone; }
        }

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> ScoreInfo
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> Average { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> ID { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
        }

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// The primary data source</span>
        List&lt;Student&gt; students = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;Student&gt;()
        {
             <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Svetlana"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Omelchenko"</span>, ID=111, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt;() {97, 92, 81, 60}},
             <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Claire"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"O'Donnell"</span>, ID=112, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt;() {75, 84, 91, 39}},
             <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Sven"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Mortensen"</span>, ID=113, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt;() {88, 94, 65, 91}},
             <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Cesar"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Garcia"</span>, ID=114, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt;() {97, 89, 85, 82}},
        };

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Separate data source for contact info.</span>
        List&lt;ContactInfo&gt; contactList = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;ContactInfo&gt;()
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> ContactInfo {ID=111, Email=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"SvetlanO@Contoso.com"</span>, Phone=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"206-555-0108"</span>},
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> ContactInfo {ID=112, Email=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"ClaireO@Contoso.com"</span>, Phone=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"206-555-0298"</span>},
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> ContactInfo {ID=113, Email=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"SvenMort@Contoso.com"</span>, Phone=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"206-555-1130"</span>},
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> ContactInfo {ID=114, Email=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"CesarGar@Contoso.com"</span>, Phone=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"206-555-0521"</span>}
        };


        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>[] args)
        {
            SelectSample2 app = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> SelectSample2();

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Produce a filtered sequence of unmodified Students.</span>
            IEnumerable&lt;Student&gt; studentQuery1 =
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> app.students
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> student.ID &gt; 111
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> student;

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Query1: select range_variable"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (Student s <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentQuery1)
            {
                Console.WriteLine(s.ToString());
            }

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Produce a filtered sequence of elements that contain</span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// only one property of each Student.</span>
            IEnumerable&lt;String&gt; studentQuery2 =
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> app.students
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> student.ID &gt; 111
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> student.Last;

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"\r\n studentQuery2: select range_variable.Property"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> s <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentQuery2)
            {
                Console.WriteLine(s);
            }

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Produce a filtered sequence of objects created by</span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// a method call on each Student.</span>
            IEnumerable&lt;ContactInfo&gt; studentQuery3 =
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> app.students
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> student.ID &gt; 111
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> student.GetContactInfo(app, student.ID);

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"\r\n studentQuery3: select range_variable.Method"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (ContactInfo ci <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentQuery3)
            {
                Console.WriteLine(ci.ToString());
            }

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Produce a filtered sequence of ints from</span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// the internal array inside each Student.</span>
            IEnumerable&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; studentQuery4 =
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> app.students
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> student.ID &gt; 111
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> student.Scores[0];

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"\r\n studentQuery4: select range_variable[index]"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> i <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentQuery4)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"First score = {0}"</span>, i);
            }

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Produce a filtered sequence of doubles </span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// that are the result of an expression.</span>
            IEnumerable&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span>&gt; studentQuery5 =
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> app.students
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> student.ID &gt; 111
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> student.Scores[0] * 1.1;

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"\r\n studentQuery5: select expression"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> d <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentQuery5)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Adjusted first score = {0}"</span>, d);
            }

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Produce a filtered sequence of doubles that are</span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// the result of a method call.</span>
            IEnumerable&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span>&gt; studentQuery6 =
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> app.students
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> student.ID &gt; 111
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> student.Scores.Average();

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"\r\n studentQuery6: select expression2"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">double</span> d <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentQuery6)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Average = {0}"</span>, d);
            }

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Produce a filtered sequence of anonymous types</span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// that contain only two properties from each Student.</span>
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> studentQuery7 =
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> app.students
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> student.ID &gt; 111
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> { student.First, student.Last };

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"\r\n studentQuery7: select new anonymous type"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> item <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentQuery7)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"{0}, {1}"</span>, item.Last, item.First);
            }

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Produce a filtered sequence of named objects that contain</span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// a method return value and a property from each Student.</span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Use named types if you need to pass the query variable </span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// across a method boundary.</span>
            IEnumerable&lt;ScoreInfo&gt; studentQuery8 =
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> app.students
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> student.ID &gt; 111
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> ScoreInfo
                {
                    Average = student.Scores.Average(),
                    ID = student.ID
                };

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"\r\n studentQuery8: select new named type"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (ScoreInfo si <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentQuery8)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"ID = {0}, Average = {1}"</span>, si.ID, si.Average);
            }

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Produce a filtered sequence of students who appear on a contact list</span>
            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// and whose average is greater than 85.</span>
            IEnumerable&lt;ContactInfo&gt; studentQuery9 =
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> app.students
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> student.Scores.Average() &gt; 85
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">join</span> ci <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> app.contactList <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">on</span> student.ID <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">equals</span> ci.ID
                <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> ci;

            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"\r\n studentQuery9: select result of join clause"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (ContactInfo ci <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentQuery9)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"ID = {0}, Email = {1}"</span>, ci.ID, ci.Email);
            }

            <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Keep the console window open in debug mode</span>
            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Press any key to exit."</span>);
            Console.ReadKey();
            }
        }
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/* Output
        Query1: select range_variable
        Claire O'Donnell:112
        Sven Mortensen:113
        Cesar Garcia:114

        studentQuery2: select range_variable.Property
        O'Donnell
        Mortensen
        Garcia

        studentQuery3: select range_variable.Method
        ClaireO@Contoso.com,206-555-0298
        SvenMort@Contoso.com,206-555-1130
        CesarGar@Contoso.com,206-555-0521

        studentQuery4: select range_variable[index]
        First score = 75
        First score = 88
        First score = 97

        studentQuery5: select expression
        Adjusted first score = 82.5
        Adjusted first score = 96.8
        Adjusted first score = 106.7

        studentQuery6: select expression2
        Average = 72.25
        Average = 84.5
        Average = 88.25

        studentQuery7: select new anonymous type
        O'Donnell, Claire
        Mortensen, Sven
        Garcia, Cesar

        studentQuery8: select new named type
        ID = 112, Average = 72.25
        ID = 113, Average = 84.5
        ID = 114, Average = 88.25

        studentQuery9: select result of join clause
        ID = 114, Email = CesarGar@Contoso.com
*/</span>

</pre></td></tr></table></span></div></div><p>如上一个示例中的 <span class="code">studentQuery8</span> 所示，您有时可能希望所返回序列中的元素仅包含源元素的属性子集。通过使返回的序列尽可能地小一些，可以降低内存需求，并提高查询的执行速度。通过在 <span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 子句中创建一个匿名类型，并且借助于对象初始值设定项用源元素中的适当属性对该匿名类型进行初始化，可以达到此目的。有关如何执行此操作的示例，请参见<span sdata="link"><a href="c58f3db5-d7d4-4651-bd2d-5a3a97357f61.htm">对象和集合初始值设定项（C# 编程指南）</a></span>。</p></div><h1 class="heading"><span onclick="ExpandCollapse(languageReferenceRemarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(languageReferenceRemarksToggle, event)" tabindex="0"><img id="languageReferenceRemarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />备注</span></h1><div id="languageReferenceRemarksSection" class="section" name="collapseableSection" style=""><p>编译时，<span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 子句会被转换为对 <span sdata="cer" target="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})"><mshelp:link keywords="Overload:System.Linq.Enumerable.Select" tabindex="0">Select</mshelp:link></span> 标准查询运算符的方法调用。</p></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />请参见</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><h4 class="subHeading">概念</h4><div class="seeAlsoStyle"><span sdata="link"><a href="40638f19-fb46-4d26-a2d9-a383b48f5ed4.htm">LINQ 查询表达式（C# 编程指南）</a></span></div><h4 class="subHeading">参考</h4><div class="seeAlsoStyle"><span sdata="link"><a href="1aefd18c-1314-47f8-99ec-9bcefb09e699.htm">from 子句（C# 参考）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="43f40242-17e0-4452-8573-090503ad3137.htm">分部（方法）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="59c9d7a4-3b0e-475e-b620-0ab86c088e9b.htm">匿名类型（C# 编程指南）</a></span></div><h4 class="subHeading">其他资源</h4><div class="seeAlsoStyle"><span sdata="link"><a href="06de3167-c16c-4e1a-b3c5-c27841d4569a.htm">C# 参考</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="6c9bec16-dbd7-4a7c-a060-fe4600b2021f.htm">查询关键字（C# 参考）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><mshelp:link keywords="b8700c1f-05c9-4380-b6eb-e34c4da38e54" tabindex="0">C# 中的 LINQ 入门</mshelp:link></span></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" title="“页脚”图像" />
        </div>
<span id="feedbackarea">将有关本主题的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);">反馈意见</a>发送给 Microsoft。</span>
</div>
    </div>
  </body>
</html>