<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>继承（C# 编程指南）</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CommonUtilities.js"> </script>
    <xml>
      <MSHelp:TOCTitle Title="继承" />
      <MSHelp:Keyword Index="A" Term="81d64ee4-50f9-4d6c-a8dc-257c348d2eea" />
      <MSHelp:Keyword Index="K" Term="抽象类, C#" />
      <MSHelp:Keyword Index="K" Term="抽象方法 [C#]" />
      <MSHelp:Keyword Index="K" Term="C# 语言, 继承" />
      <MSHelp:Keyword Index="K" Term="派生类 [C#], 继承" />
      <MSHelp:Keyword Index="K" Term="继承 [C#]" />
      <MSHelp:Keyword Index="K" Term="虚方法 [C#]" />
      <MSHelp:Attr Name="RevisionNumber" Value="28" />
      <MSHelp:Attr Name="AssetID" Value="81d64ee4-50f9-4d6c-a8dc-257c348d2eea" />
      <MSHelp:Attr Name="Abstract" Value="&#xD;&#xA;                    继承（加上封装和多态性）是面向对象的编程的三个主要特性（“支柱”）之一。继承用于创建可重用、扩展和修改在其他类中定义的行为的新类。其成员被继承的类称为“基类”，继承这些成员的类称为“派生类”。&#xD;&#xA;                " />
      <MSHelp:Attr Name="codelang" Value="CSharp" />
      <MSHelp:Attr Name="CommunityContent" Value="1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLangVers" Value="CSharp" />
      <MSHelp:Attr Name="DocSet" Value="C#" />
      <MSHelp:Attr Name="DocSet" Value="C# Lang" />
      <MSHelp:Attr Name="DocSet" Value="ExpressLibVS" />
      <MSHelp:Attr Name="ProgModel" Value="managed" />
      <MSHelp:Attr Name="ShippedIn" Value="vs.90" />
      <MSHelp:Attr Name="Technology" Value="ManagedCode" />
      <MSHelp:Attr Name="TopicVersion" Value="09.00.08178.10000" />
      <MSHelp:Attr Name="Catalog Container" Value="System_Default_Catalog" />
      <MSHelp:Attr Name="Content Set Container" Value="System_Default_Content_Set" />
      <MSHelp:Attr Name="TopicType" Value="kbRef" />
      <MSHelp:Attr Name="Locale" Value="zh-chs" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="“折叠”图像" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="“展开”图像" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="“复制”图像" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/copycodeHighlight.gif" title="“复制悬停”图像" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">全部折叠</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">全部展开</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：全部 </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：多个 </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual C++ </nobr></label><label id="devlangsMenuJSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：J# </nobr></label><label id="devlangsMenuJScriptLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：JScript </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
        <input id="JSharpCheckbox" type="checkbox" data="JSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JSharpCheckbox">J#</label>
        <br />
        <input id="JScriptCheckbox" type="checkbox" data="JScript,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JScriptCheckbox">JScript</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">C# 编程指南</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">继承（C# 编程指南）</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="81d64ee4-50f9-4d6c-a8dc-257c348d2eea.htm#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">另请参见</a>  
<script type="text/javascript">
var fbBody = '%b8%d0%d0%bb%c4%fa%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%bf%aa%b7%a2%b0%e6%b1%e0%d0%b4%cd%c5%b6%d3%bd%ab%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%d3%c3%d3%da%b8%c4%bd%f8%ce%c4%b5%b5%a1%a3%ce%d2%c3%c7%d4%da%c9%f3%d4%c4%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%ca%b1%a3%ac%bf%c9%c4%dc%bb%e1%b8%f8%c4%fa%b7%a2%cb%cd%b5%e7%d7%d3%d3%ca%bc%fe%a3%ac%d2%d4%c7%eb%c4%fa%cc%e1%b9%a9%bd%f8%d2%bb%b2%bd%b5%c4%bd%e2%ca%cd%cb%b5%c3%f7%bb%f2%d5%df%be%cd%bd%e2%be%f6%b7%bd%b0%b8%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%ce%d2%c3%c7%b2%bb%bb%e1%bd%ab%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%d3%c3%d3%da%c8%ce%ba%ce%c6%e4%cb%fb%d3%c3%cd%be%a3%ac%b2%a2%c7%d2%d4%da%c9%f3%d4%c4%cd%ea%d6%ae%ba%f3%a3%ac%ce%d2%c3%c7%b2%bb%bb%e1%d4%d9%b1%a3%c1%f4%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%a1%a3%0d%0a%d3%d0%b9%d8%20Microsoft%20%d2%fe%cb%bd%d5%fe%b2%df%b5%c4%bd%f8%d2%bb%b2%bd%d0%c5%cf%a2%a3%ac%c7%eb%b2%ce%bc%fb%20http%3a%2f%2fprivacy.microsoft.com%2fzh-cn%2fdefault.aspx%a1%a3';
var fbSubject = 'Customer%20Feedback';
</script>
  <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);"> 发送反馈意见</a></span>
</td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <p><font color="DarkGray">更新：
                    
    2008 年 7 月
  
                </font></p><div class="introduction"><p>
                    继承（加上封装和多态性）是面向对象的编程的三个主要特性（“支柱”）之一。继承用于创建可重用、扩展和修改在其他类中定义的行为的新类。其成员被继承的类称为“基类”，继承这些成员的类称为“派生类”。
                </p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" title="说明" src="../icons/alert_note.gif" /><b>说明：</b></th></tr><tr><td><p>结构不支持继承，但可以实现接口。有关更多信息，请参见<span sdata="link"><a href="2feda177-ce11-432d-81b4-d50f5f35fd37.htm">接口（C# 编程指南）</a></span>。</p></td></tr></table></div><p>
                    从概念上来说，派生类是基类的专用化。例如，如果您有一个基类 <span class="code">Animal</span>，则可以有一个名为 <span class="code">Mammal</span> 的派生类和一个名为 <span class="code">Reptile</span> 的派生类。<span class="code">Mammal</span> 是一个 <span class="code">Animal</span>，<span class="code">Reptile</span> 也是一个 <span class="code">Animal</span>，但每个派生类均表示基类的不同专用化。
                </p><p>
                    定义一个类从其他类派生时，派生类隐式获得基类的除构造函数和析构函数以外的所有成员。因此，派生类可以重用基类中的代码而无需重新实现这些代码。可以在派生类中添加更多成员。派生类以这种方式扩展基类的功能。
                </p><p>
                    下图演示一个 <span class="code">WorkItem</span> 类，该类表示某业务流程中的一个工作项。和所有的类一样，该类派生自 <span sdata="cer" target="T:System.Object"><mshelp:link keywords="T:System.Object" tabindex="0">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Object</mshelp:link></span> 并继承其所有方法。<span class="code">WorkItem</span> 添加了自己的五个成员。其中包括一个构造函数，因为构造函数不能继承。<span class="code">ChangeRequest</span> 继承自 <span class="code">WorkItem</span> 并表示特定种类的工作项。<span class="code">ChangeRequest</span> 在它从 <span class="code">WorkItem</span> 和 <span sdata="cer" target="T:System.Object"><mshelp:link keywords="T:System.Object" tabindex="0">Object</mshelp:link></span> 继承的成员中另外添加了两个成员。它必须添加自己的构造函数，还要添加一个成员以实现 <span class="code">ChangeRequest</span> 与应用更改的原始 <span class="code">WorkItem</span> 之间的关联。
                </p><span class="media"><div class="caption">类继承</div><br /><img alt="类继承" src="../art/Class_Inheritance.png" /></span><p>
                    下面的示例演示如何以 C# 表示上图所示的类关系。该示例还演示 <span class="code">WorkItem</span> 如何重写虚方法 <span sdata="cer" target="M:System.Object.ToString"><mshelp:link keywords="M:System.Object.ToString" tabindex="0">Object<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ToString</mshelp:link></span> 以及 <span class="code">ChangeRequest</span> 类如何继承该方法的 <span class="code">WorkItem</span> 实现。
                </p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// WorkItem implicitly inherits from Object class</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> WorkItem
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">private</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> nextID;
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">protected</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> ID { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">protected</span> TimeSpan jobLength { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">protected</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> Title { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">protected</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> Description { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Default constructor</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> WorkItem() 
    {
        ID = 0;
        Title = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Default title"</span>;
        Description = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Default description."</span>;
        jobLength = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> TimeSpan();
    }
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Static constructor for static member.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> WorkItem()
    {
        nextID = 0;
    }
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Instance constructor.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> WorkItem( <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> title, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> desc, TimeSpan joblen)
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.ID = GetNextID();                
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.Title = title;
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.Description = desc;
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.jobLength = joblen;
    }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">protected</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> GetNextID()
    {
       <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> ++nextID;
    }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Update(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> title, TimeSpan joblen)
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.Title = title;
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.jobLength = joblen;
    }

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Virtual method override.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">override</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> ToString()
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> String.Format(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"{0} - {1}"</span>, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.ID, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.Title); 
    }
}

<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// ChangeRequest derives from WorkItem and adds two of its own members.</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> ChangeRequest : WorkItem
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">protected</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> originalItemID {<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>;}
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> ChangeRequest() { }
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> ChangeRequest(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> title, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> desc, TimeSpan jobLen, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> originalID)
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.ID = GetNextID();
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.Title = title;
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.Description = desc;
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.jobLength = jobLen;
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">this</span>.originalItemID = originalID;
    }
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Program
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main()
    {
        WorkItem item = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> WorkItem(                                
                        <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Fix Bugs"</span>, 
                        <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Fix all bugs in my source code branch"</span>,
                        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> TimeSpan(3, 4, 0, 0));

        ChangeRequest change = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> ChangeRequest(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Change design of base class"</span>,
                                                 <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Add members to base class"</span>,
                                                 <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> TimeSpan(4, 0, 0),
                                                 1);

        Console.WriteLine(item.ToString());

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// ChangeRequest inherits WorkItem's override of ToString</span>
        Console.WriteLine(change.ToString()); 

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Keep the console open in debug mode.</span>
        Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Press any key to exit."</span>);
        Console.ReadKey();
    }
}
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/* Output:
    1 - Fix Bugs
    2 - Change design of base class
*/</span>

</pre></td></tr></table></span></div></div></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0, event)" tabindex="0"><img id="sectionToggle0" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />抽象方法和虚方法</span></h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>
                    当基类将方法声明为 <mshelp:link keywords="5da9abae-bc1e-434f-8bea-3601b8dcb3b2" tabindex="0">virtual</mshelp:link> 时，派生类可以用自己的实现<mshelp:link keywords="dd1907a8-acf8-46d3-80b9-c2ca4febada8" tabindex="0">重写</mshelp:link>该方法。如果基类将成员声明为 <mshelp:link keywords="b0797770-c1f3-4b4d-9441-b9122602a6bb" tabindex="0">abstract</mshelp:link>，则在直接继承自该类的任何非抽象类中都必须重写该方法。如果派生类自身是抽象的，则它继承抽象成员而不实现它们。抽象成员和虚成员是多态性的基础，多态性是面向对象的编程的第二个主要特性。有关更多信息，请参见<span sdata="link"><a href="086af969-29a5-4ce8-a993-0b7d53839dab.htm">多态性（C# 编程指南）</a></span>。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle1)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle1, event)" tabindex="0"><img id="sectionToggle1" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />抽象基类</span></h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>
                    如果希望禁止通过 <mshelp:link keywords="e4136516-f058-45a8-84e5-da00a5cf9b6a" tabindex="0">new</mshelp:link> 关键字直接进行实例化，可以将类声明为 <mshelp:link keywords="b0797770-c1f3-4b4d-9441-b9122602a6bb" tabindex="0">abstract</mshelp:link>。如果这样做，则仅当从该类派生新类时才能使用该类。抽象类可以包含一个或多个自身声明为抽象的方法签名。这些签名指定参数和返回值，但没有实现（方法体）。抽象类不必包含抽象成员；但是，如果某个类确实包含抽象成员，则该类自身必须声明为抽象类。自身不是抽象类的派生类必须为抽象基类中的任何抽象方法提供实现。有关更多信息，请参见<span sdata="link"><a href="99aa52f7-b435-43f9-936e-2470af734c4e.htm">抽象类、密封类及类成员（C# 编程指南）</a></span>和<span sdata="link"><mshelp:link keywords="d3646e6d-5c1f-4922-8fb0-ec5effb30d60" tabindex="0">抽象类设计</mshelp:link></span>。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle2)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle2, event)" tabindex="0"><img id="sectionToggle2" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />接口</span></h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>
                    “接口”是一种引用类型，有点像仅包含抽象成员的抽象基类。类在从接口派生时必须为该接口的所有成员提供实现。类虽然只能从一个直接基类派生，但可以实现多个接口。
                </p><p>
                    接口用于为不一定具有“是”关系的类定义特定功能。例如，如果任何类或结构需要让客户端代码判断某类型的两个对象是否相等（无论该类型如何定义相等性），那么该类或结构就可以实现 <span sdata="cer" target="T:System.IEquatable"><span class="nolink">IEquatable</span></span><span sdata="cer" target="`1"><span class="nolink">[`1]</span></span> 接口。<span sdata="cer" target="T:System.IEquatable`1"><mshelp:link keywords="T:System.IEquatable`1" tabindex="0">IEquatable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></mshelp:link></span> 不表示基类和派生类之间存在的同一种“是”关系（例如 <span class="code">Mammal</span> 是 <span class="code">Animal</span>）。有关更多信息，请参见<span sdata="link"><a href="2feda177-ce11-432d-81b4-d50f5f35fd37.htm">接口（C# 编程指南）</a></span>。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle3)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle3, event)" tabindex="0"><img id="sectionToggle3" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />派生类对基类成员的访问</span></h1><div id="sectionSection3" class="section" name="collapseableSection" style=""><p>
                    派生类可以访问基类的公共成员、受保护成员、内部成员和受保护内部成员。即使派生类继承基类的私有成员，仍不能访问这些成员。但是，所有这些私有成员在派生类中仍然存在，且执行与基类自身中相同的工作。例如，假定一个受保护基类方法访问私有字段。要使继承的基类方法正常工作，派生类中必须有该字段。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle4)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle4, event)" tabindex="0"><img id="sectionToggle4" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />禁止进一步派生</span></h1><div id="sectionSection4" class="section" name="collapseableSection" style=""><p>
                    类可以将自身或其成员声明为 <mshelp:link keywords="8e4ed5d3-10be-47db-9488-0da2008e6f3f" tabindex="0">sealed</mshelp:link>，从而禁止其他类从该类自身或其任何成员继承。有关更多信息，请参见<span sdata="link"><a href="99aa52f7-b435-43f9-936e-2470af734c4e.htm">抽象类、密封类及类成员（C# 编程指南）</a></span>。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle5)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle5, event)" tabindex="0"><img id="sectionToggle5" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />派生类隐藏基类成员</span></h1><div id="sectionSection5" class="section" name="collapseableSection" style=""><p>
                    派生类可以通过以相同的名称和签名声明基类成员来隐藏这些成员。可以使用 <mshelp:link keywords="e4136516-f058-45a8-84e5-da00a5cf9b6a" tabindex="0">new</mshelp:link> 修饰符显式指示成员不作为基类成员的重写。不是必须要使用 <mshelp:link keywords="e4136516-f058-45a8-84e5-da00a5cf9b6a" tabindex="0">new</mshelp:link>，但如果不使用 <mshelp:link keywords="e4136516-f058-45a8-84e5-da00a5cf9b6a" tabindex="0">new</mshelp:link>，将生成编译器警告。有关更多信息，请参见<span sdata="link"><a href="88247d07-bd0d-49e9-a619-45ccbbfdf0c5.htm">使用 Override 和 New 关键字进行版本控制（C# 编程指南）</a></span>和<span sdata="link"><a href="323db184-b136-46fc-8839-007886e7e8b0.htm">了解何时使用 Override 和 New 关键字（C# 编程指南）</a></span>。
                </p></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />请参见</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><h4 class="subHeading">概念</h4><div class="seeAlsoStyle"><span sdata="link"><a href="ac0f23a2-6bf3-4077-be99-538ae5fd3bc5.htm">C# 编程指南</a></span></div><h4 class="subHeading">参考</h4><div class="seeAlsoStyle"><span sdata="link"><a href="cc39dbda-8754-423e-b5b1-16a1db0734c0.htm">类和结构（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="b95d8815-de18-4c3f-a8cc-a0a53bdf8690.htm">class（C# 参考）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="ff3dd9b7-dc93-4720-8855-ef5558f65c7c.htm">struct（C# 参考）</a></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(changeHistoryToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(changeHistoryToggle, event)" tabindex="0"><img id="changeHistoryToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />修订记录</span></h1><div id="changeHistorySection" class="section" name="collapseableSection" style=""><div class="caption"></div><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>
                    日期
                </p></th><th><p>
                    修订记录
                </p></th><th><p>
                    原因
                </p></th></tr><tr><td><p>
                    
    <p>2008 年 7 月</p>
  
                </p></td><td><p>
                    增加了内容、图示和新示例。
                </p></td><td><p>
                    
    <p>信息补充。</p>
  
                </p></td></tr></table></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" title="“页脚”图像" />
        </div>
<span id="feedbackarea">将有关本主题的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);">反馈意见</a>发送给 Microsoft。</span>
</div>
    </div>
  </body>
</html>