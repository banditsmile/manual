<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>group 子句（C# 参考）</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="http://manual.51yip.com/net/scripts/CommonUtilities.js"> </script>
    <xml>
      <MSHelp:TOCTitle Title="group 子句" />
      <MSHelp:Keyword Index="A" Term="c817242e-b12c-4baa-a57e-73ee138f34d1" />
      <MSHelp:Keyword Index="K" Term="group 子句 [C#]" />
      <MSHelp:Keyword Index="K" Term="group 关键字 [C#]" />
      <MSHelp:Keyword Index="F" Term="by_CSharpKeyword" />
      <MSHelp:Keyword Index="F" Term="group" />
      <MSHelp:Keyword Index="F" Term="group_CSharpKeyword" />
      <MSHelp:Keyword Index="B" Term="LINQGroupingData" />
      <MSHelp:Attr Name="RevisionNumber" Value="22" />
      <MSHelp:Attr Name="AssetID" Value="c817242e-b12c-4baa-a57e-73ee138f34d1" />
      <MSHelp:Attr Name="Abstract" Value="group 子句返回一个 T:System.Linq.IGrouping`2 对象序列，这些对象包含零个或更多个与该组的键值匹配的项。例如，可以按照每个字符串中的第一个字母对字符串序列进行分组。在这种情况下，第一个字母是键且具有 char 类型，并且存储在每个 T:System.Linq.IGrouping`2 对象的 Key 属性中。编译器可推断该键的类型。" />
      <MSHelp:Attr Name="codelang" Value="CSharp" />
      <MSHelp:Attr Name="CommunityContent" Value="1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLangVers" Value="CSharp" />
      <MSHelp:Attr Name="DocSet" Value="C#" />
      <MSHelp:Attr Name="DocSet" Value="C# Lang" />
      <MSHelp:Attr Name="DocSet" Value="ExpressLibVS" />
      <MSHelp:Attr Name="ProgModel" Value="managed" />
      <MSHelp:Attr Name="ShippedIn" Value="vs.90" />
      <MSHelp:Attr Name="Technology" Value="ManagedCode" />
      <MSHelp:Attr Name="TopicVersion" Value="09.00.08178.10000" />
      <MSHelp:Attr Name="Catalog Container" Value="System_Default_Catalog" />
      <MSHelp:Attr Name="Content Set Container" Value="System_Default_Content_Set" />
      <MSHelp:Attr Name="TopicType" Value="kbRef" />
      <MSHelp:Attr Name="Locale" Value="zh-chs" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="“折叠”图像" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="“展开”图像" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="“复制”图像" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="http://manual.51yip.com/net/icons/copycodeHighlight.gif" title="“复制悬停”图像" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">全部折叠</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">全部展开</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：全部 </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：多个 </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：Visual C++ </nobr></label><label id="devlangsMenuJSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：J# </nobr></label><label id="devlangsMenuJScriptLabel" for="devlangsDropdownImage" style="display: none;"><nobr>代码：JScript </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
        <input id="JSharpCheckbox" type="checkbox" data="JSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JSharpCheckbox">J#</label>
        <br />
        <input id="JScriptCheckbox" type="checkbox" data="JScript,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="JScriptCheckbox">JScript</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">C# 语言参考</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">group 子句（C# 参考）</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="c817242e-b12c-4baa-a57e-73ee138f34d1.htm#exampleToggle" onclick="OpenSection(exampleToggle)">示例</a>  <a href="c817242e-b12c-4baa-a57e-73ee138f34d1.htm#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">另请参见</a>  
<script type="text/javascript">
var fbBody = '%b8%d0%d0%bb%c4%fa%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%bf%aa%b7%a2%b0%e6%b1%e0%d0%b4%cd%c5%b6%d3%bd%ab%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%d3%c3%d3%da%b8%c4%bd%f8%ce%c4%b5%b5%a1%a3%ce%d2%c3%c7%d4%da%c9%f3%d4%c4%c4%fa%b5%c4%b7%b4%c0%a1%d2%e2%bc%fb%ca%b1%a3%ac%bf%c9%c4%dc%bb%e1%b8%f8%c4%fa%b7%a2%cb%cd%b5%e7%d7%d3%d3%ca%bc%fe%a3%ac%d2%d4%c7%eb%c4%fa%cc%e1%b9%a9%bd%f8%d2%bb%b2%bd%b5%c4%bd%e2%ca%cd%cb%b5%c3%f7%bb%f2%d5%df%be%cd%bd%e2%be%f6%b7%bd%b0%b8%cc%e1%b9%a9%b7%b4%c0%a1%d2%e2%bc%fb%a1%a3%ce%d2%c3%c7%b2%bb%bb%e1%bd%ab%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%d3%c3%d3%da%c8%ce%ba%ce%c6%e4%cb%fb%d3%c3%cd%be%a3%ac%b2%a2%c7%d2%d4%da%c9%f3%d4%c4%cd%ea%d6%ae%ba%f3%a3%ac%ce%d2%c3%c7%b2%bb%bb%e1%d4%d9%b1%a3%c1%f4%c4%fa%b5%c4%b5%e7%d7%d3%d3%ca%bc%fe%b5%d8%d6%b7%a1%a3%0d%0a%d3%d0%b9%d8%20Microsoft%20%d2%fe%cb%bd%d5%fe%b2%df%b5%c4%bd%f8%d2%bb%b2%bd%d0%c5%cf%a2%a3%ac%c7%eb%b2%ce%bc%fb%20http%3a%2f%2fprivacy.microsoft.com%2fzh-cn%2fdefault.aspx%a1%a3';
var fbSubject = 'Customer%20Feedback';
</script>
  <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);"> 发送反馈意见</a></span>
</td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <p><font color="DarkGray">更新：2007 年 11 月</font></p><div class="introduction"><p><span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 子句返回一个 <span sdata="cer" target="T:System.Linq.IGrouping`2"><mshelp:link keywords="T:System.Linq.IGrouping`2" tabindex="0">IGrouping<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TKey, TElement<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></mshelp:link></span> 对象序列，这些对象包含零个或更多个与该组的键值匹配的项。例如，可以按照每个字符串中的第一个字母对字符串序列进行分组。在这种情况下，第一个字母是键且具有 <mshelp:link keywords="b51cf4fb-124c-4067-af48-afbac122b228" tabindex="0">char</mshelp:link> 类型，并且存储在每个 <span sdata="cer" target="T:System.Linq.IGrouping`2"><mshelp:link keywords="T:System.Linq.IGrouping`2" tabindex="0">IGrouping<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TKey, TElement<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></mshelp:link></span> 对象的 <b>Key</b> 属性中。编译器可推断该键的类型。</p><p>可以用 <span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 子句结束查询表达式，如下面的示例所示：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Query variable is an IEnumerable&lt;IGrouping&lt;char, Student&gt;&gt;</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> studentQuery1 =
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> students
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">group</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">by</span> student.Last[0];

</pre></td></tr></table></span></div></div><p>如果您想要对每个组执行附加查询操作，则可以使用 <mshelp:link keywords="81ec62c1-f0b1-4755-8a31-959876e77f65" tabindex="0">into</mshelp:link> 上下文关键字指定一个临时标识符。使用 <span sdata="langKeyword" value="into"><span class="keyword">into</span></span> 时，必须继续编写该查询，并最终用一个 <span sdata="langKeyword" value="select"><span class="keyword">select</span></span> 语句或另一个 <span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 子句结束该查询，如下面的代码摘录所示：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Group students by the first letter of their last name</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Query variable is an IEnumerable&lt;IGrouping&lt;char, Student&gt;&gt;</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> studentQuery2 =
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> students
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">group</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">by</span> student.Last[0] <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> g
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">orderby</span> g.Key
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> g;

</pre></td></tr></table></span></div></div><p>本主题中的“示例”部分中提供了使用含有和不含 <span sdata="langKeyword" value="into"><span class="keyword">into</span></span> 的 <span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 的更完整示例。</p></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0, event)" tabindex="0"><img id="sectionToggle0" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />枚举组查询的结果</span></h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>由于 <span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 查询产生的 <span sdata="cer" target="T:System.Linq.IGrouping`2"><mshelp:link keywords="T:System.Linq.IGrouping`2" tabindex="0">IGrouping<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TKey, TElement<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></mshelp:link></span> 对象实质上是列表的列表，因此必须使用嵌套的 <mshelp:link keywords="5a9c5ddc-5fd3-457a-9bb6-9abffcd874ec" tabindex="0">foreach</mshelp:link> 循环来访问每一组中的各个项。外部循环用于循环访问组键，内部循环用于循环访问组本身中的每个项。组可能具有键，但没有元素。以下是执行上述代码示例中的查询的 <span sdata="langKeyword" value="foreach"><span class="keyword">foreach</span></span> 循环：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Iterate group items with a nested foreach. This IGrouping encapsulates</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// a sequence of Student objects, and a Key of type char.</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// For convenience, var can also be used in the foreach statement.</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (IGrouping&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">char</span>, Student&gt; studentGroup <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentQuery2)
{
     Console.WriteLine(studentGroup.Key);
     <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Explicit type for student could also be used here.</span>
     <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentGroup)
     {
         Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"   {0}, {1}"</span>, student.Last, student.First);
     }
 }

</pre></td></tr></table></span></div></div></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle1)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle1, event)" tabindex="0"><img id="sectionToggle1" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />键类型</span></h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>组键可以是任何类型，如字符串、内置数值类型、用户定义的命名类型或匿名类型。</p><h3 class="subHeading">按字符串进行分组</h3><div class="subsection"><p>上述代码示例使用的是 <span sdata="langKeyword" value="char"><span class="keyword">char</span></span>。可以很容易地改为指定字符串键，如完整的姓氏：</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Same as previous example except we use the entire last name as a key.</span>
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Query variable is an IEnumerable&lt;IGrouping&lt;string, Student&gt;&gt;</span>
 <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> studentQuery3 =
     <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> students
     <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">group</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">by</span> student.Last;

</pre></td></tr></table></span></div></div></div><h3 class="subHeading">按布尔进行分组</h3><div class="subsection"><p>下面的示例演示使用布尔值作为键将结果划分成两个组。请注意，该值是由 <span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 子句中的子表达式产生的。</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> GroupSample1
{
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// The element type of the data source.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Student
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> First { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> Last { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> ID { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; Scores;
    }

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> List&lt;Student&gt; GetStudents()
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Use a collection initializer to create the data source. Note that each element</span>
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//  in the list contains an inner sequence of scores.</span>
        List&lt;Student&gt; students = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;Student&gt;
        {
           <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Svetlana"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Omelchenko"</span>, ID=111, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; {97, 72, 81, 60}},
           <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Claire"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"O'Donnell"</span>, ID=112, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; {75, 84, 91, 39}},
           <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Sven"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Mortensen"</span>, ID=113, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; {99, 89, 91, 95}},
           <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Cesar"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Garcia"</span>, ID=114, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; {72, 81, 65, 84}},
           <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Debra"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Garcia"</span>, ID=115, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; {97, 89, 85, 82}} 
        };

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> students;

    }

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main()
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Obtain the data source.</span>
        List&lt;Student&gt; students = GetStudents();

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Group by true or false.</span>
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Query variable is an IEnumerable&lt;IGrouping&lt;bool, Student&gt;&gt;</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> booleanGroupQuery =
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> students
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">group</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">by</span> student.Scores.Average() &gt;= 80; <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//pass or fail!</span>

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Execute the query and access items in each group</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> studentGroup <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> booleanGroupQuery)
        {
            Console.WriteLine(studentGroup.Key == <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">true</span> ? <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"High averages"</span> : <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Low averages"</span>);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentGroup)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"   {0}, {1}:{2}"</span>, student.Last, student.First, student.Scores.Average());
            }
        }

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Keep the console window open in debug mode.</span>
        Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Press any key to exit."</span>);
        Console.ReadKey();
    }
}
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/* Output:
  Low averages
   Omelchenko, Svetlana:77.5
   O'Donnell, Claire:72.25
   Garcia, Cesar:75.5
  High averages
   Mortensen, Sven:93.5
   Garcia, Debra:88.25
*/</span>

</pre></td></tr></table></span></div></div></div><h3 class="subHeading">按数值范围进行分组</h3><div class="subsection"><p>下一个示例使用表达式创建表示百分比范围的数值组键。请注意，该示例使用 <mshelp:link keywords="13c9c1a4-ce57-48ef-8e1b-4c2a59b99fb4" tabindex="0">let</mshelp:link> 作为方法调用结果的方便存储位置，从而无需在 <span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 子句中调用该方法两次。另请注意，在 <span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 子句中，为了避免发生“被零除”异常，代码进行了相应检查以确保学生的平均成绩不为零。有关如何在查询表达式中安全使用方法的更多信息，请参见<span sdata="link"><a href="4ce6c081-7731-4b8f-b4fa-d947f165a18a.htm">如何：在查询表达式中处理异常（C# 编程指南）</a></span>。</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> GroupSample2
{
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// The element type of the data source.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> Student
    {
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> First { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span> Last { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> ID { <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">get</span>; <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">set</span>; }
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; Scores;
    }

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> List&lt;Student&gt; GetStudents()
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Use a collection initializer to create the data source. Note that each element</span>
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//  in the list contains an inner sequence of scores.</span>
        List&lt;Student&gt; students = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;Student&gt;
        {
           <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Svetlana"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Omelchenko"</span>, ID=111, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; {97, 72, 81, 60}},
           <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Claire"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"O'Donnell"</span>, ID=112, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; {75, 84, 91, 39}},
           <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Sven"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Mortensen"</span>, ID=113, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; {99, 89, 91, 95}},
           <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Cesar"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Garcia"</span>, ID=114, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; {72, 81, 65, 84}},
           <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> Student {First=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Debra"</span>, Last=<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Garcia"</span>, ID=115, Scores= <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> List&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>&gt; {97, 89, 85, 82}} 
        };

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">return</span> students;

    }

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// This method groups students into percentile ranges based on their</span>
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// grade average. The Average method returns a double, so to produce a whole</span>
    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// number it is necessary to cast to int before dividing by 10. </span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main()
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Obtain the data source.</span>
        List&lt;Student&gt; students = GetStudents();

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Write the query.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> studentQuery =
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> students
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">let</span> avg = (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span>)student.Scores.Average()
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">group</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">by</span> (avg == 0 ? 0 : avg / 10) <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> g
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">orderby</span> g.Key
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> g;            

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Execute the query.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> studentGroup <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentQuery)
        {
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">int</span> temp = studentGroup.Key * 10;
            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Students with an average between {0} and {1}"</span>, temp, temp + 10);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> student <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> studentGroup)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"   {0}, {1}:{2}"</span>, student.Last, student.First, student.Scores.Average());
            }
        }

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Keep the console window open in debug mode.</span>
        Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Press any key to exit."</span>);
        Console.ReadKey();
    }
}
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/* Output:
     Students with an average between 70 and 80
       Omelchenko, Svetlana:77.5
       O'Donnell, Claire:72.25
       Garcia, Cesar:75.5
     Students with an average between 80 and 90
       Garcia, Debra:88.25
     Students with an average between 90 and 100
       Mortensen, Sven:93.5
 */</span>

</pre></td></tr></table></span></div></div></div><h3 class="subHeading">按复合键进行分组</h3><div class="subsection"><p>当您想要按照多个键对元素进行分组时，可使用复合键。通过使用匿名类型或命名类型来存储键元素，可以创建复合键。在下面的示例中，假定已经使用名为 <span class="code">surname</span> 和 <span class="code">city</span> 的两个成员声明了类 <span class="code">Person</span>。<span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 子句使得为每组具有相同姓氏和相同城市的人员创建一个单独的组。</p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre>group person by new {name = person.surname, city = person.city};</pre></td></tr></table></span></div><p>如果必须将查询变量传递给其他方法，请使用命名类型。使用自动实现的属性作为键来创建一个特殊类，然后重写 <span sdata="cer" target="M:System.Object.Equals(System.Object)"><mshelp:link keywords="Overload:System.Object.Equals" tabindex="0">Equals</mshelp:link></span> 和 <span sdata="cer" target="M:System.Object.GetHashCode"><mshelp:link keywords="M:System.Object.GetHashCode" tabindex="0">GetHashCode</mshelp:link></span> 方法。还可以使用结构；在此情况下，并不绝对需要重写这些方法。有关更多信息，请参见<span sdata="link"><a href="1dc5a8ad-a4f7-4f32-8506-3fc6d8c8bfed.htm">如何：使用自动实现的属性实现轻量类（C# 编程指南）</a></span>和<span sdata="link"><mshelp:link keywords="218c27e6-3481-4870-9d30-d591eca757ae" tabindex="0">如何：在目录树中查询重复文件 (LINQ)</mshelp:link></span>。后一个主题包含一个代码示例，该示例演示如何将复合键与命名类型结合使用。</p></div></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />示例</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><p>下面的示例演示在没有向组应用附加查询逻辑时将源数据排序放入不同组中的标准模式。这称为不带延续的分组。字符串数组中的元素按照它们的第一个字母进行分组。查询结果是一个 <span sdata="cer" target="T:System.Linq.IGrouping`2"><mshelp:link keywords="T:System.Linq.IGrouping`2" tabindex="0">IGrouping<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TKey, TElement<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></mshelp:link></span> 类型，其中包含一个 <span sdata="langKeyword" value="char"><span class="keyword">char</span></span> 类型的公共 <span class="code">Key</span> 属性以及一个包含分组中每个项的 <span sdata="cer" target="T:System.Collections.Generic.IEnumerable`1"><mshelp:link keywords="T:System.Collections.Generic.IEnumerable`1" tabindex="0">IEnumerable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></mshelp:link></span> 集合。</p><p><span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 子句的结果是序列的序列。因此，若要访问所返回的每个组中的单个元素，请在循环访问组键的循环内使用嵌套的 <span sdata="langKeyword" value="foreach"><span class="keyword">foreach</span></span> 循环，如下面的示例所示。</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> GroupExample1
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main()
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create a data source.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>[] words = { <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"blueberry"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"chimpanzee"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"abacus"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"banana"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"apple"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"cheese"</span> };

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create the query.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> wordGroups =
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> w <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> words
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">group</span> w <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">by</span> w[0];

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Execute the query.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> wordGroup <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> wordGroups)
        {
            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Words that start with the letter '{0}':"</span>, wordGroup.Key);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> word <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> wordGroup)
            {
                Console.WriteLine(word);
            }
        }

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Keep the console window open in debug mode</span>
        Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Press any key to exit."</span>);
        Console.ReadKey();
    }        
}
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/* Output:
      Words that start with the letter 'b':
        blueberry
        banana
      Words that start with the letter 'c':
        chimpanzee
        cheese
      Words that start with the letter 'a':
        abacus
        apple
     */</span>

</pre></td></tr></table></span></div></div><p>此示例演示在创建组之后，如何使用通过 <span sdata="langKeyword" value="into"><span class="keyword">into</span></span> 实现的延续对这些组执行附加逻辑。有关更多信息，请参见 <span sdata="link"><a href="81ec62c1-f0b1-4755-8a31-959876e77f65.htm">into（C# 参考）</a></span>。下面的示例查询每个组以仅选择那些键值为元音的元素。</p><div name="snippetGroup"><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" title="“复制”图像" src="../icons/copycode.gif" />复制代码</span></th></tr><tr><td colspan="2"><pre><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">class</span> GroupClauseExample2
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">static</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> Main()
    {
        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create the data source.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>[] words2 = { <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"blueberry"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"chimpanzee"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"abacus"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"banana"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"apple"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"cheese"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"elephant"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"umbrella"</span>, <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"anteater"</span> };

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Create the query.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> wordGroups2 =
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">from</span> w <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> words2
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">group</span> w <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">by</span> w[0] <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">into</span> grps
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">where</span> (grps.Key == 'a' || grps.Key == 'e' || grps.Key == 'i'
                   || grps.Key == 'o' || grps.Key == 'u')
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">select</span> grps;

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Execute the query.</span>
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> wordGroup <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> wordGroups2)
        {
            Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Groups that start with a vowel: {0}"</span>, wordGroup.Key);
            <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">foreach</span> (<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> word <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">in</span> wordGroup)
            {
                Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"   {0}"</span>, word);
            }
        }

        <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">// Keep the console window open in debug mode</span>
        Console.WriteLine(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Press any key to exit."</span>);
        Console.ReadKey();
    }
}
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">/* Output:
    Groups that start with a vowel: a
        abacus
        apple
        anteater
    Groups that start with a vowel: e
        elephant
    Groups that start with a vowel: u
        umbrella
*/</span>    

</pre></td></tr></table></span></div></div></div><h1 class="heading"><span onclick="ExpandCollapse(languageReferenceRemarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(languageReferenceRemarksToggle, event)" tabindex="0"><img id="languageReferenceRemarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />备注</span></h1><div id="languageReferenceRemarksSection" class="section" name="collapseableSection" style=""><p>编译时，<span sdata="langKeyword" value="group"><span class="keyword">group</span></span> 子句被转换为对 <span sdata="cer" target="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})"><mshelp:link keywords="Overload:System.Linq.Enumerable.GroupBy" tabindex="0">GroupBy</mshelp:link></span> 方法的调用。</p></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />请参见</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><h4 class="subHeading">任务</h4><div class="seeAlsoStyle"><span sdata="link"><a href="f48c64af-6d4e-473c-ab27-02f78b5ec2b9.htm">如何：对组进行分组（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="ee981053-3392-4245-a8c2-b3730211da0d.htm">如何：以各种方式对结果进行分组（C# 编程指南）</a></span></div><div class="seeAlsoStyle"><span sdata="link"><a href="7b0805cd-53b4-429d-86b6-d37fb08f2c95.htm">如何：对分组操作执行子查询（C# 编程指南）</a></span></div><h4 class="subHeading">概念</h4><div class="seeAlsoStyle"><span sdata="link"><a href="40638f19-fb46-4d26-a2d9-a383b48f5ed4.htm">LINQ 查询表达式（C# 编程指南）</a></span></div><h4 class="subHeading">参考</h4><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Linq.IGrouping`2"><mshelp:link keywords="T:System.Linq.IGrouping`2" tabindex="0">IGrouping<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TKey, TElement<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></mshelp:link></span></div><div class="seeAlsoStyle"><span sdata="cer" target="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})"><mshelp:link keywords="Overload:System.Linq.Enumerable.GroupBy" tabindex="0">GroupBy</mshelp:link></span></div><div class="seeAlsoStyle"><span sdata="cer" target="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})"><mshelp:link keywords="Overload:System.Linq.Enumerable.ThenBy" tabindex="0">ThenBy</mshelp:link></span></div><div class="seeAlsoStyle"><span sdata="cer" target="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})"><mshelp:link keywords="Overload:System.Linq.Enumerable.ThenByDescending" tabindex="0">ThenByDescending</mshelp:link></span></div><h4 class="subHeading">其他资源</h4><div class="seeAlsoStyle"><span sdata="link"><a href="6c9bec16-dbd7-4a7c-a060-fe4600b2021f.htm">查询关键字（C# 参考）</a></span></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" title="“页脚”图像" />
        </div>
<span id="feedbackarea">将有关本主题的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','09.00','09.00.08178.10000',fbBody,fbSubject);">反馈意见</a>发送给 Microsoft。</span>
</div>
    </div>
  </body>
</html>